{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/vue-resource/dist/vue-resource.common.js","app.js","src/app.js","src/components/carousel.js","src/components/image.js","src/components/single.js","src/components/split.js","src/components/stats.js","src/components/three-up.js","src/components/welcome.js","src/config.js","src/vue.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Promise$2","executor","this","state","PENDING","value","undefined","deferred","promise","x","resolve","reject","Promise$1","context","PromiseObj","bind","Util","Vue","util","debug","config","silent","warn","msg","console","error","nextTick","cb","ctx","trim","str","replace","isString","val","isBoolean","isFunction","isObject","obj","isPlainObject","Object","getPrototypeOf","prototype","isFormData","FormData","when","fulfilled","rejected","arguments","then","options","fn","opts","merge","$vm","$options","each","iterator","key","hasOwnProperty","target","args","array","slice","forEach","source","_merge","defaults","_assign","deep","isArray","root","next","url","match","query","urlParams","keys","Url","params","indexOf","expand","variables","tmpl","parse","expanded","push","apply","vars","template","operators","_","expression","literal","operator","values","charAt","substr","split","variable","tmp","exec","getValues","separator","join","encodeReserved","modifier","result","isDefined","toString","substring","parseInt","encodeValue","isKeyOperator","Array","filter","k","encodeURIComponent","map","part","test","encodeURI","transform","self","transforms","handler","factory","vm","serialize","scope","hash","plain","add","name","xdrClient","request","xdr","XDomainRequest","event","response","respondWith","responseText","status","statusText","abort","open","method","getUrl","timeout","onload","onerror","ontimeout","onprogress","send","getBody","cors","crossOrigin","SUPPORTS_CORS","client","emulateHTTP","requestUrl","protocol","ORIGIN_URL","host","body","emulateJSON","headers","JSON","stringify","contentType","data","json","text","jsonpClient","script","jsonp","callback","Math","random","type","window","document","removeChild","createElement","src","async","appendChild","before","header","toUpperCase","assign","Http","common","custom","toLowerCase","setTimeout","clearTimeout","xhrClient","xhr","XMLHttpRequest","parseHeaders","getAllResponseHeaders","progress","addEventListener","upload","credentials","withCredentials","setRequestHeader","row","Client","reqHandlers","pop","resHandlers","unshift","sendRequest","use","interceptors","Request","ok","Resource","actions","resource","action","$http","plugin","installed","http","Promise","defineProperties","$url","get","$resource","$promise","_this","RESOLVED","REJECTED","all","iterable","resolver","count","race","p$1","TypeError","called","notify","reason","shift","onResolved","onRejected","p","ie","documentMode","el","escape","href","port","hostname","pathname","search","location","classCallCheck","instance","Constructor","Response","_ref","blob","Blob","CUSTOM_HEADERS","X-Requested-With","COMMON_HEADERS","Accept","JSON_CONTENT_TYPE","Content-Type","put","post","patch","delete","save","update","remove","2","_interopRequireDefault","__esModule","default","_vue","_vue2","_config","_welcome","_welcome2","_single","_single2","_split","_split2","_threeUp","_threeUp2","currentUUID","currentView","returnData","currentLayoutIndex","currentLayoutTime","computed","serial","_serial","ready","log","updateData","setInterval","components","Welcome","Single","Split","methods","getRoutes","URL","API_ENDPOINT","GET_CONTENT","IMAGE_PATH","getConfig","uuid","display_group","layouts","rotateLayouts","component_type_id","images","filename","team_id","image","_this2","layout_number","layout","order","duration","./components/single","./components/split","./components/three-up","./components/welcome","./config","./vue","vue-resource","3","defineProperty","directive","current","slideId","style","opacity","className","prevSlide","extend","props","currentSlide","speed","setImagesArray","changeSlideNext","index","watch","../config","../vue","4","currentImage","checkNotNull","5","_image","_image2","_stats","_stats2","_carousel","_carousel2","image_url","video_url","component","component_data","Image","Stats","Carousel","./carousel","./image","./stats","6","left_component","left_component_data","right_component","right_component_data","location_id","7","title1","populateStats","stats","title","8","top_component","top_component_data","bottom_component","bottom_component_data","9","10","11","global","_typeof","Symbol","constructor","define","amd","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","c","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","b","camelize","camelizeRE","toUpper","hyphenate","hyphenateRE","classify","classifyRE","toArray","list","start","ret","to","from","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timestamp","later","last","Date","now","arr","cancellable","cancelled","cancel","looseEqual","Cache","limit","size","head","tail","_keymap","create","pushFilter","lastFilterIndex","tokens","filterTokenRE","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","hit","cache$1","inSingle","inDouble","curly","square","paren","prev","escapeRegex","regexEscapeRE","compileRegex","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","html","first","oneTime","lastIndex","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","beforeWithTransition","removeWithTransition","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","selector","querySelector","inDoc","node","doc","ownerDocument","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","prepend","firstChild","replaceChild","on","useCapture","off","removeEventListener","getClass","classname","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","id","is","expectedTag","_componentNameMap","isUnknownElement","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","guardProps","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","propsData","mixins","mixin","mixinOptions","warnMissing","camelizedId","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","formatSubPath","path","trimmed","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","warnNonExistent","$set","noop","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","queue","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","_maxUpdateCount","pushWatcher","q","user","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","callHook","attach","shouldCallRemove","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","floor","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","codes","charCode","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","kebab","camelPrefixes","normalize$1","_key","callActivateHooks","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","settablePathRE","parentPath","lowerCaseName","required","makePropsLinkFn","_props","inlineProps","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","valid","expectedTypes","assertedType","assertType","expectedType","formatType","formatValue","validator","coerce","String","pushJob","job","queue$1","flush","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","TYPE_TRANSITION","TYPE_ANIMATION","m","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","$remove","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","onRE","plural","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","internalDirectives","modifiers","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","some","transitionRE","bindRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","handlers","register","onAttached","callAttach","onDetached","callDetach","events","_initDOMHooks","hook","$emit","noop$1","Directive","_locked","_bound","_listeners","_host","_vue_directives","lifecycleMixin","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","resolved","requested","pendingCallbacks","cbs","dataAPI","clean","asStatement","$arguments","$delete","$watch","sync","immediate","filterRE$1","$interpolate","$log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","$broadcast","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","_comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","install","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","entry","newer","older","returnEntry","freeze","warnExpressionErrors","_delimitersChanged","_propBindingModes","formatComponentName","hasConsole","HTMLUnknownElement","HTMLElement","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","circle","ellipse","line","polygon","polyline","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","inMatch","itMatch","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","warnDuplicate","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCMA,YAUA,SAAAK,GAAAC,GAEAC,KAAAC,MAAAC,GACAF,KAAAG,MAAAC,OACAJ,KAAAK,WAEA,IAAAC,GAAAN,IAEA,KACAD,EAAA,SAAAQ,GACAD,EAAAE,QAAAD,IACA,SAAAzB,GACAwB,EAAAG,OAAA3B,KAEA,MAAAH,GACA2B,EAAAG,OAAA9B,IA2JA,QAAA+B,GAAAX,EAAAY,GAEAZ,YAAAa,IACAZ,KAAAM,QAAAP,EAEAC,KAAAM,QAAA,GAAAM,IAAAb,EAAAc,KAAAF,IAGAX,KAAAW,QAAAA,EA8DA,QAAAG,GAAAC,GACAC,GAAAD,EAAAC,KACAC,GAAAF,EAAAG,OAAAD,QAAAF,EAAAG,OAAAC,OAGA,QAAAC,GAAAC,GACA,mBAAAC,UAAAL,IACAK,QAAAF,KAAA,uBAAAC,GAIA,QAAAE,GAAAF,GACA,mBAAAC,UACAA,QAAAC,MAAAF,GAIA,QAAAG,GAAAC,EAAAC,GACA,MAAAV,IAAAQ,SAAAC,EAAAC,GAGA,QAAAC,GAAAC,GACA,MAAAA,GAAAC,QAAA,aAAA,IAKA,QAAAC,GAAAC,GACA,MAAA,gBAAAA,GAGA,QAAAC,GAAAD,GACA,MAAAA,MAAA,GAAAA,KAAA,EAGA,QAAAE,GAAAF,GACA,MAAA,kBAAAA,GAGA,QAAAG,GAAAC,GACA,MAAA,QAAAA,GAAA,gBAAAA,GAGA,QAAAC,GAAAD,GACA,MAAAD,GAAAC,IAAAE,OAAAC,eAAAH,IAAAE,OAAAE,UAGA,QAAAC,GAAAL,GACA,MAAA,mBAAAM,WAAAN,YAAAM,UAGA,QAAAC,GAAAvC,EAAAwC,EAAAC,GAEA,GAAAtC,GAAAI,EAAAF,QAAAL,EAEA,OAAA0C,WAAAlD,OAAA,EACAW,EAGAA,EAAAwC,KAAAH,EAAAC,GAGA,QAAAG,GAAAC,EAAAb,EAAAc,GAQA,MANAA,GAAAA,MAEAhB,EAAAgB,KACAA,EAAAA,EAAAvD,KAAAyC,IAGAe,EAAAF,EAAAnC,MAAAsC,IAAAhB,EAAAiB,SAAAH,IAAAD,GAAAI,SAAAH,IAGA,QAAAI,GAAAlB,EAAAmB,GAEA,GAAAlE,GAAAmE,CAEA,IAAA,gBAAApB,GAAAxC,OACA,IAAAP,EAAA,EAAAA,EAAA+C,EAAAxC,OAAAP,IACAkE,EAAA5D,KAAAyC,EAAA/C,GAAA+C,EAAA/C,GAAAA,OAEA,IAAA8C,EAAAC,GACA,IAAAoB,IAAApB,GACAA,EAAAqB,eAAAD,IACAD,EAAA5D,KAAAyC,EAAAoB,GAAApB,EAAAoB,GAAAA,EAKA,OAAApB,GAKA,QAAAe,GAAAO,GAEA,GAAAC,GAAAC,GAAAC,MAAAlE,KAAAmD,UAAA,EAMA,OAJAa,GAAAG,QAAA,SAAAC,GACAC,EAAAN,EAAAK,GAAA,KAGAL,EAGA,QAAAO,GAAAP,GAEA,GAAAC,GAAAC,GAAAC,MAAAlE,KAAAmD,UAAA,EAWA,OATAa,GAAAG,QAAA,SAAAC,GAEA,IAAA,GAAAP,KAAAO,GACA1D,SAAAqD,EAAAF,KACAE,EAAAF,GAAAO,EAAAP,MAKAE,EAGA,QAAAQ,GAAAR,GAEA,GAAAC,GAAAC,GAAAC,MAAAlE,KAAAmD,UAAA,EAMA,OAJAa,GAAAG,QAAA,SAAAC,GACAC,EAAAN,EAAAK,KAGAL,EAGA,QAAAM,GAAAN,EAAAK,EAAAI,GACA,IAAA,GAAAX,KAAAO,GACAI,IAAA9B,EAAA0B,EAAAP,KAAAY,GAAAL,EAAAP,MACAnB,EAAA0B,EAAAP,MAAAnB,EAAAqB,EAAAF,MACAE,EAAAF,OAEAY,GAAAL,EAAAP,MAAAY,GAAAV,EAAAF,MACAE,EAAAF,OAEAQ,EAAAN,EAAAF,GAAAO,EAAAP,GAAAW,IACA9D,SAAA0D,EAAAP,KACAE,EAAAF,GAAAO,EAAAP,IAKA,QAAAa,GAAArB,EAAAsB,GAEA,GAAAC,GAAAD,EAAAtB,EAMA,OAJAjB,GAAAiB,EAAAqB,QAAAE,EAAAC,MAAA,mBACAD,EAAAvB,EAAAqB,KAAA,IAAAE,GAGAA,EAGA,QAAAE,GAAAzB,EAAAsB,GAEA,GAAAI,GAAApC,OAAAqC,KAAAC,EAAA5B,QAAA6B,QACAJ,KACAF,EAAAD,EAAAtB,EAcA,OAZAM,GAAAN,EAAA6B,OAAA,SAAAzE,EAAAoD,GACAkB,EAAAI,QAAAtB,UACAiB,EAAAjB,GAAApD,KAIAqE,EAAAG,EAAAC,OAAAJ,GAEAA,IACAF,IAAAA,EAAAO,QAAA,SAAA,IAAA,KAAAL,GAGAF,EAOA,QAAAQ,GAAAR,EAAAM,EAAAG,GAEA,GAAAC,GAAAC,EAAAX,GACAY,EAAAF,EAAAF,OAAAF,EAMA,OAJAG,IACAA,EAAAI,KAAAC,MAAAL,EAAAC,EAAAK,MAGAH,EAGA,QAAAD,GAAAK,GAEA,GAAAC,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KACAR,IAEA,QACAM,KAAAN,EACAD,OAAA,SAAAnE,GACA,MAAA2E,GAAAzD,QAAA,6BAAA,SAAA2D,EAAAC,EAAAC,GACA,GAAAD,EAAA,CAEA,GAAAE,GAAA,KACAC,IAaA,IAXAL,EAAAV,QAAAY,EAAAI,OAAA,WACAF,EAAAF,EAAAI,OAAA,GACAJ,EAAAA,EAAAK,OAAA,IAGAL,EAAAM,MAAA,MAAAlC,QAAA,SAAAmC,GACA,GAAAC,GAAA,4BAAAC,KAAAF,EACAJ,GAAAT,KAAAC,MAAAQ,EAAAO,EAAAxF,EAAAgF,EAAAM,EAAA,GAAAA,EAAA,IAAAA,EAAA,KACAlB,EAAAI,KAAAc,EAAA,MAGAN,GAAA,MAAAA,EAAA,CAEA,GAAAS,GAAA,GAQA,OANA,MAAAT,EACAS,EAAA,IACA,MAAAT,IACAS,EAAAT,IAGA,IAAAC,EAAAjG,OAAAgG,EAAA,IAAAC,EAAAS,KAAAD,GAEA,MAAAR,GAAAS,KAAA,KAGA,MAAAC,GAAAZ,OAOA,QAAAS,GAAAxF,EAAAgF,EAAApC,EAAAgD,GAEA,GAAApG,GAAAQ,EAAA4C,GACAiD,IAEA,IAAAC,EAAAtG,IAAA,KAAAA,EACA,GAAA,gBAAAA,IAAA,gBAAAA,IAAA,iBAAAA,GACAA,EAAAA,EAAAuG,WAEAH,GAAA,MAAAA,IACApG,EAAAA,EAAAwG,UAAA,EAAAC,SAAAL,EAAA,MAGAC,EAAArB,KAAA0B,EAAAlB,EAAAxF,EAAA2G,EAAAnB,GAAApC,EAAA,WAEA,IAAA,MAAAgD,EACAQ,MAAA5C,QAAAhE,GACAA,EAAA6G,OAAAP,GAAA5C,QAAA,SAAA1D,GACAqG,EAAArB,KAAA0B,EAAAlB,EAAAxF,EAAA2G,EAAAnB,GAAApC,EAAA,SAGAlB,OAAAqC,KAAAvE,GAAA0D,QAAA,SAAAoD,GACAR,EAAAtG,EAAA8G,KACAT,EAAArB,KAAA0B,EAAAlB,EAAAxF,EAAA8G,GAAAA,UAIA,CACA,GAAAhB,KAEAc,OAAA5C,QAAAhE,GACAA,EAAA6G,OAAAP,GAAA5C,QAAA,SAAA1D,GACA8F,EAAAd,KAAA0B,EAAAlB,EAAAxF,MAGAkC,OAAAqC,KAAAvE,GAAA0D,QAAA,SAAAoD,GACAR,EAAAtG,EAAA8G,MACAhB,EAAAd,KAAA+B,mBAAAD,IACAhB,EAAAd,KAAA0B,EAAAlB,EAAAxF,EAAA8G,GAAAP,gBAKAI,EAAAnB,GACAa,EAAArB,KAAA+B,mBAAA3D,GAAA,IAAA0C,EAAAI,KAAA,MACA,IAAAJ,EAAAtG,QACA6G,EAAArB,KAAAc,EAAAI,KAAA,UAKA,MAAAV,EACAa,EAAArB,KAAA+B,mBAAA3D,IACA,KAAApD,GAAA,MAAAwF,GAAA,MAAAA,EAEA,KAAAxF,GACAqG,EAAArB,KAAA,IAFAqB,EAAArB,KAAA+B,mBAAA3D,GAAA,IAMA,OAAAiD,GAGA,QAAAC,GAAAtG,GACA,MAAAC,UAAAD,GAAA,OAAAA,EAGA,QAAA2G,GAAAnB,GACA,MAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,EAGA,QAAAkB,GAAAlB,EAAAxF,EAAAoD,GAIA,MAFApD,GAAA,MAAAwF,GAAA,MAAAA,EAAAW,EAAAnG,GAAA+G,mBAAA/G,GAEAoD,EACA2D,mBAAA3D,GAAA,IAAApD,EAEAA,EAIA,QAAAmG,GAAA1E,GACA,MAAAA,GAAAmE,MAAA,sBAAAoB,IAAA,SAAAC,GAIA,MAHA,eAAAC,KAAAD,KACAA,EAAAE,UAAAF,IAEAA,IACAf,KAAA,IAGA,QAAAf,GAAAvC,GAEA,GAAAgC,MACAT,EAAAQ,EAAA/B,EAAAuB,IAAAvB,EAAA6B,OAAAG,EAMA,OAJAA,GAAAlB,QAAA,SAAAN,SACAR,GAAA6B,OAAArB,KAGAe,EAUA,QAAAK,GAAAL,EAAAM,GAEA,GAEA2C,GAFAC,EAAAxH,SACA+C,EAAAuB,CAaA,OAVAxC,GAAAwC,KACAvB,GAAAuB,IAAAA,EAAAM,OAAAA,IAGA7B,EAAAG,KAAAyB,EAAA5B,QAAAyE,EAAApE,SAAAL,GAEA4B,EAAA8C,WAAA5D,QAAA,SAAA6D,GACAH,EAAAI,EAAAD,EAAAH,EAAAC,EAAArE,OAGAoE,EAAAxE,GA2EA,QAAA4E,GAAAD,EAAArD,EAAAuD,GACA,MAAA,UAAA7E,GACA,MAAA2E,GAAAhI,KAAAkI,EAAA7E,EAAAsB,IAIA,QAAAwD,GAAAjD,EAAAzC,EAAA2F,GAEA,GAEAC,GAFApE,EAAAQ,GAAAhC,GACA6F,EAAA5F,EAAAD,EAGAkB,GAAAlB,EAAA,SAAAhC,EAAAoD,GAEAwE,EAAA7F,EAAA/B,IAAAgE,GAAAhE,GAEA2H,IACAvE,EAAAuE,EAAA,KAAAE,GAAAD,EAAAxE,EAAA,IAAA,MAGAuE,GAAAnE,EACAiB,EAAAqD,IAAA9H,EAAA+H,KAAA/H,EAAAA,OACA4H,EACAF,EAAAjD,EAAAzE,EAAAoD,GAEAqB,EAAAqD,IAAA1E,EAAApD,KAKA,QAAAgI,GAAAC,GACA,MAAA,IAAA1H,GAAA,SAAAF,GAEA,GAAA6H,GAAA,GAAAC,gBACAZ,EAAA,SAAAa,GAEA,GAAAC,GAAAJ,EAAAK,YAAAJ,EAAAK,cACAC,OAAAN,EAAAM,OACAC,WAAAP,EAAAO,YAGApI,GAAAgI,GAGAJ,GAAAS,MAAA,WACA,MAAAR,GAAAQ,SAGAR,EAAAS,KAAAV,EAAAW,OAAAX,EAAAY,UAAA,GACAX,EAAAY,QAAA,EACAZ,EAAAa,OAAAxB,EACAW,EAAAc,QAAAzB,EACAW,EAAAe,UAAA,aACAf,EAAAgB,WAAA,aACAhB,EAAAiB,KAAAlB,EAAAmB,aAOA,QAAAC,GAAApB,EAAA/D,IAEArC,EAAAoG,EAAAqB,cAAAA,EAAArB,KACAA,EAAAqB,aAAA,GAGArB,EAAAqB,cAEAC,KACAtB,EAAAuB,OAAAxB,SAGAC,GAAAwB,aAGAvF,IAGA,QAAAoF,GAAArB,GAEA,GAAAyB,GAAAlF,EAAAM,MAAAN,EAAAyD,GAEA,OAAAyB,GAAAC,WAAAC,GAAAD,UAAAD,EAAAG,OAAAD,GAAAC,KAGA,QAAAC,GAAA7B,EAAA/D,GAEA+D,EAAA8B,aAAA9H,EAAAgG,EAAA6B,QACA7B,EAAA6B,KAAAtF,EAAAC,OAAAwD,EAAA6B,MACA7B,EAAA+B,QAAA,gBAAA,qCAGA3H,EAAA4F,EAAA6B,aACA7B,GAAA+B,QAAA,gBAGA/H,EAAAgG,EAAA6B,QACA7B,EAAA6B,KAAAG,KAAAC,UAAAjC,EAAA6B,OAGA5F,EAAA,SAAAmE,GAEA,GAAA8B,GAAA9B,EAAA2B,QAAA,eAEA,IAAArI,EAAAwI,IAAA,IAAAA,EAAAzF,QAAA,oBAEA,IACA2D,EAAA+B,KAAA/B,EAAAgC,OACA,MAAA7L,GACA6J,EAAA+B,KAAA,SAGA/B,GAAA+B,KAAA/B,EAAAiC,SAKA,QAAAC,GAAAtC,GACA,MAAA,IAAA1H,GAAA,SAAAF,GAEA,GAGAkH,GACAiD,EAJAzC,EAAAE,EAAAwC,OAAA,WACAC,EAAA,SAAAC,KAAAC,SAAArE,SAAA,IAAAZ,OAAA,GACAmE,EAAA,IAIAvC,GAAA,SAAAa,GAEA,GAAAI,GAAA,CAEA,UAAAJ,EAAAyC,MAAA,OAAAf,EACAtB,EAAA,IACA,UAAAJ,EAAAyC,OACArC,EAAA,KAGAnI,EAAA4H,EAAAK,YAAAwB,GAAAtB,OAAAA,WAEAsC,QAAAJ,GACAK,SAAAjB,KAAAkB,YAAAR,IAGAvC,EAAAxD,OAAAsD,GAAA2C,EAEAI,OAAAJ,GAAA,SAAArE,GACAyD,EAAAG,KAAAC,UAAA7D,IAGAmE,EAAAO,SAAAE,cAAA,UACAT,EAAAU,IAAAjD,EAAAY,SACA2B,EAAAK,KAAA,kBACAL,EAAAW,OAAA,EACAX,EAAAzB,OAAAxB,EACAiD,EAAAxB,QAAAzB,EAEAwD,SAAAjB,KAAAsB,YAAAZ,KAIA,QAAAC,GAAAxC,EAAA/D,GAEA,SAAA+D,EAAAW,SACAX,EAAAuB,OAAAe,GAGArG,EAAA,SAAAmE,GAEA,SAAAJ,EAAAW,SACAP,EAAA+B,KAAA/B,EAAAgC,UAKA,QAAAgB,GAAApD,EAAA/D,GAEApC,EAAAmG,EAAAoD,SACApD,EAAAoD,OAAA9L,KAAAM,KAAAoI,GAGA/D,IAOA,QAAA0E,GAAAX,EAAA/D,GAEA+D,EAAAwB,aAAA,wBAAAvC,KAAAe,EAAAW,UACAX,EAAA+B,QAAA,0BAAA/B,EAAAW,OACAX,EAAAW,OAAA,QAGA1E,IAGA,QAAAoH,GAAArD,EAAA/D,GAEA+D,EAAAW,OAAAX,EAAAW,OAAA2C,cACAtD,EAAA+B,QAAAwB,MAAAC,EAAAzB,QAAA0B,OAAAzD,EAAAqB,eAAAmC,EAAAzB,QAAA2B,OAAAF,EAAAzB,QAAA/B,EAAAW,OAAAgD,eAAA3D,EAAA+B,SAEA9F,IAOA,QAAA4E,GAAAb,EAAA/D,GAEA,GAAA4E,EAEAb,GAAAa,UACAA,EAAA+C,WAAA,WACA5D,EAAAS,SACAT,EAAAa,UAGA5E,EAAA,SAAAmE,GAEAyD,aAAAhD,KAIA,QAAAiD,GAAA9D,GACA,MAAA,IAAA1H,GAAA,SAAAF,GAEA,GAAA2L,GAAA,GAAAC,gBACA1E,EAAA,SAAAa,GAEA,GAAAC,GAAAJ,EAAAK,YAAA,YAAA0D,GAAAA,EAAA3D,SAAA2D,EAAAzD,cACAC,OAAA,OAAAwD,EAAAxD,OAAA,IAAAwD,EAAAxD,OACAC,WAAA,OAAAuD,EAAAxD,OAAA,aAAAhH,EAAAwK,EAAAvD,YACAuB,QAAAkC,EAAAF,EAAAG,0BAGA9L,GAAAgI,GAGAJ,GAAAS,MAAA,WACA,MAAAsD,GAAAtD,SAGAsD,EAAArD,KAAAV,EAAAW,OAAAX,EAAAY,UAAA,GACAmD,EAAAlD,QAAA,EACAkD,EAAAjD,OAAAxB,EACAyE,EAAAhD,QAAAzB,EAEAU,EAAAmE,WACA,QAAAnE,EAAAW,OACAoD,EAAAK,iBAAA,WAAApE,EAAAmE,UACA,gBAAAlF,KAAAe,EAAAW,SACAoD,EAAAM,OAAAD,iBAAA,WAAApE,EAAAmE,WAIAnE,EAAAsE,eAAA,IACAP,EAAAQ,iBAAA,GAGAtJ,EAAA+E,EAAA+B,YAAA,SAAAhK,EAAAsL,GACAU,EAAAS,iBAAAnB,EAAAtL,KAGAgM,EAAA7C,KAAAlB,EAAAmB,aAIA,QAAA8C,GAAAzK,GAEA,GACAzB,GACA+H,EACA9I,EAHA+K,IAwBA,OAnBA9G,GAAA1B,EAAAC,GAAAmE,MAAA,MAAA,SAAA8G,GAEAzN,EAAAyN,EAAAhI,QAAA,KACAqD,EAAAvG,EAAAkL,EAAAjJ,MAAA,EAAAxE,IACAe,EAAAwB,EAAAkL,EAAAjJ,MAAAxE,EAAA,IAEA+K,EAAAjC,GAEA/D,GAAAgG,EAAAjC,IACAiC,EAAAjC,GAAA/C,KAAAhF,GAEAgK,EAAAjC,IAAAiC,EAAAjC,GAAA/H,GAIAgK,EAAAjC,GAAA/H,IAIAgK,EAGA,QAAA2C,GAAAnM,GAUA,QAAAmM,GAAA1E,GACA,MAAA,IAAA1H,GAAA,SAAAF,GAEA,QAAA0F,KAEAwB,EAAAqF,EAAAC,MAEA/K,EAAAyF,GACAA,EAAAhI,KAAAiB,EAAAyH,EAAA/D,IAEAjD,EAAA,qCAAAsG,GAAA,wBACArD,KAIA,QAAAA,GAAAmE,GAEA,GAAAvG,EAAAuG,GAEAyE,EAAAC,QAAA1E,OACA,IAAAtG,EAAAsG,GAUA,MARAyE,GAAApJ,QAAA,SAAA6D,GACAc,EAAA9F,EAAA8F,EAAA,SAAAA,GACA,MAAAd,GAAAhI,KAAAiB,EAAA6H,IAAAA,UAIA9F,GAAA8F,EAAAhI,EAKA0F,KAGAA,KACAvF,GA7CA,GAEA+G,GAFAqF,GAAAI,GACAF,IAmDA,OAhDA/K,GAAAvB,KACAA,EAAA,MA2CAmM,EAAAM,IAAA,SAAA1F,GACAqF,EAAA5H,KAAAuC,IAGAoF,EAGA,QAAAK,GAAA/E,EAAA5H,GAEA,GAAAmJ,GAAAvB,EAAAuB,QAAAuC,CAEA1L,GAAAmJ,EAAAvB,IAiFA,QAAAwD,GAAA7I,GAEA,GAAAyE,GAAAxH,SACA2J,EAAAmD,EAAAtF,EAAArE,IAQA,OANAa,GAAAjB,MAAAyE,EAAApE,SAAAwI,EAAA7I,SAEA6I,EAAAyB,aAAAxJ,QAAA,SAAA6D,GACAiC,EAAAyD,IAAA1F,KAGAiC,EAAA,GAAA2D,IAAAvK,IAAAD,KAAA,SAAA0F,GAEA,MAAAA,GAAA+E,GAAA/E,EAAA9H,EAAAD,OAAA+H,IACA,SAAAA,GAMA,MAJAA,aAAAlJ,QACAiC,EAAAiH,GAGA9H,EAAAD,OAAA+H,KA+BA,QAAAgF,GAAAlJ,EAAAM,EAAA6I,EAAA1K,GAEA,GAAAyE,GAAAxH,SACA0N,IAaA,OAXAD,GAAA9B,MAAA6B,EAAAC,QAAAA,GAEApK,EAAAoK,EAAA,SAAAE,EAAAzF,GAEAyF,EAAAzK,GAAAoB,IAAAA,EAAAM,OAAAA,OAAA7B,EAAA4K,GAEAD,EAAAxF,GAAA,WACA,OAAAV,EAAAoG,OAAAhC,GAAA3I,EAAA0K,EAAA9K,eAIA6K,EAGA,QAAAzK,GAAA0K,EAAAjK,GAEA,GAEAuG,GAFAlH,EAAA4I,MAAAgC,GACA/I,IAGA,QAAAlB,EAAA/D,QAEA,IAAA,GAEAiF,EAAAlB,EAAA,GACAuG,EAAAvG,EAAA,EAEA,MAEA,KAAA,GAEA,sBAAA2D,KAAAtE,EAAAgG,QACAkB,EAAAvG,EAAA,GAEAkB,EAAAlB,EAAA,EAGA,MAEA,KAAA,GAEA,KAEA,SAEA,KAAA,kDAAAA,EAAA/D,OAAA,aAMA,MAHAoD,GAAAkH,KAAAA,EACAlH,EAAA6B,OAAA+G,MAAA5I,EAAA6B,OAAAA,GAEA7B,EAcA,QAAA8K,GAAA9M,GAEA8M,EAAAC,YAIAhN,EAAAC,GAEAA,EAAAuD,IAAAK,EACA5D,EAAAgN,KAAAnC,EACA7K,EAAA2M,SAAAF,EACAzM,EAAAiN,QAAAtN,EAEA2B,OAAA4L,iBAAAlN,EAAAwB,WAEA2L,MACAC,IAAA,WACA,MAAApL,GAAAhC,EAAAuD,IAAAtE,KAAAA,KAAAoD,SAAAkB,OAIAsJ,OACAO,IAAA,WACA,MAAApL,GAAAhC,EAAAgN,KAAA/N,KAAAA,KAAAoD,SAAA2K,QAIAK,WACAD,IAAA,WACA,MAAApN,GAAA2M,SAAA7M,KAAAb,QAIAqO,UACAF,IAAA,WACA,GAAAG,GAAAtO,IAEA,OAAA,UAAAD,GACA,MAAA,IAAAgB,GAAAiN,QAAAjO,EAAAuO,SAvwCA,GAAAC,IAAA,EACAC,GAAA,EACAtO,GAAA,CAqBAJ,GAAAW,OAAA,SAAA3B,GACA,MAAA,IAAAgB,GAAA,SAAAU,EAAAC,GACAA,EAAA3B,MAIAgB,EAAAU,QAAA,SAAAD,GACA,MAAA,IAAAT,GAAA,SAAAU,EAAAC,GACAD,EAAAD,MAIAT,EAAA2O,IAAA,SAAAC,GACA,MAAA,IAAA5O,GAAA,SAAAU,EAAAC,GAQA,QAAAkO,GAAAvP,GACA,MAAA,UAAAmB,GACAiG,EAAApH,GAAAmB,EACAqO,GAAA,EAEAA,IAAAF,EAAA/O,QACAa,EAAAgG,IAbA,GAAAoI,GAAA,EACApI,IAEA,KAAAkI,EAAA/O,QACAa,EAAAgG,EAcA,KAAA,GAAApH,GAAA,EAAAA,EAAAsP,EAAA/O,OAAAP,GAAA,EACAU,EAAAU,QAAAkO,EAAAtP,IAAA0D,KAAA6L,EAAAvP,GAAAqB,MAKAX,EAAA+O,KAAA,SAAAH,GACA,MAAA,IAAA5O,GAAA,SAAAU,EAAAC,GACA,IAAA,GAAArB,GAAA,EAAAA,EAAAsP,EAAA/O,OAAAP,GAAA,EACAU,EAAAU,QAAAkO,EAAAtP,IAAA0D,KAAAtC,EAAAC,KAKA,IAAAqO,IAAAhP,EAAAyC,SAEAuM,IAAAtO,QAAA,SAAAD,GACA,GAAAD,GAAAN,IAEA,IAAAM,EAAAL,QAAAC,GAAA,CACA,GAAAK,IAAAD,EACA,KAAA,IAAAyO,WAAA,+BAGA,IAAAC,IAAA,CAEA,KACA,GAAAlM,GAAAvC,GAAAA,EAAA,IAEA,IAAA,OAAAA,GAAA,gBAAAA,IAAA,kBAAAuC,GAYA,WAXAA,GAAApD,KAAAa,EAAA,SAAAA,GACAyO,GACA1O,EAAAE,QAAAD,GAEAyO,GAAA,GACA,SAAAlQ,GACAkQ,GACA1O,EAAAG,OAAA3B,GAEAkQ,GAAA,IAIA,MAAArQ,GAIA,YAHAqQ,GACA1O,EAAAG,OAAA9B,IAKA2B,EAAAL,MAAAsO,GACAjO,EAAAH,MAAAI,EACAD,EAAA2O,WAIAH,GAAArO,OAAA,SAAAyO,GACA,GAAA5O,GAAAN,IAEA,IAAAM,EAAAL,QAAAC,GAAA,CACA,GAAAgP,IAAA5O,EACA,KAAA,IAAAyO,WAAA,+BAGAzO,GAAAL,MAAAuO,GACAlO,EAAAH,MAAA+O,EACA5O,EAAA2O,WAIAH,GAAAG,OAAA,WACA,GAAA3O,GAAAN,IAEAwB,GAAA,WACA,GAAAlB,EAAAL,QAAAC,GACA,KAAAI,EAAAD,SAAAV,QAAA,CACA,GAAAU,GAAAC,EAAAD,SAAA8O,QACAC,EAAA/O,EAAA,GACAgP,EAAAhP,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,EAEA,KACAC,EAAAL,QAAAsO,GAEA/N,EADA,kBAAA4O,GACAA,EAAA1P,KAAAU,OAAAE,EAAAH,OAEAG,EAAAH,OAEAG,EAAAL,QAAAuO,KACA,kBAAAa,GACA7O,EAAA6O,EAAA3P,KAAAU,OAAAE,EAAAH,QAEAM,EAAAH,EAAAH,QAGA,MAAAxB,GACA8B,EAAA9B,QAOAmQ,GAAAhM,KAAA,SAAAsM,EAAAC,GACA,GAAA/O,GAAAN,IAEA,OAAA,IAAAF,GAAA,SAAAU,EAAAC,GACAH,EAAAD,SAAA8E,MAAAiK,EAAAC,EAAA7O,EAAAC,IACAH,EAAA2O,YAIAH,GAAAA,SAAA,SAAAO,GACA,MAAArP,MAAA8C,KAAA1C,OAAAiP,GAGA,IAAAzO,IAAAqK,OAAA+C,SAAAlO,CAaAY,GAAA+N,IAAA,SAAAC,EAAA/N,GACA,MAAA,IAAAD,GAAAE,GAAA6N,IAAAC,GAAA/N,IAGAD,EAAAF,QAAA,SAAAL,EAAAQ,GACA,MAAA,IAAAD,GAAAE,GAAAJ,QAAAL,GAAAQ,IAGAD,EAAAD,OAAA,SAAAyO,EAAAvO,GACA,MAAA,IAAAD,GAAAE,GAAAH,OAAAyO,GAAAvO,IAGAD,EAAAmO,KAAA,SAAAH,EAAA/N,GACA,MAAA,IAAAD,GAAAE,GAAAiO,KAAAH,GAAA/N,GAGA,IAAA2O,IAAA5O,EAAA6B,SAEA+M,IAAAzO,KAAA,SAAAF,GAEA,MADAX,MAAAW,QAAAA,EACAX,MAGAsP,GAAAxM,KAAA,SAAAH,EAAAC,GAUA,MARAD,IAAAA,EAAA9B,MAAAb,KAAAW,UACAgC,EAAAA,EAAA9B,KAAAb,KAAAW,UAGAiC,GAAAA,EAAA/B,MAAAb,KAAAW,UACAiC,EAAAA,EAAA/B,KAAAb,KAAAW,UAGA,GAAAD,GAAAV,KAAAM,QAAAwC,KAAAH,EAAAC,GAAA5C,KAAAW,UAGA2O,GAAAA,SAAA,SAAA1M,GAMA,MAJAA,IAAAA,EAAA/B,MAAAb,KAAAW,UACAiC,EAAAA,EAAA/B,KAAAb,KAAAW,UAGA,GAAAD,GAAAV,KAAAM,QAAAN,SAAA4C,GAAA5C,KAAAW,UAGA2O,GAAAA,WAAA,SAAAzE,GAEA,MAAA7K,MAAA8C,KAAA,SAAA3C,GAEA,MADA0K,GAAAnL,KAAAM,MACAG,GACA,SAAA+O,GAEA,MADArE,GAAAnL,KAAAM,MACAY,GAAAH,OAAAyO,KAIA,IAAAjO,KAAA,EACAD,MACA2C,MA0BAQ,GAAA4C,MAAA5C,QAmEAwH,GAAAtJ,OAAAsJ,QAAA1H,EAkQAsL,GAAArE,SAAAsE,aACAC,GAAAvE,SAAAE,cAAA,IAyBAzG,GAAA5B,SACAuB,IAAA,GACAF,KAAA,KACAQ,WAOAD,EAAA8C,YAAAnC,EAAAd,EAAAJ,GAQAO,EAAAC,OAAA,SAAAzC,GAEA,GAAAyC,MACA8K,EAAAxI,kBAiBA,OAfAtC,GAAAqD,IAAA,SAAA1E,EAAApD,GAEA8B,EAAA9B,KACAA,EAAAA,KAGA,OAAAA,IACAA,EAAA,IAGAH,KAAAmF,KAAAuK,EAAAnM,GAAA,IAAAmM,EAAAvP,KAGA0H,EAAAjD,EAAAzC,GAEAyC,EAAAyB,KAAA,KAAAxE,QAAA,OAAA,MASA8C,EAAAM,MAAA,SAAAX,GASA,MAPAiL,MACAE,GAAAE,KAAArL,EACAA,EAAAmL,GAAAE,MAGAF,GAAAE,KAAArL,GAGAqL,KAAAF,GAAAE,KACA7F,SAAA2F,GAAA3F,SAAA2F,GAAA3F,SAAAjI,QAAA,KAAA,IAAA,GACA+N,KAAAH,GAAAG,KACA5F,KAAAyF,GAAAzF,KACA6F,SAAAJ,GAAAI,SACAC,SAAA,MAAAL,GAAAK,SAAAjK,OAAA,GAAA4J,GAAAK,SAAA,IAAAL,GAAAK,SACAC,OAAAN,GAAAM,OAAAN,GAAAM,OAAAlO,QAAA,MAAA,IAAA,GACAkG,KAAA0H,GAAA1H,KAAA0H,GAAA1H,KAAAlG,QAAA,KAAA,IAAA,IA8DA,IAAAkI,IAAApF,EAAAM,MAAA+K,SAAAL,MACAjG,GAAA,mBAAA,IAAA0C,gBA+SA6D,GAAA,SAAAC,EAAAC,GACA,KAAAD,YAAAC,IACA,KAAA,IAAApB,WAAA,sCAQAqB,GAAA,WACA,QAAAA,GAAAnG,EAAAoG,GACA,GAAA/L,GAAA+L,EAAA/L,IACA6F,EAAAkG,EAAAlG,QACAxB,EAAA0H,EAAA1H,OACAC,EAAAyH,EAAAzH,UACAqH,IAAAjQ,KAAAoQ,GAGApQ,KAAAsE,IAAAA,EACAtE,KAAAiK,KAAAA,EACAjK,KAAAmK,QAAAA,MACAnK,KAAA2I,OAAAA,GAAA,EACA3I,KAAA4I,WAAAA,GAAA,GACA5I,KAAAuN,GAAA5E,GAAA,KAAAA,EAAA,IAeA,MAZAyH,GAAA7N,UAAAkI,KAAA,WACA,MAAAzK,MAAAiK,MAGAmG,EAAA7N,UAAA+N,KAAA,WACA,MAAA,IAAAC,OAAAvQ,KAAAiK,QAGAmG,EAAA7N,UAAAiI,KAAA,WACA,MAAAJ,MAAAnF,MAAAjF,KAAAiK,OAGAmG,KAGA9C,GAAA,WACA,QAAAA,GAAAvK,GACAkN,GAAAjQ,KAAAsN,GAGAtN,KAAA+I,OAAA,MACA/I,KAAAiK,KAAA,KACAjK,KAAA4E,UACA5E,KAAAmK,WAEAwB,GAAA3L,KAAA+C,GAeA,MAZAuK,GAAA/K,UAAAyG,OAAA,WACA,MAAArE,GAAA3E,OAGAsN,EAAA/K,UAAAgH,QAAA,WACA,MAAAvJ,MAAAiK,MAGAqD,EAAA/K,UAAAkG,YAAA,SAAAwB,EAAAlH,GACA,MAAA,IAAAqN,IAAAnG,EAAA0B,GAAA5I,OAAAuB,IAAAtE,KAAAgJ,aAGAsE,KAOAkD,IAAAC,mBAAA,kBACAC,IAAAC,OAAA,qCACAC,IAAAC,eAAA,iCA0BAjF,GAAA7I,WAEA6I,EAAAzB,SACA2G,IAAAF,GACAG,KAAAH,GACAI,MAAAJ,GACAK,SAAAL,GACA9E,OAAA0E,GACA3E,OAAA6E,IAGA9E,EAAAyB,cAAA7B,EAAAvC,EAAAF,EAAAkB,EAAAW,EAAAa,EAAAjC,IAEA,MAAA,SAAA,OAAA,SAAA3F,QAAA,SAAAkF,GAEA6C,EAAA7C,GAAA,SAAAzE,EAAAvB,GACA,MAAA/C,MAAA2L,GAAA5I,OAAAuB,IAAAA,EAAAyE,OAAAA,SAIA,OAAA,MAAA,SAAAlF,QAAA,SAAAkF,GAEA6C,EAAA7C,GAAA,SAAAzE,EAAA2F,EAAAlH,GACA,MAAA/C,MAAA2L,GAAA5I,OAAAuB,IAAAA,EAAAyE,OAAAA,EAAAkB,KAAAA,QA+DAuD,EAAAC,SAEAU,KAAApF,OAAA,OACAmI,MAAAnI,OAAA,QACAvE,OAAAuE,OAAA,OACAoI,QAAApI,OAAA,OACAqI,QAAArI,OAAA,UACAkI,UAAAlI,OAAA,WAkDA,mBAAAkC,SAAAA,OAAAlK,KACAkK,OAAAlK,IAAAqM,IAAAS,GAGAhO,EAAAJ,QAAAoO,OCEMwD,GAAG,SAASlS,EAAQU,EAAOJ,GACjC,YAwBA,SAAS6R,GAAuBnP,GAAO,MAAOA,IAAOA,EAAIoP,WAAapP,GAAQqP,UAASrP,GC1zCvF,GAAAsP,GAAAtS,EAAA,SDsyCIuS,EAAQJ,EAAuBG,GCnyCnCE,EAAAxS,EAAA,YAEAyS,EAAAzS,EAAA,wBDuyCI0S,EAAYP,EAAuBM,GCtyCvCE,EAAA3S,EAAA,uBD0yCI4S,EAAWT,EAAuBQ,GCzyCtCE,EAAA7S,EAAA,sBD6yCI8S,EAAUX,EAAuBU,GC5yCrCE,EAAA/S,EAAA,yBDgzCIgT,EAAYb,EAAuBY,ECvzCvCR,GAAAA,WAAItE,IAAIjO,EAAQ,gBASP,IAAAuS,GAAAA,YAELjC,GAAI,OAEJlF,MACI6H,YAAa,GAEbC,YAAa,UACbC,cACA/H,QACAgI,mBAAoB,EACpBC,kBAAmB,GAGvBC,UACIC,OAAA,SAAAC,GAAA,QAAAD,KAAA,MAAAC,GAAAvN,MAAApF,KAAA6C,WAAA,MAAA6P,GAAAhM,SAAA,WAAA,MAAAiM,GAAAjM,YAAAgM,GAAQ,WACJ,MAAOA,WAIfE,MApBa,WAqBTtR,QAAQuR,IAAI,kBAEZ7S,KAAK8S,aAELC,YAAY,WACP/S,KAAK8S,cACRjS,KAAKb,MAAO,MAIlBgT,YACIC,QAAApB,EAAAA,WACAqB,OAAAnB,EAAAA,WACAoB,MAAAlB,EAAAA,YAGJmB,SAEIC,UAFK,WAGD,GAAMC,GAAM,mBACNC,EAAeD,EAAM,SAE3B,QACIA,IAAOA,EACPC,aAAgBA,EAChBC,YAAeD,EAAe,cAC9BE,WAAcH,EAAM,gBAI5BR,WAAY,WAAY,GAAAxE,GAAAtO,IAEpBA,MAAK4N,MAAMO,KAAI,EAAAwD,EAAA+B,aAAYF,YAAc,IAAMxT,KAAK0S,QAAQ5P,KAAK,SAAC0F,GAE9D8F,EAAKgE,WAAa9J,EAASgC,OAE3BlJ,QAAQuR,IAAIvE,EAAKgE,YAGbhE,EAAKgE,WAAWqB,MAAQrF,EAAK8D,cAE7B9D,EAAK8D,YAAc9D,EAAKgE,WAAWqB,KAG/BrF,EAAKgE,WAAWsB,cAcVtF,EAAKgE,WAAWsB,cAAcC,SAAWvF,EAAKgE,WAAWsB,cAAcC,QAAQlU,OAAS,EAE9F2O,EAAKwF,cAAcxF,EAAKgE,WAAWsB,cAAcC,UAIQ,QAAtDvF,EAAKgE,WAAWsB,cAAcC,QAAQ,GAAG7I,KAAK9C,KAC7CoG,EAAK+D,YAALF,EAAAA,WAEA7D,EAAK+D,YAAc/D,EAAKgE,WAAWsB,cAAcC,QAAQ,GAAG7I,KAAK9C,KAErEoG,EAAK/D,KAAO+D,EAAKgE,WAAWsB,cAAcC,QAAQ,KAxBlDvF,EAAK+D,YAAc,SACnB/D,EAAK/D,MACDyI,aAEQe,kBAAmB,EACnBC,SAEQC,SAAU3F,EAAK+E,YAAYI,YAAjB,IAAkCnF,EAAKgE,WAAW/H,KAAK2J,QAAvD,KAAoE5F,EAAKgE,WAAW/H,KAAK4J,cAsBhI,SAAC3L,GAEAlH,QAAQuR,IAAI,UAAWrK,MAK/BsL,cAjEK,WAiEU,GAAAM,GAAApU,KAGP6T,EAAU7T,KAAKsS,WAAWsB,cAAcC,QACxCQ,EAAgBR,EAAQlU,MAE5BkU,GAAQhQ,QAAQ,SAACyQ,GACVA,EAAOC,OAASH,EAAK7B,qBACG,QAApB+B,EAAOtJ,KAAK9C,KACXkM,EAAK/B,YAALF,EAAAA,WAEAiC,EAAK/B,YAAciC,EAAOtJ,KAAK9C,KAEnCkM,EAAK5B,kBAAoB8B,EAAOE,SAChCJ,EAAK7J,KAAO+J,KAIpBtI,WAAW,WACJoI,EAAK7B,mBAAqB8B,EACzBD,EAAK7B,qBAEL6B,EAAK7B,mBAAqB,EAE9B6B,EAAKN,iBACmB,IAAzB9T,KAAKwS,yBD6zCjBiC,sBAAsB,EAAEC,qBAAqB,EAAEC,wBAAwB,EAAEC,uBAAuB,EAAEC,WAAW,GAAGC,QAAQ,GAAGC,eAAe,IAAIC,GAAG,SAAS7V,EAAQU,EAAOJ,GAC5K,YAYA,SAAS6R,GAAuBnP,GAAO,MAAOA,IAAOA,EAAIoP,WAAapP,GAAQqP,UAASrP,GAVvFE,OAAO4S,eAAexV,EAAS,cAC3BU,OAAO,GE18CX,IAAAsR,GAAAtS,EAAA,UF+8CIuS,EAAQJ,EAAuBG,GE78CnCE,EAAAxS,EAAA,YAcAuS,GAAAA,WAAIwD,UAAU,cACVtQ,QAAS,aAAa,YACtBuM,OAAQ,SAAUgE,GACXA,GAAWnV,KAAK4E,OAAOwQ,SACtBpV,KAAKyP,GAAG4F,MAAMC,QAAU,EACxBtV,KAAKyP,GAAG8F,UAAY,uBAEhBvV,KAAK4E,OAAOwQ,SAAWpV,KAAK4E,OAAO4Q,WACvCxV,KAAKyP,GAAG4F,MAAMC,QAAU,EACxBtV,KAAKyP,GAAG8F,UAAY,yBAGpBvV,KAAKyP,GAAG4F,MAAMC,QAAU,EACxBtV,KAAKyP,GAAG8F,UAAY,uBFo9ChC9V,EAAAA,WE/8CeiS,EAAAA,WAAI+D,QACfC,OAAQ,QAERpQ,SAAA,sdAcAiF,KAAM,WACF,OACIoL,aAAc,EACdC,MAAO,EACP5B,YAIRpB,MAzBsB,WA2BlB5S,KAAK6V,iBAGL9C,YAAY,WACR/S,KAAK8V,mBACPjV,KAAKb,MAAqB,IAAbA,KAAK4V,QAIxBnD,UACI+C,UAAW,WAGP,MAAwB,IAArBxV,KAAK2V,aACG3V,KAAKgU,OAAOrU,OAAO,EACvBK,KAAK2V,aAAe,IAInCvC,SAEIyC,eAFK,WAKE7V,KAAKuK,KAAKyJ,SACThU,KAAKgU,OAAShU,KAAKuK,KAAKyJ,OAAO7M,IAAI,SAACgN,EAAO/U,GACvC,GAAImL,IACAjG,KAAM,EAAAqN,EAAA+B,aAAYD,YAAZ,IAA6BU,EAAMD,QAAnC,KAAgDC,EAAMF,SAC5D8B,MAAO3W,EAEX,OAAOmL,OAKnBuL,gBAhBK,WAoBE9V,KAAK2V,cAAgB3V,KAAKgU,OAAOrU,OAAO,EACvCK,KAAK2V,aAAe,EAEnB3V,KAAK2V,iBAKlBK,OAGIzL,KAAM,WACFvK,KAAK2V,aAAe,EACpB3V,KAAK6V,uBFm8CdI,YAAY,GAAGC,SAAS,KAAKC,GAAG,SAAShX,EAAQU,EAAOJ,GAC3D,YAYA,SAAS6R,GAAuBnP,GAAO,MAAOA,IAAOA,EAAIoP,WAAapP,GAAQqP,UAASrP,GAVvFE,OAAO4S,eAAexV,EAAS,cAC3BU,OAAO,GGxjDX,IAAAsR,GAAAtS,EAAA,UH6jDIuS,EAAQJ,EAAuBG,GG3jDnCE,EAAAxS,EAAA,YHikDAM,GAAAA,WG/jDeiS,EAAAA,WAAI+D,QAEfC,OAAQ,QAERpQ,SAAA,gHAIAiF,KAAM,WACF,OACI6L,aAAc,KAItBxD,MAdsB,WAelB5S,KAAKqW,gBAGTjD,SACIiD,aADK,WAEDrW,KAAKoW,aAAgD,MAAhCpW,KAAKuK,KAAKyJ,OAAO,GAAGC,SAAoB,mBAAoB,EAAAtC,EAAA+B,aAAYD,YAAZ,IAA6BzT,KAAKuK,KAAKyJ,OAAO,GAAGE,QAAjD,KAA8DlU,KAAKuK,KAAKyJ,OAAO,GAAGC,WAI3K+B,OACIzL,KAAM,WACFvK,KAAKqW,qBHokDdJ,YAAY,GAAGC,SAAS,KAAKI,GAAG,SAASnX,EAAQU,EAAOJ,GAC3D,YAsBA,SAAS6R,GAAuBnP,GAAO,MAAOA,IAAOA,EAAIoP,WAAapP,GAAQqP,UAASrP,GApBvFE,OAAO4S,eAAexV,EAAS,cAC3BU,OAAO,GItmDX,IAAAsR,GAAAtS,EAAA,UJ2mDIuS,EAAQJ,EAAuBG,GIzmDnC8E,EAAApX,EAAA,WJ6mDIqX,EAAUlF,EAAuBiF,GI5mDrCE,EAAAtX,EAAA,WJgnDIuX,EAAUpF,EAAuBmF,GI/mDrCE,EAAAxX,EAAA,cJmnDIyX,EAAatF,EAAuBqF,EAIxClX,GAAAA,WIrnDeiS,EAAAA,WAAI+D,QAEfC,OAAQ,QAERpQ,SAAA,qIAMAiF,KAAM,WACF,OACIsM,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,oBAIRhE,YACIiE,MAAAT,EAAAA,WACAU,MAAAR,EAAAA,WACAS,SAAAP,EAAAA,YAGJhE,MAzBsB,WA2B8B,KAA7C5S,KAAKuK,KAAKyI,WAAW,GAAGe,mBACvB/T,KAAK+W,UAAY,QACjB/W,KAAKgX,eAAiBhX,KAAKuK,KAAKyI,WAAW,KAG3ChT,KAAK+W,UAAY,WACjB/W,KAAKgX,eAAiBhX,KAAKuK,KAAKyI,WAAW,KAKnDI,WAIA4C,aJmnDDE,SAAS,GAAGkB,aAAa,EAAEC,UAAU,EAAEC,UAAU,IAAIC,GAAG,SAASpY,EAAQU,EAAOJ,GACnF,YAsBA,SAAS6R,GAAuBnP,GAAO,MAAOA,IAAOA,EAAIoP,WAAapP,GAAQqP,UAASrP,GApBvFE,OAAO4S,eAAexV,EAAS,cAC3BU,OAAO,GKvqDX,IAAAsR,GAAAtS,EAAA,UL4qDIuS,EAAQJ,EAAuBG,GK1qDnC8E,EAAApX,EAAA,WL8qDIqX,EAAUlF,EAAuBiF,GK7qDrCE,EAAAtX,EAAA,WACAwX,GLgrDcrF,EAAuBmF,GKhrDrCtX,EAAA,eLorDIyX,EAAatF,EAAuBqF,EAIxClX,GAAAA,WKtrDeiS,EAAAA,WAAI+D,QAEfC,OAAQ,QAERpQ,SAAA,0VAWAiF,KAAM,WACF,OACIsM,UAAW,GACXC,UAAW,GACXU,eAAgB,GAChBC,uBACAC,gBAAiB,GACjBC,0BAIR3E,YACIiE,MAAAT,EAAAA,WACAW,SAAAP,EAAAA,YAGJhE,MA/BsB,WA+Bf,GAAAtE,GAAAtO,IACHA,MAAKuK,KAAKyI,WAAWnP,QAAQ,SAACkT,GAEE,GAAzBA,EAAUa,YAEyB,KAA/Bb,EAAUhD,mBACTzF,EAAKkJ,eAAiB,QACtBlJ,EAAKmJ,oBAAsBV,IAE3BzI,EAAKkJ,eAAiB,WACtBlJ,EAAKmJ,oBAAsBV,GAKG,KAA/BA,EAAUhD,mBACTzF,EAAKoJ,gBAAkB,QACvBpJ,EAAKqJ,qBAAuBZ,IAE5BzI,EAAKoJ,gBAAkB,WACvBpJ,EAAKqJ,qBAAuBZ,MAQ5C3D,WAIA4C,aL+qDDE,SAAS,GAAGkB,aAAa,EAAEC,UAAU,EAAEC,UAAU,IAAIO,GAAG,SAAS1Y,EAAQU,EAAOJ,GACnF,YAUA,SAAS6R,GAAuBnP,GAAO,MAAOA,IAAOA,EAAIoP,WAAapP,GAAQqP,UAASrP,GARvFE,OAAO4S,eAAexV,EAAS,cAC3BU,OAAO,GMxvDX,IAAAsR,GAAAtS,EAAA,UN6vDIuS,EAAQJ,EAAuBG,EAuBnChS,GAAAA,WM/vDeiS,EAAAA,WAAI+D,QAEfC,OAAQ,OAAQ,UAEhBpQ,SAAA,8EAMAiF,KAAM,WACF,OACIuN,OAAQ,KAIhBrF,YAIAG,MApBsB,WAqBlBtR,QAAQuR,IAAI7S,KAAKuK,MAEjBvK,KAAK+X,iBAIT3E,SAEI2E,cAAe,WAIX/X,KAAK8X,OAAS9X,KAAKuK,KAAKyN,MAAM,GAAGC,YNgwD1C/B,SAAS,KAAKgC,GAAG,SAAS/Y,EAAQU,EAAOJ,GAC5C,YAkBA,SAAS6R,GAAuBnP,GAAO,MAAOA,IAAOA,EAAIoP,WAAapP,GAAQqP,UAASrP,GAhBvFE,OAAO4S,eAAexV,EAAS,cAC3BU,OAAO,GO1zDX,IAAAsR,GAAAtS,EAAA,UP+zDIuS,EAAQJ,EAAuBG,GO7zDnC8E,EAAApX,EAAA,WPi0DIqX,EAAUlF,EAAuBiF,GOh0DrCI,EAAAxX,EAAA,cPo0DIyX,EAAatF,EAAuBqF,EAIxClX,GAAAA,WOt0DeiS,EAAAA,WAAI+D,QAEfC,OAAQ,QAERpQ,SAAA,yhBAcAiF,KAAM,WACF,OACIsM,UAAW,GACXC,UAAW,GACXqB,cAAe,GACfC,sBACAC,iBAAkB,GAClBC,yBACAZ,gBAAiB,GACjBC,0BAIR3E,YACIiE,MAAAT,EAAAA,WACAW,SAAAP,EAAAA,YAGJhE,MApCsB,WAoCf,GAAAtE,GAAAtO,IACHA,MAAKuK,KAAKyI,WAAWnP,QAAQ,SAACkT,GAEE,GAAzBA,EAAUa,YAEyB,KAA/Bb,EAAUhD,mBACTzF,EAAK6J,cAAgB,QACrB7J,EAAK8J,mBAAqBrB,IAE1BzI,EAAK6J,cAAgB,WACrB7J,EAAK8J,mBAAqBrB,GAGE,GAAzBA,EAAUa,YAEiB,KAA/Bb,EAAUhD,mBACTzF,EAAK+J,iBAAmB,QACxB/J,EAAKgK,sBAAwBvB,IAE7BzI,EAAK+J,iBAAmB,WACxB/J,EAAKgK,sBAAwBvB,GAIC,KAA/BA,EAAUhD,mBACTzF,EAAKoJ,gBAAkB,QACvBpJ,EAAKqJ,qBAAuBZ,IAE5BzI,EAAKoJ,gBAAkB,WACvBpJ,EAAKqJ,qBAAuBZ,MAQ5C3D,WAIA4C,aP4zDDE,SAAS,GAAGkB,aAAa,EAAEC,UAAU,IAAIkB,GAAG,SAASpZ,EAAQU,EAAOJ,GACvE,YAUA,SAAS6R,GAAuBnP,GAAO,MAAOA,IAAOA,EAAIoP,WAAapP,GAAQqP,UAASrP,GARvFE,OAAO4S,eAAexV,EAAS,cAC3BU,OAAO,GQl5DX,IAAAsR,GAAAtS,EAAA,URu5DIuS,EAAQJ,EAAuBG,EAInChS,GAAAA,WQz5DeiS,EAAAA,WAAI+D,QAEfC,OAAQ,OAAQ,UAEhBpQ,SAAA,ghBAWAiF,KAAM,WACF,UAKJkI,YAIAG,MAzBsB,WA0BlBtR,QAAQuR,IAAI,oBAIhBO,eRg5DD8C,SAAS,KAAKsC,IAAI,SAASrZ,EAAQU,EAAOJ,GAC7C,YSj7DO,SAASiU,KAEZ,GAAMJ,GAAM,mBACNC,EAAeD,EAAM,SAE3B,QACIA,IAAOA,EACPC,aAAgBA,EAChBC,YAAeD,EAAe,cAC9BE,WAAcH,EAAM,eT06D5BjR,OAAO4S,eAAexV,EAAS,cAC3BU,OAAO,IAEXV,ESt7DgBiU,UAAAA,OTo8DV+E,IAAI,SAAStZ,EAAQU,EAAOJ,IAClC,SAAWiZ,GACX,YAEA,IAAIC,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOtV,SAAwB,SAAUnB,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXyW,SAAyBzW,EAAI0W,cAAgBD,QAAUzW,IAAQyW,OAAOrW,UAAY,eAAkBJ,KUn8DrQ,SAAUuW,EAAQ/Q,GACE,YAAnB,mBAAOlI,GAAP,YAAAkZ,EAAOlZ,KAA0C,mBAAXI,GAAyBA,EAAOJ,QAAUkI,IAC9D,kBAAXmR,SAAyBA,OAAOC,IAAMD,OAAOnR,GACnD+Q,EAAO3X,IAAM4G,KAHfvH,OAIO,WAEN,QAAS4Y,GAAI7W,EAAKoB,EAAKxB,GACrB,GAAIkX,EAAO9W,EAAKoB,GAEd,YADApB,EAAIoB,GAAOxB,EAGb,IAAII,EAAI+W,OAEN,WADAF,GAAI7W,EAAIgX,MAAO5V,EAAKxB,EAGtB,IAAIqX,GAAKjX,EAAIkX,MACb,KAAKD,EAEH,YADAjX,EAAIoB,GAAOxB,EAKb,IAFAqX,EAAGE,QAAQ/V,EAAKxB,GAChBqX,EAAGG,IAAItK,SACHmK,EAAGI,IAEL,IADA,GAAIpa,GAAIga,EAAGI,IAAI7Z,OACRP,KAAK,CACV,GAAIwI,GAAKwR,EAAGI,IAAIpa,EAChBwI,GAAG6R,OAAOlW,GACVqE,EAAG8R,UAGP,MAAO3X,GAUT,QAAS4X,GAAIxX,EAAKoB,GAChB,GAAK0V,EAAO9W,EAAKoB,GAAjB,OAGOpB,GAAIoB,EACX,IAAI6V,GAAKjX,EAAIkX,MACb,KAAKD,EAKH,YAJIjX,EAAI+W,eACC/W,GAAIgX,MAAM5V,GACjBpB,EAAIuX,WAKR,IADAN,EAAGG,IAAItK,SACHmK,EAAGI,IAEL,IADA,GAAIpa,GAAIga,EAAGI,IAAI7Z,OACRP,KAAK,CACV,GAAIwI,GAAKwR,EAAGI,IAAIpa,EAChBwI,GAAGgS,SAASrW,GACZqE,EAAG8R,YAcT,QAAST,GAAO9W,EAAKoB,GACnB,MAAOC,IAAe9D,KAAKyC,EAAKoB,GAYlC,QAASsW,GAAUC,GACjB,MAAOC,IAAe1S,KAAKyS,GAU7B,QAASE,GAAWpY,GAClB,GAAIqY,IAAKrY,EAAM,IAAIsY,WAAW,EAC9B,OAAa,MAAND,GAAoB,KAANA,EAWvB,QAASE,GAAUha,GACjB,MAAgB,OAATA,EAAgB,GAAKA,EAAMuG,WAWpC,QAAS0T,GAASja,GAChB,GAAqB,gBAAVA,GACT,MAAOA,EAEP,IAAIka,GAASC,OAAOna,EACpB,OAAOoa,OAAMF,GAAUla,EAAQka,EAWnC,QAASG,GAAUra,GACjB,MAAiB,SAAVA,GAAoC,UAAVA,GAA4BA,EAU/D,QAASsa,GAAY7Y,GACnB,GAAI1C,GAAI0C,EAAIsY,WAAW,GACnBQ,EAAI9Y,EAAIsY,WAAWtY,EAAIjC,OAAS,EACpC,OAAOT,KAAMwb,GAAY,KAANxb,GAAoB,KAANA,EAAiC0C,EAAnBA,EAAIgC,MAAM,MAY3D,QAAS+W,GAAS/Y,GAChB,MAAOA,GAAIC,QAAQ+Y,GAAYC,GAGjC,QAASA,GAAQrV,EAAGyU,GAClB,MAAOA,GAAIA,EAAEvO,cAAgB,GAY/B,QAASoP,GAAUlZ,GACjB,MAAOA,GAAIC,QAAQkZ,GAAa,SAAShP,cAiB3C,QAASiP,GAASpZ,GAChB,MAAOA,GAAIC,QAAQoZ,GAAYJ,GAWjC,QAASha,GAAKmC,EAAItB,GAChB,MAAO,UAAUxC,GACf,GAAIM,GAAIqD,UAAUlD,MAClB,OAAOH,GAAIA,EAAI,EAAIwD,EAAGoC,MAAM1D,EAAKmB,WAAaG,EAAGtD,KAAKgC,EAAKxC,GAAK8D,EAAGtD,KAAKgC,IAY5E,QAASwZ,GAAQC,EAAMC,GACrBA,EAAQA,GAAS,CAGjB,KAFA,GAAIhc,GAAI+b,EAAKxb,OAASyb,EAClBC,EAAM,GAAItU,OAAM3H,GACbA,KACLic,EAAIjc,GAAK+b,EAAK/b,EAAIgc,EAEpB,OAAOC,GAUT,QAAS5F,GAAO6F,EAAIC,GAGlB,IAFA,GAAI7W,GAAOrC,OAAOqC,KAAK6W,GACnBnc,EAAIsF,EAAK/E,OACNP,KACLkc,EAAG5W,EAAKtF,IAAMmc,EAAK7W,EAAKtF,GAE1B,OAAOkc,GAYT,QAASpZ,GAASC,GAChB,MAAe,QAARA,GAA+B,YAAf,mBAAOA,GAAP,YAAAwW,EAAOxW,IAchC,QAASC,GAAcD,GACrB,MAAOuE,IAAShH,KAAKyC,KAASqZ,GAqBhC,QAASC,GAAItZ,EAAKoB,EAAKxB,EAAK2Z,GAC1BrZ,OAAO4S,eAAe9S,EAAKoB,GACzBpD,MAAO4B,EACP2Z,aAAcA,EACdC,UAAU,EACVC,cAAc,IAalB,QAASC,GAAUC,EAAMC,GACvB,GAAI9S,GAASvF,EAAM/C,EAASqb,EAAWxV,EACnCyV,EAAQ,QAASA,KACnB,GAAIC,GAAOC,KAAKC,MAAQJ,CACpBE,GAAOH,GAAQG,GAAQ,EACzBjT,EAAU+C,WAAWiQ,EAAOF,EAAOG,IAEnCjT,EAAU,KACVzC,EAASsV,EAAK1W,MAAMzE,EAAS+C,GACxBuF,IAAStI,EAAU+C,EAAO,OAGnC,OAAO,YAOL,MANA/C,GAAUX,KACV0D,EAAOb,UACPmZ,EAAYG,KAAKC,MACZnT,IACHA,EAAU+C,WAAWiQ,EAAOF,IAEvBvV,GAYX,QAAS3B,GAAQwX,EAAKla,GAEpB,IADA,GAAI/C,GAAIid,EAAI1c,OACLP,KACL,GAAIid,EAAIjd,KAAO+C,EAAK,MAAO/C,EAE7B,UAUF,QAASkd,GAAYtZ,GACnB,GAAIvB,GAAK,QAASA,KAChB,IAAKA,EAAG8a,UACN,MAAOvZ,GAAGoC,MAAMpF,KAAM6C,WAM1B,OAHApB,GAAG+a,OAAS,WACV/a,EAAG8a,WAAY,GAEV9a,EAYT,QAASgb,GAAWvd,EAAGwb,GAErB,MAAOxb,IAAKwb,MAAMxY,EAAShD,KAAMgD,EAASwY,KAAKtQ,KAAKC,UAAUnL,KAAOkL,KAAKC,UAAUqQ,GAiHtF,QAASgC,GAAMC,GACb3c,KAAK4c,KAAO,EACZ5c,KAAK2c,MAAQA,EACb3c,KAAK6c,KAAO7c,KAAK8c,KAAO1c,OACxBJ,KAAK+c,QAAU1a,OAAO2a,OAAO,MAyH/B,QAASC,KACP,GACIjW,GADA8S,EAAMlY,GAAIgC,MAAMsZ,GAAiB9d,IAAGuC,MAExC,IAAImY,EAAK,CACP9S,IACA,IAAImW,GAASrD,EAAIvV,MAAM6Y,GACvBpW,GAAOkB,KAAOiV,EAAO,GACjBA,EAAOxd,OAAS,IAClBqH,EAAOtD,KAAOyZ,EAAOvZ,MAAM,GAAGuD,IAAIkW,IAGlCrW,IACDsW,GAAIC,QAAUD,GAAIC,aAAepY,KAAK6B,GAEzCkW,GAAkB9d,GAAI,EAUxB,QAASie,GAAiBG,GACxB,GAAIC,GAAcpW,KAAKmW,GACrB,OACErd,MAAOia,EAASoD,GAChBE,SAAS,EAGX,IAAIC,GAAWlD,EAAY+C,GACvBE,EAAUC,IAAaH,CAC3B,QACErd,MAAOud,EAAUF,EAAMG,EACvBD,QAASA,GAuBf,QAASE,GAAe7e,GACtB,GAAI8e,GAAMC,GAAQ3P,IAAIpP,EACtB,IAAI8e,EACF,MAAOA,EAUT,KANAjc,GAAM7C,EACNgf,GAAWC,IAAW,EACtBC,GAAQC,GAASC,GAAQ,EACzBjB,GAAkB,EAClBI,MAEKle,GAAI,EAAGI,GAAIoC,GAAIjC,OAAQP,GAAII,GAAGJ,KAGjC,GAFAgf,GAAOnE,GACPA,GAAIrY,GAAIsY,WAAW9a,IACf2e,GAEQ,KAAN9D,IAAuB,KAATmE,KAAeL,IAAYA,QACxC,IAAIC,GAEC,KAAN/D,IAAuB,KAATmE,KAAeJ,IAAYA,QACxC,IAAU,MAAN/D,IACe,MAA1BrY,GAAIsY,WAAW9a,GAAI,IAAyC,MAA1BwC,GAAIsY,WAAW9a,GAAI,GAC7B,MAAlBke,GAAI7X,YAENyX,GAAkB9d,GAAI,EACtBke,GAAI7X,WAAa7D,GAAIgC,MAAM,EAAGxE,IAAGuC,QAGjCsb,QAGF,QAAQhD,IACN,IAAK,IACH+D,IAAW,CAAK,MAClB,KAAK,IACHD,IAAW,CAAK,MAClB,KAAK,IACHI,IAAQ,MACV,KAAK,IACHA,IAAQ,MACV,KAAK,IACHD,IAAS,MACX,KAAK,IACHA,IAAS,MACX,KAAK,KACHD,IAAQ,MACV,KAAK,KACHA,KAYR,MAPsB,OAAlBX,GAAI7X,WACN6X,GAAI7X,WAAa7D,GAAIgC,MAAM,EAAGxE,IAAGuC,OACJ,IAApBub,IACTD,IAGFa,GAAQhN,IAAI/R,EAAGue,IACRA,GAkBT,QAASe,GAAYzc,GACnB,MAAOA,GAAIC,QAAQyc,GAAe,QAGpC,QAASC,KACP,GAAIzV,GAAOuV,EAAYnd,GAAOsd,WAAW,IACrCC,EAAQJ,EAAYnd,GAAOsd,WAAW,IACtCE,EAAaL,EAAYnd,GAAOyd,iBAAiB,IACjDC,EAAcP,EAAYnd,GAAOyd,iBAAiB,GACtDE,IAAQ,GAAIC,QAAOJ,EAAa,gBAAkBE,EAAc,IAAM9V,EAAO,gBAAkB2V,EAAO,KACtGM,GAAS,GAAID,QAAO,IAAMJ,EAAa,gBAAkBE,EAAc,KAEvEI,GAAQ,GAAItC,GAAM,KAcpB,QAASuC,GAAUxU,GACZuU,IACHT,GAEF,IAAIV,GAAMmB,GAAM7Q,IAAI1D,EACpB,IAAIoT,EACF,MAAOA,EAET,KAAKgB,GAAMxX,KAAKoD,GACd,MAAO,KAMT,KAJA,GAEIlG,GAAOwR,EAAOmJ,EAAM/e,EAAOgf,EAAOC,EAFlCjC,KACAkC,EAAYR,GAAMQ,UAAY,EAG3B9a,EAAQsa,GAAM3Y,KAAKuE,IAExBsL,EAAQxR,EAAMwR,MAEVA,EAAQsJ,GACVlC,EAAOhY,MACLhF,MAAOsK,EAAK7G,MAAMyb,EAAWtJ,KAIjCmJ,EAAOH,GAAO1X,KAAK9C,EAAM,IACzBpE,EAAQ+e,EAAO3a,EAAM,GAAKA,EAAM,GAChC4a,EAAQhf,EAAM+Z,WAAW,GACzBkF,EAAoB,KAAVD,EACVhf,EAAQif,EAAUjf,EAAMyD,MAAM,GAAKzD,EACnCgd,EAAOhY,MACLma,KAAK,EACLnf,MAAOA,EAAMwB,OACbud,KAAMA,EACNE,QAASA,IAEXC,EAAYtJ,EAAQxR,EAAM,GAAG5E,MAQ/B,OANI0f,GAAY5U,EAAK9K,QACnBwd,EAAOhY,MACLhF,MAAOsK,EAAK7G,MAAMyb,KAGtBL,GAAMlO,IAAIrG,EAAM0S,GACTA,EAaT,QAASoC,GAAYpC,EAAQvV,GAC3B,MAAIuV,GAAOxd,OAAS,EACXwd,EAAOhW,IAAI,SAAUqY,GAC1B,MAAOC,GAAYD,EAAO5X,KACzBvB,KAAK,KAEDoZ,EAAYtC,EAAO,GAAIvV,GAAI,GAatC,QAAS6X,GAAYD,EAAO5X,EAAI8X,GAC9B,MAAOF,GAAMF,IAAME,EAAMJ,SAAWxX,EAAK,IAAMA,EAAG+X,MAAMH,EAAMrf,OAAS,IAAMyf,EAAcJ,EAAMrf,MAAOuf,GAAU,IAAMF,EAAMrf,MAAQ,IAiBxI,QAASyf,GAAc9F,EAAK4F,GAC1B,GAAKG,GAASxY,KAAKyS,GAEZ,CACL,GAAIwD,GAAMM,EAAe9D,EACzB,OAAKwD,GAAIC,QAGA,sBAAwBD,EAAI7X,WACnC,SACA2E,KAAKC,UAAUiT,EAAIC,SACnB,UALO,IAAMzD,EAAM,IAJrB,MAAO4F,GAAS5F,EAAM,IAAMA,EAAM,IA2JtC,QAASgG,GAAqBrQ,EAAIhM,EAAQmE,EAAInG,GAC5Cse,EAAgBtQ,EAAI,EAAG,WACrBhM,EAAO8H,YAAYkE,IAClB7H,EAAInG,GAYT,QAASue,GAAqBvQ,EAAIhM,EAAQmE,EAAInG,GAC5Cse,EAAgBtQ,EAAI,EAAG,WACrBjE,EAAOiE,EAAIhM,IACVmE,EAAInG,GAWT,QAASwe,GAAqBxQ,EAAI7H,EAAInG,GACpCse,EAAgBtQ,KAAQ,WACtB2B,EAAO3B,IACN7H,EAAInG,GAeT,QAASse,GAAgBtQ,EAAIyQ,EAAWC,EAAIvY,EAAInG,GAC9C,GAAI2e,GAAa3Q,EAAG4Q,SACpB,KAAKD,IAGJA,EAAWE,QAAUC,KAErB3Y,EAAG4Y,aAIJ5Y,EAAG6Y,UAAY7Y,EAAG6Y,QAAQD,YAGxB,MAFAL,UACI1e,GAAIA,IAGV,IAAIkM,GAASuS,EAAY,EAAI,QAAU,OACvCE,GAAWzS,GAAQwS,EAAI1e,GAiBzB,QAAS+C,GAAMiL,GACb,GAAkB,gBAAPA,GAAiB,CAC1B,GAAIiR,GAAWjR,CACfA,GAAKvE,SAASyV,cAAclR,GACvBA,GAC+BrO,GAAK,wBAA0Bsf,GAGrE,MAAOjR,GAeT,QAASmR,GAAMC,GACb,IAAKA,EAAM,OAAO,CAClB,IAAIC,GAAMD,EAAKE,cAAcC,gBACzBC,EAASJ,EAAKK,UAClB,OAAOJ,KAAQD,GAAQC,IAAQG,MAAaA,GAA8B,IAApBA,EAAOE,WAAkBL,EAAIM,SAASH,IAU9F,QAASI,GAAQR,EAAMS,GACrB,GAAIvf,GAAM8e,EAAKU,aAAaD,EAI5B,OAHY,QAARvf,GACF8e,EAAKW,gBAAgBF,GAEhBvf,EAWT,QAAS0f,GAAYZ,EAAM3Y,GACzB,GAAInG,GAAMsf,EAAQR,EAAM,IAAM3Y,EAI9B,OAHY,QAARnG,IACFA,EAAMsf,EAAQR,EAAM,UAAY3Y,IAE3BnG,EAWT,QAAS2f,GAAYb,EAAM3Y,GACzB,MAAO2Y,GAAKc,aAAazZ,IAAS2Y,EAAKc,aAAa,IAAMzZ,IAAS2Y,EAAKc,aAAa,UAAYzZ,GAUnG,QAASsD,GAAOiE,EAAIhM,GAClBA,EAAOyd,WAAWU,aAAanS,EAAIhM,GAUrC,QAASoe,GAAMpS,EAAIhM,GACbA,EAAOqe,YACTtW,EAAOiE,EAAIhM,EAAOqe,aAElBre,EAAOyd,WAAW3V,YAAYkE,GAUlC,QAAS2B,GAAO3B,GACdA,EAAGyR,WAAW/V,YAAYsE,GAU5B,QAASsS,GAAQtS,EAAIhM,GACfA,EAAOue,WACTxW,EAAOiE,EAAIhM,EAAOue,YAElBve,EAAO8H,YAAYkE,GAWvB,QAAS5N,GAAQ4B,EAAQgM,GACvB,GAAIwR,GAASxd,EAAOyd,UAChBD,IACFA,EAAOgB,aAAaxS,EAAIhM,GAa5B,QAASye,GAAGzS,EAAIlH,EAAO9G,EAAI0gB,GACzB1S,EAAGjD,iBAAiBjE,EAAO9G,EAAI0gB,GAWjC,QAASC,GAAI3S,EAAIlH,EAAO9G,GACtBgO,EAAG4S,oBAAoB9Z,EAAO9G,GAWhC,QAAS6gB,GAAS7S,GAChB,GAAI8S,GAAY9S,EAAG8F,SAInB,OAHyB,YAArB,mBAAOgN,GAAP,YAAA5J,EAAO4J,MACTA,EAAYA,EAAUC,SAAW,IAE5BD,EAaT,QAASE,GAAShT,EAAIiT,GAEhBC,KAAU,OAAOtb,KAAKoI,EAAGmT,cAC3BnT,EAAG8F,UAAYmN,EAEfjT,EAAGoT,aAAa,QAASH,GAW7B,QAASI,GAASrT,EAAIiT,GACpB,GAAIjT,EAAGsT,UACLtT,EAAGsT,UAAU9a,IAAIya,OACZ,CACL,GAAIM,GAAM,IAAMV,EAAS7S,GAAM,GAC3BuT,GAAIne,QAAQ,IAAM6d,EAAM,KAAO,GACjCD,EAAShT,GAAKuT,EAAMN,GAAK/gB,SAY/B,QAASshB,IAAYxT,EAAIiT,GACvB,GAAIjT,EAAGsT,UACLtT,EAAGsT,UAAU3R,OAAOsR,OACf,CAGL,IAFA,GAAIM,GAAM,IAAMV,EAAS7S,GAAM,IAC3ByT,EAAM,IAAMR,EAAM,IACfM,EAAIne,QAAQqe,IAAQ,GACzBF,EAAMA,EAAInhB,QAAQqhB,EAAK,IAEzBT,GAAShT,EAAIuT,EAAIrhB,QAEd8N,EAAG8F,WACN9F,EAAG+R,gBAAgB,SAavB,QAAS2B,IAAe1T,EAAI2T,GAC1B,GAAIC,GACAC,CAKJ,IAHIC,GAAW9T,IAAO+T,GAAW/T,EAAGgU,WAClChU,EAAKA,EAAGgU,SAENhU,EAAGiU,gBAIL,IAHAC,GAASlU,GACT6T,EAAaF,EAAalY,SAAS0Y,yBAA2B1Y,SAASE,cAAc,OAE9EiY,EAAQ5T,EAAGuS,YAEhBsB,EAAW/X,YAAY8X,EAG3B,OAAOC,GAUT,QAASK,IAAS9C,GAGhB,IAFA,GAAIwC,GAEIA,EAAQxC,EAAKmB,WAAY6B,GAAYR,IAC3CxC,EAAK1V,YAAYkY,EAEnB,MAAQA,EAAQxC,EAAKiD,UAAWD,GAAYR,IAC1CxC,EAAK1V,YAAYkY,GAKrB,QAASQ,IAAYhD,GACnB,MAAOA,KAA2B,IAAlBA,EAAKM,WAAmBN,EAAKtW,KAAK5I,QAA4B,IAAlBkf,EAAKM,UAWnE,QAASoC,IAAW9T,GAClB,MAAOA,GAAGsU,SAAwC,aAA7BtU,EAAGsU,QAAQhY,cAqBlC,QAASiY,IAAaP,EAASQ,GAC7B,GAAIC,GAAShjB,GAAOD,MAAQiK,SAASiZ,cAAcV,GAAWvY,SAASkZ,eAAeH,EAAU,IAAM,GAEtG,OADAC,GAAOG,YAAa,EACbH,EAYT,QAASI,IAAQzD,GACf,GAAIA,EAAK0D,gBAEP,IAAK,GADDC,GAAQ3D,EAAK4D,WACRrlB,EAAI,EAAGI,EAAIglB,EAAM7kB,OAAQP,EAAII,EAAGJ,IAAK,CAC5C,GAAI8I,GAAOsc,EAAMplB,GAAG8I,IACpB,IAAIwc,GAAMrd,KAAKa,GACb,MAAOyS,GAASzS,EAAKrG,QAAQ6iB,GAAO,MAc5C,QAASC,IAAa9D,EAAM+D,EAAKzE,GAE/B,IADA,GAAI9b,GACGwc,IAAS+D,GACdvgB,EAAOwc,EAAKiB,YACZ3B,EAAGU,GACHA,EAAOxc,CAET8b,GAAGyE,GAeL,QAASC,IAAgBzJ,EAAOwJ,EAAKhd,EAAIkd,EAAMrjB,GAS7C,QAASsjB,KAEP,GADAC,IACIC,GAAQD,GAAWE,EAAMvlB,OAAQ,CACnC,IAAK,GAAIP,GAAI,EAAGA,EAAI8lB,EAAMvlB,OAAQP,IAChC0lB,EAAKvZ,YAAY2Z,EAAM9lB,GAEzBqC,IAAMA,KAdV,GAAIwjB,IAAO,EACPD,EAAU,EACVE,IACJP,IAAavJ,EAAOwJ,EAAK,SAAU/D,GAC7BA,IAAS+D,IAAKK,GAAO,GACzBC,EAAM/f,KAAK0b,GACXZ,EAAqBY,EAAMjZ,EAAImd,KAoBnC,QAASvB,IAAW3C,GAClB,MAAOA,IAA0B,KAAlBA,EAAKM,SAWtB,QAASgE,IAAa1V,GACpB,GAAIA,EAAG2V,UACL,MAAO3V,GAAG2V,SAEV,IAAIC,GAAYna,SAASE,cAAc,MAEvC,OADAia,GAAU9Z,YAAYkE,EAAG6V,WAAU,IAC5BD,EAAUE,UAiCrB,QAASC,IAAmB/V,EAAI1M,GAC9B,GAAIuc,GAAM7P,EAAGsU,QAAQhY,cACjB0Z,EAAWhW,EAAG8U,eAClB,IAAKmB,GAAYre,KAAKiY,IAASqG,GAActe,KAAKiY,IAgB3C,GAAImG,EACT,MAAOG,IAAanW,EAAI1M,OAjB8B,CACtD,GAAI8iB,GAAa9iB,EAAS,aAAcuc,GACtC,OAASwG,GAAIxG,EAEb,IAAIyG,GAAKN,GAAYG,GAAanW,EAAI1M,EACtC,IAAIgjB,EACF,MAAOA,EAEP,IAAIC,GAAcjjB,EAAQkjB,mBAAqBljB,EAAQkjB,kBAAkB3G,EACrE0G,GACF5kB,GAAK,4BAA8Bke,EAAM,qBAA4B0G,EAAc,yEAC1EE,GAAiBzW,EAAI6P,IAC9Ble,GAAK,4BAA8Bke,EAAM,oHAiBnD,QAASsG,IAAanW,EAAI1M,GAExB,GAAI+W,GAAMrK,EAAG8R,aAAa,KAC1B,IAAW,MAAPzH,GACF,GAAI+L,GAAa9iB,EAAS,aAAc+W,GAEtC,MADArK,GAAG+R,gBAAgB,OACVsE,GAAIhM,OAIf,IADAA,EAAM2H,EAAYhS,EAAI,MACX,MAAPqK,EACF,OAASgM,GAAIhM,EAAK4D,SAAS,GAuBjC,QAASyI,IAAU7K,EAAIC,GACrB,GAAIhY,GAAK6iB,EAAOC,CAChB,KAAK9iB,IAAOgY,GACV6K,EAAQ9K,EAAG/X,GACX8iB,EAAU9K,EAAKhY,GACV0V,EAAOqC,EAAI/X,GAELrB,EAASkkB,IAAUlkB,EAASmkB,IACrCF,GAAUC,EAAOC,GAFjBrN,EAAIsC,EAAI/X,EAAK8iB,EAKjB,OAAO/K,GAwET,QAASgL,IAAYC,EAAWC,GAC9B,GAAIC,GAAMpkB,OAAO2a,OAAOuJ,GAAa,KACrC,OAAOC,GAAW/Q,EAAOgR,EAAKC,GAAiBF,IAAaC,EA0D9D,QAASE,IAAgB5jB,GACvB,GAAIA,EAAQiQ,WAOV,IAAK,GAJDyI,GAFAzI,EAAajQ,EAAQiQ,WAAa0T,GAAiB3jB,EAAQiQ,YAC3D4T,EAAMvkB,OAAOqC,KAAKsO,GAGhB7L,EAAMpE,EAAQkjB,qBAEX7mB,EAAI,EAAGI,EAAIonB,EAAIjnB,OAAQP,EAAII,EAAGJ,IAAK,CAC1C,GAAImE,GAAMqjB,EAAIxnB,EACVsmB,IAAYre,KAAK9D,IAAQoiB,GAActe,KAAK9D,GACZnC,GAAK,kEAAyEmC,IAMhH4D,EAAI5D,EAAI1B,QAAQ,KAAM,IAAIkK,eAAiB+O,EAAUvX,GAEvDkY,EAAMzI,EAAWzP,GACbnB,EAAcqZ,KAChBzI,EAAWzP,GAAOxC,GAAI0U,OAAOgG,MAarC,QAASoL,IAAW9jB,GAClB,GACI3D,GAAG2C,EADH2T,EAAQ3S,EAAQ2S,KAEpB,IAAIvR,GAAQuR,GAGV,IAFA3S,EAAQ2S,SACRtW,EAAIsW,EAAM/V,OACHP,KACL2C,EAAM2T,EAAMtW,GACO,gBAAR2C,GACTgB,EAAQ2S,MAAM3T,GAAO,KACZA,EAAImG,OACbnF,EAAQ2S,MAAM3T,EAAImG,MAAQnG,OAGzB,IAAIK,EAAcsT,GAAQ,CAC/B,GAAIhR,GAAOrC,OAAOqC,KAAKgR,EAEvB,KADAtW,EAAIsF,EAAK/E,OACFP,KACL2C,EAAM2T,EAAMhR,EAAKtF,IACE,kBAAR2C,KACT2T,EAAMhR,EAAKtF,KAAQ4L,KAAMjJ,KAcjC,QAAS2kB,IAAiBI,GACxB,GAAI3iB,GAAQ2iB,GAAS,CAInB,IAHA,GAEIC,GAFAN,KACArnB,EAAI0nB,EAAOnnB,OAERP,KAAK;AACV2nB,EAAQD,EAAO1nB,EACf,IAAI0mB,GAAsB,kBAAViB,GAAuBA,EAAMhkB,SAAWgkB,EAAMhkB,QAAQmF,MAAQ6e,EAAMjB,GAAKiB,EAAM7e,MAAQ6e,EAAMjB,EACxGA,GAGHW,EAAIX,GAAMiB,EAFwB3lB,GAAK,4DAK3C,MAAOqlB,GAET,MAAOK,GAaT,QAASE,IAAa/F,EAAQoC,EAAOzb,GA4BnC,QAASqf,GAAW1jB,GAClB,GAAI2jB,GAAQC,GAAO5jB,IAAQ6jB,EAC3BrkB,GAAQQ,GAAO2jB,EAAMjG,EAAO1d,GAAM8f,EAAM9f,GAAMqE,EAAIrE,GA7BpDojB,GAAgBtD,GAChBwD,GAAWxD,GAELA,EAAMgE,YAAczf,GACtBxG,GAAK,yDAGT,IACImC,GADAR,IAKJ,IAHIsgB,EAAM,aACRpC,EAAqC,kBAArBoC,GAAM,WAA4B2D,GAAa/F,EAAQoC,EAAM,WAAWtgB,QAAS6E,GAAMof,GAAa/F,EAAQoC,EAAM,WAAYzb,IAE5Iyb,EAAMiE,OACR,IAAK,GAAIloB,GAAI,EAAGI,EAAI6jB,EAAMiE,OAAO3nB,OAAQP,EAAII,EAAGJ,IAAK,CACnD,GAAImoB,GAAQlE,EAAMiE,OAAOloB,GACrBooB,EAAeD,EAAMhlB,oBAAqBxB,IAAMwmB,EAAMxkB,QAAUwkB,CACpEtG,GAAS+F,GAAa/F,EAAQuG,EAAc5f,GAGhD,IAAKrE,IAAO0d,GACVgG,EAAW1jB,EAEb,KAAKA,IAAO8f,GACLpK,EAAOgI,EAAQ1d,IAClB0jB,EAAW1jB,EAOf,OAAOR,GAeT,QAAS8iB,IAAa9iB,EAASiI,EAAM8a,EAAI2B,GAEvC,GAAkB,gBAAP3B,GAAX,CAGA,GACI4B,GADAZ,EAAS/jB,EAAQiI,GAEjByb,EAAMK,EAAOhB,IAEjBgB,EAAOY,EAAc/M,EAASmL,KAE9BgB,EAAOY,EAAY7hB,OAAO,GAAG6F,cAAgBgc,EAAY9jB,MAAM,GAI/D,OAHsC6jB,KAAgBhB,GACpDrlB,GAAK,qBAAuB4J,EAAKpH,MAAM,MAAS,KAAOkiB,EAAI/iB,GAEtD0jB,GAWT,QAASkB,MACP3nB,KAAK8lB,GAAK8B,KACV5nB,KAAK6nB,QAoIP,QAASC,IAAkB9kB,GACzB+kB,IAAgB,EAChB/kB,IACA+kB,IAAgB,EAalB,QAASC,IAAS7nB,GAIhB,GAHAH,KAAKG,MAAQA,EACbH,KAAKuZ,IAAM,GAAIoO,IACflM,EAAItb,EAAO,SAAUH,MACjBmE,GAAQhE,GAAQ,CAClB,GAAI8nB,GAAUC,GAAWC,GAAeC,EACxCH,GAAQ9nB,EAAOkoB,GAAcC,IAC7BtoB,KAAKuoB,aAAapoB,OAElBH,MAAKwoB,KAAKroB,GA+Ed,QAASgoB,IAAa1kB,EAAQ4H,GAE5B5H,EAAOglB,UAAYpd,EAYrB,QAAS+c,IAAY3kB,EAAQ4H,EAAK3G,GAChC,IAAK,GAAItF,GAAI,EAAGI,EAAIkF,EAAK/E,OAAQP,EAAII,EAAGJ,IAAK,CAC3C,GAAImE,GAAMmB,EAAKtF,EACfqc,GAAIhY,EAAQF,EAAK8H,EAAI9H,KAezB,QAASmlB,IAAQvoB,EAAOyH,GACtB,GAAKzH,GAA0B,YAAjB,mBAAOA,GAAP,YAAAwY,EAAOxY,IAArB,CAGA,GAAIiZ,EASJ,OARIH,GAAO9Y,EAAO,WAAaA,EAAMkZ,iBAAkB2O,IACrD5O,EAAKjZ,EAAMkZ,OACF0O,KAAkB5jB,GAAQhE,IAAUiC,EAAcjC,KAAWkC,OAAOsmB,aAAaxoB,KAAWA,EAAM+Y,SAC3GE,EAAK,GAAI4O,IAAS7nB,IAEhBiZ,GAAMxR,GACRwR,EAAGwP,MAAMhhB,GAEJwR,GAWT,QAASyP,IAAe1mB,EAAKoB,EAAKxB,GAChC,GAAIwX,GAAM,GAAIoO,IAEVmB,EAAWzmB,OAAO0mB,yBAAyB5mB,EAAKoB,EACpD,KAAIulB,GAAYA,EAASlN,gBAAiB,EAA1C,CAKA,GAAIoN,GAASF,GAAYA,EAAS3a,IAC9B8a,EAASH,GAAYA,EAAS9P,IAE9BkQ,EAAUR,GAAQ3mB,EACtBM,QAAO4S,eAAe9S,EAAKoB,GACzBmY,YAAY,EACZE,cAAc,EACdzN,IAAK,WACH,GAAIhO,GAAQ6oB,EAASA,EAAOtpB,KAAKyC,GAAOJ,CACxC,IAAI4lB,GAAIlkB,SACN8V,EAAI4P,SACAD,GACFA,EAAQ3P,IAAI4P,SAEVhlB,GAAQhE,IACV,IAAK,GAAIxB,GAAGS,EAAI,EAAGI,EAAIW,EAAMR,OAAQP,EAAII,EAAGJ,IAC1CT,EAAIwB,EAAMf,GACVT,GAAKA,EAAE0a,QAAU1a,EAAE0a,OAAOE,IAAI4P,QAIpC,OAAOhpB,IAET6Y,IAAK,SAAwBoQ,GAC3B,GAAIjpB,GAAQ6oB,EAASA,EAAOtpB,KAAKyC,GAAOJ,CACpCqnB,KAAWjpB,IAGX8oB,EACFA,EAAOvpB,KAAKyC,EAAKinB,GAEjBrnB,EAAMqnB,EAERF,EAAUR,GAAQU,GAClB7P,EAAItK,cAkFV,QAASoa,IAAWtoB,GAYlBA,EAAIwB,UAAU+mB,MAAQ,SAAUvmB,GAC9BA,EAAUA,MAEV/C,KAAKupB,IAAM,KACXvpB,KAAKygB,QAAU1d,EAAQke,OACvBjhB,KAAKwpB,MAAQxpB,KAAKygB,QAAUzgB,KAAKygB,QAAQ+I,MAAQxpB,KACjDA,KAAKypB,aACLzpB,KAAK0pB,SACL1pB,KAAK2pB,QACL3pB,KAAK4pB,aACL5pB,KAAK6pB,eAGL7pB,KAAK8pB,KAAOC,KAGZ/pB,KAAKkZ,QAAS,EAGdlZ,KAAKgqB,WACLhqB,KAAKiqB,gBAGLjqB,KAAKkqB,aAAc,EACnBlqB,KAAKmqB,UACLnqB,KAAKoqB,eACLpqB,KAAKqqB,aAAe,KAGpBrqB,KAAKwgB,YAAcxgB,KAAKsqB,aAAetqB,KAAKuqB,SAAWvqB,KAAKwqB,YAAcxqB,KAAKyqB,kBAAoBzqB,KAAK0qB,eAAgB,EACxH1qB,KAAK2qB,UAAY,KAMjB3qB,KAAK4qB,SAAW7nB,EAAQ6nB,UAAY5qB,KAAKygB,QAOzCzgB,KAAK6qB,OAAS9nB,EAAQ8nB,OAMtB7qB,KAAK8qB,MAAQ/nB,EAAQ+nB,MACjB9qB,KAAK8qB,OACP9qB,KAAK8qB,MAAMC,SAAS5lB,KAAKnF,MAIvBA,KAAKygB,SACPzgB,KAAKygB,QAAQgJ,UAAUtkB,KAAKnF,MAI9B+C,EAAU/C,KAAKoD,SAAW4jB,GAAahnB,KAAK6Y,YAAY9V,QAASA,EAAS/C,MAG1EA,KAAKgrB,aAILhrB,KAAKmZ,SAGLnZ,KAAKirB,UAAU,QAGfjrB,KAAKkrB,aAGLlrB,KAAKmrB,cAGLnrB,KAAKirB,UAAU,WAGXloB,EAAQ0M,IACVzP,KAAKorB,OAAOroB,EAAQ0M,KAmF1B,QAAS4b,IAAgBC,GACvB,GAAWlrB,SAAPkrB,EACF,MAAO,KAGT,IAAI/rB,GAAO+rB,EAAGpR,WAAW,EAEzB,QAAQ3a,GACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IAEH,MAAO+rB,EAET,KAAK,IACL,IAAK,IAEH,MAAO,OAET,KAAK,IACL,IAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,OACL,IAAK,MACL,IAAK,MAEH,MAAO,KAIX,MAAI/rB,IAAQ,IAAQA,GAAQ,KAAQA,GAAQ,IAAQA,GAAQ,GACnD,QAILA,GAAQ,IAAQA,GAAQ,GACnB,SAGF,OAYT,QAASgsB,IAAcC,GACrB,GAAIC,GAAUD,EAAK7pB,MAEnB,QAAuB,MAAnB6pB,EAAK3lB,OAAO,KAAc0U,MAAMiR,MAG7B3R,EAAU4R,GAAWhR,EAAYgR,GAAW,IAAMA,GAU3D,QAASxmB,IAAMumB,GA6Cb,QAASE,KACP,GAAIC,GAAWH,EAAKzV,EAAQ,EAC5B,IAAI6V,IAASC,IAAgC,MAAbF,GAAoBC,IAASE,IAAgC,MAAbH,EAI9E,MAHA5V,KACAgW,EAAU,KAAOJ,EACjBle,EAAQue,OACD,EAlDX,GAII/R,GAAG8R,EAASxoB,EAAKyH,EAAMoV,EAAYzS,EAAQse,EAJ3CvnB,KACAqR,KACA6V,EAAOM,GACPC,EAAe,EAGf1e,IAgDJ,KA9CAA,EAAQ2e,IAAQ,WACFhsB,SAARmD,IACFmB,EAAKS,KAAK5B,GACVA,EAAMnD,SAIVqN,EAAQue,IAAU,WACJ5rB,SAARmD,EACFA,EAAMwoB,EAENxoB,GAAOwoB,GAIXte,EAAQ4e,IAAsB,WAC5B5e,EAAQue,MACRG,KAGF1e,EAAQ6e,IAAiB,WACvB,GAAIH,EAAe,EACjBA,IACAP,EAAOW,GACP9e,EAAQue,UACH,CAGL,GAFAG,EAAe,EACf5oB,EAAMgoB,GAAchoB,GAChBA,KAAQ,EACV,OAAO,CAEPkK,GAAQ2e,QAeC,MAARR,GAIL,GAHA7V,IACAkE,EAAIuR,EAAKzV,GAEC,OAANkE,IAAcyR,IAAlB,CAQA,GAJA1gB,EAAOqgB,GAAgBpR,GACvBgS,EAAUO,GAAiBZ,GAC3BxL,EAAa6L,EAAQjhB,IAASihB,EAAQ,SAAWQ,GAE7CrM,IAAeqM,GACjB,MAKF,IAFAb,EAAOxL,EAAW,GAClBzS,EAASF,EAAQ2S,EAAW,IACxBzS,IACFoe,EAAU3L,EAAW,GACrB2L,EAAsB3rB,SAAZ2rB,EAAwB9R,EAAI8R,EAClCpe,OAAa,GACf,MAIJ,IAAIie,IAASc,GAEX,MADAhoB,GAAKioB,IAAMnB,EACJ9mB,GAYb,QAASkoB,IAAUpB,GACjB,GAAI3N,GAAMgP,GAAU1e,IAAIqd,EAOxB,OANK3N,KACHA,EAAM5Y,GAAMumB,GACR3N,GACFgP,GAAU/b,IAAI0a,EAAM3N,IAGjBA,EAUT,QAASiP,IAAQ3qB,EAAKqpB,GACpB,MAAOuB,IAAgBvB,GAAMrd,IAAIhM,GAsBnC,QAAS6qB,IAAQ7qB,EAAKqpB,EAAMzpB,GAC1B,GAAIkrB,GAAW9qB,CAIf,IAHoB,gBAATqpB,KACTA,EAAOvmB,GAAMumB,KAEVA,IAAStpB,EAASC,GACrB,OAAO,CAGT,KAAK,GADD+Z,GAAM3Y,EACDnE,EAAI,EAAGI,EAAIgsB,EAAK7rB,OAAQP,EAAII,EAAGJ,IACtC8c,EAAO/Z,EACPoB,EAAMioB,EAAKpsB,GACW,MAAlBmE,EAAIsC,OAAO,KACbtC,EAAMwpB,GAAgBxpB,EAAIK,MAAM,IAAIuK,IAAIzO,KAAKutB,EAAUA,IAErD7tB,EAAII,EAAI,GACV2C,EAAMA,EAAIoB,GACLrB,EAASC,KACZA,KACsC+Z,EAAKhD,QACzCgU,GAAgB1B,EAAMtP,GAExBlD,EAAIkD,EAAM3Y,EAAKpB,KAGbgC,GAAQhC,GACVA,EAAIgrB,KAAK5pB,EAAKxB,GACLwB,IAAOpB,GAChBA,EAAIoB,GAAOxB,GAE2BI,EAAI+W,QACxCgU,GAAgB1B,EAAMrpB,GAExB6W,EAAI7W,EAAKoB,EAAKxB,GAIpB,QAAO,EA0BT,QAASqrB,OA6BT,QAASlc,IAAKtP,EAAKE,GACjB,GAAI1C,GAAIiuB,GAAM1tB,MAEd,OADA0tB,IAAMjuB,GAAK0C,EAAWF,EAAIC,QAAQyrB,GAAW,OAAS1rB,EAC/C,IAAMxC,EAAI,IAUnB,QAASmuB,IAAQZ,GACf,GAAI1S,GAAI0S,EAAI9mB,OAAO,GACf2lB,EAAOmB,EAAI/oB,MAAM,EACrB,OAAI4pB,IAAkBnmB,KAAKmkB,GAClBmB,GAEPnB,EAAOA,EAAK3mB,QAAQ,QAAY2mB,EAAK3pB,QAAQ4rB,GAAWC,IAAWlC,EAC5DvR,EAAI,SAAWuR,GAY1B,QAASkC,IAAQ9rB,EAAKxC,GACpB,MAAOiuB,IAAMjuB,GAWf,QAASuuB,IAAc7T,GACjB8T,GAAmBvmB,KAAKyS,IACQ1Y,GAAK,gDAAkD0Y,GAG3FuT,GAAM1tB,OAAS,CAEf,IAAIsK,GAAO6P,EAAIjY,QAAQgsB,GAAQ3c,IAAMrP,QAAQisB,GAAM,GAInD,OADA7jB,IAAQ,IAAMA,GAAMpI,QAAQksB,GAASR,IAAS1rB,QAAQ4rB,GAAWC,IAC1DM,GAAa/jB,GAatB,QAAS+jB,IAAa/jB,GACpB,IAEE,MAAO,IAAIgkB,UAAS,QAAS,UAAYhkB,EAAO,KAEhD,MAAOtL,GASP,MALIyC,IADEzC,EAAE+H,WAAWnC,MAAM,mBAChB,kOAEA,gDAAuD0F,GAGzDmjB,IAWX,QAASc,IAAcpU,GACrB,GAAI0R,GAAOoB,GAAU9S,EACrB,OAAI0R,GACK,SAAU1jB,EAAO/F,GACtBirB,GAAQllB,EAAO0jB,EAAMzpB,QAGWX,IAAK,8BAAgC0Y,GAY3E,QAASiT,IAAgBjT,EAAKqU,GAC5BrU,EAAMA,EAAInY,MAEV,IAAIkc,GAAMuQ,GAAgBjgB,IAAI2L,EAC9B,IAAI+D,EAIF,MAHIsQ,KAAYtQ,EAAI7E,MAClB6E,EAAI7E,IAAMkV,GAAcrQ,EAAI/D,MAEvB+D,CAET,IAAI4I,IAAQ3M,IAAKA,EAUjB,OATA2M,GAAItY,IAAMkgB,GAAavU,IAAQA,EAAIjV,QAAQ,KAAO,EAEhDmpB,GAAa,SAAWlU,GAExB6T,GAAc7T,GACZqU,IACF1H,EAAIzN,IAAMkV,GAAcpU,IAE1BsU,GAAgBtd,IAAIgJ,EAAK2M,GAClBA,EAUT,QAAS4H,IAAavU,GACpB,MAAOwU,IAAWjnB,KAAKyS,KAEtByU,GAAiBlnB,KAAKyS,IAEH,UAApBA,EAAIlW,MAAM,EAAG,GAyBf,QAAS4qB,MACPC,GAAM9uB,OAAS,EACf+uB,GAAU/uB,OAAS,EACnBgvB,MACAC,MACAC,IAAU,EAOZ,QAASC,MAGI,IAFX,GAAIC,IAAS,EAEKA,GAChBA,GAAS,EAETC,GAAgBP,IAChBO,GAAgBN,IAGZD,GAAM9uB,OACRovB,GAAS,GAKPE,IAAY/tB,GAAO+tB,UACrBA,GAASC,KAAK,SAEhBV,MAUJ,QAASQ,IAAgBP,GAGvB,IAAK,GAAIrvB,GAAI,EAAGA,EAAIqvB,EAAM9uB,OAAQP,IAAK,CACrC,GAAI+vB,GAAUV,EAAMrvB,GAChB0mB,EAAKqJ,EAAQrJ,EAIjB,IAHA6I,GAAI7I,GAAM,KACVqJ,EAAQC,MAEyC,MAAXT,GAAI7I,KACxC8I,GAAS9I,IAAO8I,GAAS9I,IAAO,GAAK,EACjC8I,GAAS9I,GAAM5kB,GAAOmuB,iBAAiB,CACzCjuB,GAAK,qEAA4E+tB,EAAQ1pB,WAAa,IAAK0pB,EAAQvnB,GACnH,QAIN6mB,EAAM9uB,OAAS,EAcjB,QAAS2vB,IAAYH,GACnB,GAAIrJ,GAAKqJ,EAAQrJ,EACjB,IAAe,MAAX6I,GAAI7I,GAAa,CAEnB,GAAIyJ,GAAIJ,EAAQK,KAAOd,GAAYD,EACnCE,IAAI7I,GAAMyJ,EAAE5vB,OACZ4vB,EAAEpqB,KAAKgqB,GAEFN,KACHA,IAAU,EACVrtB,GAASstB,MA0Bf,QAASW,IAAQ7nB,EAAI8nB,EAASjuB,EAAIsB,GAE5BA,GACF0S,EAAOzV,KAAM+C,EAEf,IAAI4sB,GAA0B,kBAAZD,EAclB,IAbA1vB,KAAK4H,GAAKA,EACVA,EAAGgiB,UAAUzkB,KAAKnF,MAClBA,KAAKyF,WAAaiqB,EAClB1vB,KAAKyB,GAAKA,EACVzB,KAAK8lB,KAAO8J,GACZ5vB,KAAK6vB,QAAS,EACd7vB,KAAK8vB,MAAQ9vB,KAAK+vB,KAClB/vB,KAAKgwB,QACLhwB,KAAKiwB,WACLjwB,KAAKkwB,OAAS,GAAIC,IAClBnwB,KAAKowB,UAAY,GAAID,IACrBnwB,KAAKqwB,UAAY,KAEbV,EACF3vB,KAAKgpB,OAAS0G,EACd1vB,KAAKipB,OAAS7oB,WACT,CACL,GAAIqmB,GAAMsG,GAAgB2C,EAAS1vB,KAAKswB,OACxCtwB,MAAKgpB,OAASvC,EAAItY,IAClBnO,KAAKipB,OAASxC,EAAIzN,IAEpBhZ,KAAKG,MAAQH,KAAK+vB,KAAO3vB,OAAYJ,KAAKmO,MAG1CnO,KAAKuwB,OAASvwB,KAAKwwB,SAAU,EAkP/B,QAASC,IAAS1uB,EAAK2uB,GACrB,GAAItxB,GAAIgB,OACJsE,EAAOtE,MACNswB,KACHA,EAAOC,GACPD,EAAKE,QAEP,IAAIC,GAAM1sB,GAAQpC,GACd+uB,EAAM5uB,EAASH,EACnB,IAAI8uB,GAAOC,EAAK,CACd,GAAI/uB,EAAIsX,OAAQ,CACd,GAAI0X,GAAQhvB,EAAIsX,OAAOE,IAAIuM,EAC3B,IAAI4K,EAAK/B,IAAIoC,GACX,MAEAL,GAAKzoB,IAAI8oB,GAGb,GAAIF,EAEF,IADAzxB,EAAI2C,EAAIpC,OACDP,KAAKqxB,GAAS1uB,EAAI3C,GAAIsxB,OACxB,IAAII,EAGT,IAFApsB,EAAOrC,OAAOqC,KAAK3C,GACnB3C,EAAIsF,EAAK/E,OACFP,KAAKqxB,GAAS1uB,EAAI2C,EAAKtF,IAAKsxB,IA0CzC,QAASM,IAAenQ,GACtB,MAAO0C,IAAW1C,IAAS2C,GAAW3C,EAAK4C,SAiB7C,QAASwN,IAAiBC,EAAgBvE,GAExC,GAAIwE,GAAWxE,EAAMuE,EAAiBA,EAAevvB,OACjDkc,EAAMuT,GAAcjjB,IAAIgjB,EAC5B,IAAItT,EACF,MAAOA,EAGT,IAAIiH,GAAO5Z,SAAS0Y,yBAChByN,EAAWH,EAAe3sB,MAAM+sB,IAChCC,EAAcC,GAASnqB,KAAK6pB,GAC5BO,EAAeC,GAAUrqB,KAAK6pB,EAElC,IAAKG,GAAaE,GAAgBE,EAG3B,CACL,GAAInS,GAAM+R,GAAYA,EAAS,GAC3BM,EAAOxqB,GAAImY,IAAQnY,GAAIyqB,OACvBC,EAAQF,EAAK,GACbG,EAASH,EAAK,GACdI,EAASJ,EAAK,GACd9Q,EAAO3V,SAASE,cAAc,MAGlC,KADAyV,EAAK0E,UAAYuM,EAASZ,EAAiBa,EACpCF,KACLhR,EAAOA,EAAKiD,SAKd,KAFA,GAAIT,GAEGA,EAAQxC,EAAKmB,YAElB8C,EAAKvZ,YAAY8X,OAlBnByB,GAAKvZ,YAAYL,SAASkZ,eAAe8M,GAyB3C,OAJKvE,IACHhJ,GAASmB,GAEXsM,GAActgB,IAAIqgB,EAAUrM,GACrBA,EAUT,QAASkN,IAAenR,GAOtB,GAAImQ,GAAenQ,GACjB,MAAOoQ,IAAiBpQ,EAAK0E,UAG/B,IAAqB,WAAjB1E,EAAKkD,QACP,MAAOkN,IAAiBpQ,EAAKoR,YAO/B,KAJA,GAEI5O,GAFA6O,EAAa5M,GAAUzE,GACvBiE,EAAO5Z,SAAS0Y,yBAGbP,EAAQ6O,EAAWlQ,YAExB8C,EAAKvZ,YAAY8X,EAGnB,OADAM,IAASmB,GACFA,EAsCT,QAASQ,IAAUzE,GAEjB,IAAKA,EAAKsR,iBACR,MAAOtR,GAAKyE,WAEd,IACIlmB,GAAG6tB,EAAUmF,EADb3L,EAAM5F,EAAKyE,WAAU,EAGzB,IAAI+M,GAAmB,CACrB,GAAIC,GAAY7L,CAMhB,IALIuK,GAAenQ,KACjBA,EAAOA,EAAK4C,QACZ6O,EAAY7L,EAAIhD,SAElBwJ,EAAWpM,EAAKsR,iBAAiB,YAC7BlF,EAASttB,OAGX,IAFAyyB,EAASE,EAAUH,iBAAiB,YACpC/yB,EAAIgzB,EAAOzyB,OACJP,KACLgzB,EAAOhzB,GAAG8hB,WAAWe,aAAaqD,GAAU2H,EAAS7tB,IAAKgzB,EAAOhzB,IAKvE,GAAImzB,GACF,GAAqB,aAAjB1R,EAAKkD,QACP0C,EAAItmB,MAAQ0gB,EAAK1gB,UAGjB,IADA8sB,EAAWpM,EAAKsR,iBAAiB,YAC7BlF,EAASttB,OAGX,IAFAyyB,EAAS3L,EAAI0L,iBAAiB,YAC9B/yB,EAAIgzB,EAAOzyB,OACJP,KACLgzB,EAAOhzB,GAAGe,MAAQ8sB,EAAS7tB,GAAGe,KAKtC,OAAOsmB,GAqBT,QAAS+L,IAAcltB,EAAUmtB,EAAa9F,GAC5C,GAAI9L,GAAMiE,CAIV,OAAItB,IAAWle,IACbqe,GAASre,GACFmtB,EAAcnN,GAAUhgB,GAAYA,IAGrB,gBAAbA,GAEJqnB,GAA8B,MAAvBrnB,EAASO,OAAO,GAa1Bif,EAAOmM,GAAiB3rB,EAAUqnB,IAXlC7H,EAAO4N,GAAgBvkB,IAAI7I,GACtBwf,IACHjE,EAAO3V,SAASynB,eAAertB,EAAS1B,MAAM,IAC1Cid,IACFiE,EAAOkN,GAAenR,GAEtB6R,GAAgB5hB,IAAIxL,EAAUwf,MAO3Bxf,EAAS6b,WAElB2D,EAAOkN,GAAe1sB,IAGjBwf,GAAQ2N,EAAcnN,GAAUR,GAAQA,GAyDjD,QAAS8N,IAASC,EAAQjrB,EAAIkd,EAAM9a,EAAMlC,EAAOgrB,GAC/C9yB,KAAK+qB,YACL/qB,KAAK+yB,cACL/yB,KAAK4H,GAAKA,EACV5H,KAAK8H,MAAQA,EACb9H,KAAKgzB,UAAW,EAChBhzB,KAAK8yB,WAAaA,EACdA,GACFA,EAAWC,WAAW5tB,KAAKnF,MAE7BA,KAAKizB,OAASJ,EAAOjrB,EAAIkd,EAAM9a,EAAMlC,EAAO9H,KAC5C,IAAI0f,GAAS1f,KAAK0f,OAAoC,IAA3BoF,EAAKoO,WAAWvzB,SAE1CmlB,EAAKoO,WAAW,GAAG7O,UAChB3E,IACF1f,KAAK6gB,KAAOiE,EAAKoO,WAAW,GAC5BlzB,KAAKwL,OAAS2nB,GACdnzB,KAAKoR,OAASgiB,KAEdpzB,KAAK6gB,KAAOmD,GAAa,kBACzBhkB,KAAK4kB,IAAMZ,GAAa,gBACxBhkB,KAAK8kB,KAAOA,EACZ/C,EAAQ/hB,KAAK6gB,KAAMiE,GACnBA,EAAKvZ,YAAYvL,KAAK4kB,KACtB5kB,KAAKwL,OAAS6nB,GACdrzB,KAAKoR,OAASkiB,IAEhBtzB,KAAK6gB,KAAK0S,SAAWvzB,KA4BvB,QAASmzB,IAAa1vB,EAAQ+vB,GAC5BxzB,KAAKgzB,UAAW,CAChB,IAAIjqB,GAASyqB,KAAmB,EAAQxT,EAAuBxU,CAC/DzC,GAAO/I,KAAK6gB,KAAMpd,EAAQzD,KAAK4H,IAC3BgZ,EAAM5gB,KAAK6gB,OACb7gB,KAAKyzB,SAASC,IAQlB,QAASN,MACPpzB,KAAKgzB,UAAW,CAChB,IAAIW,GAAmB/S,EAAM5gB,KAAK6gB,MAC9BrZ,EAAOxH,IACXA,MAAK4zB,eACL3T,EAAqBjgB,KAAK6gB,KAAM7gB,KAAK4H,GAAI,WACnC+rB,GACFnsB,EAAKisB,SAASI,IAEhBrsB,EAAKssB,YAWT,QAAST,IAAY5vB,EAAQ+vB,GAC3BxzB,KAAKgzB,UAAW,CAChB,IAAIprB,GAAK5H,KAAK4H,GACVmB,EAASyqB,KAAmB,EAAQxT,EAAuBxU,CAC/DmZ,IAAa3kB,KAAK6gB,KAAM7gB,KAAK4kB,IAAK,SAAU/D,GAC1C9X,EAAO8X,EAAMpd,EAAQmE,KAEnBgZ,EAAM5gB,KAAK6gB,OACb7gB,KAAKyzB,SAASC,IAQlB,QAASJ,MACPtzB,KAAKgzB,UAAW,CAChB,IAAIxrB,GAAOxH,KACP2zB,EAAmB/S,EAAM5gB,KAAK6gB,KAClC7gB,MAAK4zB,eACL/O,GAAgB7kB,KAAK6gB,KAAM7gB,KAAK4kB,IAAK5kB,KAAK4H,GAAI5H,KAAK8kB,KAAM,WACnD6O,GACFnsB,EAAKisB,SAASI,IAEhBrsB,EAAKssB,YAkDT,QAASJ,IAAOrQ,IACTA,EAAMmH,aAAe5J,EAAMyC,EAAMkG,MACpClG,EAAM4H,UAAU,YAUpB,QAAS4I,IAAOxQ,GACVA,EAAMmH,cAAgB5J,EAAMyC,EAAMkG,MACpClG,EAAM4H,UAAU,YAapB,QAAS8I,IAAgBnsB,EAAI6H,GAC3BzP,KAAK4H,GAAKA,CACV,IAAItC,GACAxD,EAAyB,gBAAP2N,EAClB3N,IAAYyhB,GAAW9T,KAAQA,EAAGkS,aAAa,QACjDrc,EAAWktB,GAAc/iB,GAAI,IAE7BnK,EAAW4F,SAAS0Y,yBACpBte,EAASiG,YAAYkE,IAEvBzP,KAAKsF,SAAWA,CAEhB,IAAIutB,GACAmB,EAAMpsB,EAAGiR,YAAYmb,GACzB,IAAIA,EAAM,EAAG,CACX,GAAIC,GAAUD,GAAOlyB,EAAW2N,EAAK0V,GAAa1V,GAClDojB,GAASqB,GAAY/lB,IAAI8lB,GACpBpB,IACHA,EAASsB,GAAQ7uB,EAAUsC,EAAGxE,UAAU,GACxC8wB,GAAYpjB,IAAImjB,EAASpB,QAG3BA,GAASsB,GAAQ7uB,EAAUsC,EAAGxE,UAAU,EAE1CpD,MAAK6yB,OAASA,EAujBhB,QAASuB,IAAatP,EAAMZ,EAAQ4B,GAClC,GAAIrW,GAAKqV,EAAKjE,KAAKwT,eAEnB,IAAK5kB,EAAL,CAEA,IADAqV,EAAOrV,EAAG8jB,WACDzO,GAAQA,EAAKwP,QAAUxO,GAAOhB,EAAKkO,UAAavjB,IAAOyU,IAAQ,CAGtE,GAFAzU,EAAKA,EAAG4kB,iBAEH5kB,EAAI,MACTqV,GAAOrV,EAAG8jB,SAEZ,MAAOzO,IAUT,QAASyP,IAAezP,GACtB,GAAIjE,GAAOiE,EAAKjE,IAEhB,IAAIiE,EAAKF,IACP,MAAQ/D,EAAK2T,SAAW3T,IAASiE,EAAKF,KAAO/D,EAAKiB,aAChDjB,EAAOA,EAAKiB,WAGhB,OAAOjB,GAAK2T,QAUd,QAASC,IAAM51B,GAGb,IAFA,GAAIO,MACAic,EAAM,GAAItU,OAAM+D,KAAK4pB,MAAM71B,MACtBO,EAAIP,GACXwc,EAAIjc,GAAKA,CAEX,OAAOic,GAYT,QAASsZ,IAAc5e,EAAOxS,EAAKpD,EAAOy0B,GACxC,MAAOA,GAA4B,WAAfA,EAA0B7e,EAAQ6e,EAAW/uB,OAAO,GAAGtB,MAAM,MAAQuoB,GAAQ3sB,EAAOy0B,GAAcz0B,EAAMy0B,GAAcrxB,GAAOpD,EA4VnJ,QAAS00B,IAASplB,EAAIqlB,EAAOC,GAG3B,IAAK,GADD5U,GAAIpe,EAAKizB,EADTvO,EAAMqO,KAAa,KAEd11B,EAAI,EAAGI,EAAIiQ,EAAG1M,QAAQpD,OAAQP,EAAII,EAAGJ,IAG5C,GAFA+gB,EAAK1Q,EAAG1M,QAAQ3D,GAChB41B,EAAWD,EAAO5U,EAAGwB,aAAa,YAAcxB,EAAG6U,SACrC,CAEZ,GADAjzB,EAAMoe,EAAG3c,eAAe,UAAY2c,EAAG8U,OAAS9U,EAAGhgB,OAC/C20B,EAGF,MAAO/yB,EAFP0kB,GAAIthB,KAAKpD,GAMf,MAAO0kB,GAWT,QAASyO,IAAU7Y,EAAKta,GAEtB,IADA,GAAI3C,GAAIid,EAAI1c,OACLP,KACL,GAAIqd,EAAWJ,EAAIjd,GAAI2C,GACrB,MAAO3C,EAGX,UAoJF,QAAS+1B,IAAUztB,EAAShD,GAC1B,GAAI0wB,GAAQ1wB,EAAKyC,IAAI,SAAU5D,GAC7B,GAAI8xB,GAAW9xB,EAAI2W,WAAW,EAC9B,OAAImb,GAAW,IAAMA,EAAW,GACvBzuB,SAASrD,EAAK,IAEJ,IAAfA,EAAI5D,SACN01B,EAAW9xB,EAAImI,cAAcwO,WAAW,GACpCmb,EAAW,IAAMA,EAAW,IACvBA,EAGJC,GAAS/xB,IAGlB,OADA6xB,MAAWG,OAAOnwB,SAAUgwB,GACrB,SAAoBz2B,GACzB,GAAIy2B,EAAMvwB,QAAQlG,EAAE62B,YAClB,MAAO9tB,GAAQhI,KAAKM,KAAMrB,IAKhC,QAAS82B,IAAW/tB,GAClB,MAAO,UAAqB/I,GAE1B,MADAA,GAAE+2B,kBACKhuB,EAAQhI,KAAKM,KAAMrB,IAI9B,QAASg3B,IAAcjuB,GACrB,MAAO,UAAwB/I,GAE7B,MADAA,GAAEi3B,iBACKluB,EAAQhI,KAAKM,KAAMrB,IAI9B,QAASk3B,IAAWnuB,GAClB,MAAO,UAAqB/I,GAC1B,GAAIA,EAAE8E,SAAW9E,EAAEm3B,cACjB,MAAOpuB,GAAQhI,KAAKM,KAAMrB,IAqJhC,QAASo3B,IAAUC,GACjB,GAAIC,GAAUD,GACZ,MAAOC,IAAUD,EAEnB,IAAIvP,GAAMqL,GAAOkE,EAEjB,OADAC,IAAUD,GAAQC,GAAUxP,GAAOA,EAC5BA,EAWT,QAASqL,IAAOkE,GACdA,EAAOlb,EAAUkb,EACjB,IAAIE,GAAQvb,EAASqb,GACjBG,EAAQD,EAAMrwB,OAAO,GAAG6F,cAAgBwqB,EAAMtyB,MAAM,EACnDwyB,MACHA,GAASlrB,SAASE,cAAc,OAElC,IACIirB,GADAj3B,EAAIk3B,GAAS32B,MAEjB,IAAc,WAAVu2B,GAAsBA,IAASE,IAAO/gB,MACxC,OACEkhB,MAAOP,EACPE,MAAOA,EAGX,MAAO92B,KAEL,GADAi3B,EAAWG,GAAcp3B,GAAK+2B,EAC1BE,IAAYD,IAAO/gB,MACrB,OACEkhB,MAAOD,GAASl3B,GAAK42B,EACrBE,MAAOG,GA8Of,QAASI,IAAYt2B,GACnB,GAAIsmB,KACJ,IAAItiB,GAAQhE,GACV,IAAK,GAAIf,GAAI,EAAGI,EAAIW,EAAMR,OAAQP,EAAII,EAAGJ,IAAK,CAC5C,GAAIs3B,GAAOv2B,EAAMf,EACjB,IAAIs3B,EACF,GAAoB,gBAATA,GACTjQ,EAAIthB,KAAKuxB,OAET,KAAK,GAAIzvB,KAAKyvB,GACRA,EAAKzvB,IAAIwf,EAAIthB,KAAK8B,OAKzB,IAAI/E,EAAS/B,GAClB,IAAK,GAAIoD,KAAOpD,GACVA,EAAMoD,IAAMkjB,EAAIthB,KAAK5B,EAG7B,OAAOkjB,GAcT,QAASrhB,IAAMqK,EAAIlM,EAAKP,GAEtB,GADAO,EAAMA,EAAI5B,OACN4B,EAAIsB,QAAQ,UAEd,WADA7B,GAAGyM,EAAIlM,EAOT,KAAK,GADDmB,GAAOnB,EAAIwC,MAAM,OACZ3G,EAAI,EAAGI,EAAIkF,EAAK/E,OAAQP,EAAII,EAAGJ,IACtC4D,EAAGyM,EAAI/K,EAAKtF,IAiWhB,QAASu3B,IAAkBrW,EAAO1Y,EAAInG,GAIpC,QAAS4C,OACD2K,GAAU4nB,EACdn1B,IAEA6e,EAAMtR,GAAQtP,KAAKkI,EAAIvD,GAP3B,GAAIuyB,GAAQtW,EAAM3gB,OACdqP,EAAS,CACbsR,GAAM,GAAG5gB,KAAKkI,EAAIvD,GA2BpB,QAASwyB,IAAapnB,EAAIqnB,EAAalvB,GAKrC,IAJA,GAGI7E,GAASmF,EAAM6uB,EAAM52B,EAAOqrB,EAAMnR,EAAQ2b,EAH1CtgB,KACAshB,EAAQ30B,OAAOqC,KAAKoyB,GACpB13B,EAAI43B,EAAMr3B,OAEPP,KAIL,GAHA8I,EAAO8uB,EAAM53B,GACb2D,EAAU+zB,EAAY5uB,IAAS+uB,GAEgB,UAAT/uB,EAStC,GADAsjB,EAAO7Q,EAASzS,GACXgvB,GAAU7vB,KAAKmkB,GAApB,CAsBA,GAjBAwK,GACE9tB,KAAMA,EACNsjB,KAAMA,EACNzoB,QAASA,EACT6oB,KAAMuL,GAAiBC,QACvBzK,IAAK,MAGPoK,EAAOjc,EAAU5S,GAEuB,QAAnC/H,EAAQshB,EAAYhS,EAAIsnB,MACuB,QAA7C52B,EAAQshB,EAAYhS,EAAIsnB,EAAO,UAClCf,EAAKpK,KAAOuL,GAAiBE,QAC0B,QAA7Cl3B,EAAQshB,EAAYhS,EAAIsnB,EAAO,YACzCf,EAAKpK,KAAOuL,GAAiBG,WAGnB,OAAVn3B,EAEF61B,EAAKrJ,IAAMxsB,EACXka,EAASuD,EAAezd,GACxBA,EAAQka,EAAO5U,WACfuwB,EAAKzY,QAAUlD,EAAOkD,QAElB1D,EAAU1Z,KAAWka,EAAOkD,QAI9ByY,EAAKuB,kBAAmB,GAExBvB,EAAKtY,SAAU,EAEuBsY,EAAKpK,OAASuL,GAAiBE,SAAYG,GAAenwB,KAAKlH,KACnG61B,EAAKpK,KAAOuL,GAAiBC,QAC7Bh2B,GAAK,2DAAkEjB,EAAOyH,KAGlFouB,EAAKyB,WAAat3B,EAGoB4C,EAAQutB,QAAU0F,EAAKpK,OAASuL,GAAiBE,SACrFj2B,GAAK,SAAW8G,EAAO,oCAAqCN,OAEzD,IAAoC,QAA/BzH,EAAQkhB,EAAQ5R,EAAIsnB,IAE9Bf,EAAKrJ,IAAMxsB,MACN,CAEL,GAAIu3B,GAAgBlM,EAAKzf,aACzB5L,GAAQ,UAAUkH,KAAKa,KAAUuH,EAAG8R,aAAamW,IAAkBjoB,EAAG8R,aAAa,IAAMmW,IAAkBjoB,EAAG8R,aAAa,UAAYmW,IAAkBjoB,EAAG8R,aAAa,IAAMmW,EAAgB,UAAYjoB,EAAG8R,aAAa,UAAYmW,EAAgB,UAAYjoB,EAAG8R,aAAa,IAAMmW,EAAgB,UAAYjoB,EAAG8R,aAAa,UAAYmW,EAAgB,UAC7Vv3B,EACFiB,GAAK,kCAAoCs2B,EAAgB,qBAA4BX,EAAO,kFAAwFnvB,GAC3K7E,EAAQ40B,UAEjBv2B,GAAK,0BAA4B8G,EAAMN,GAI3C8N,EAAMvQ,KAAK6wB,OA9DyB50B,IAAK,sBAAwB8G,EAAO,0CAAgDN,OATtHxG,IAAK,4BAA6BwG,EAyEtC,OAAOgwB,IAAgBliB,GAUzB,QAASkiB,IAAgBliB,GACvB,MAAO,UAAqB9N,EAAIE,GAE9BF,EAAGiwB,SAIH,KAHA,GAEI7B,GAAMxK,EAAMzoB,EAAS5C,EAAOwsB,EAF5BmL,EAAclwB,EAAGxE,SAASikB,UAC1BjoB,EAAIsW,EAAM/V,OAEPP,KAQJ,GAPD42B,EAAOtgB,EAAMtW,GACbutB,EAAMqJ,EAAKrJ,IACXnB,EAAOwK,EAAKxK,KACZzoB,EAAUizB,EAAKjzB,QACf6E,EAAGiwB,OAAOrM,GAAQwK,EACd8B,GAAe7e,EAAO6e,EAAatM,IACrCuM,GAASnwB,EAAIouB,EAAM8B,EAAYtM,IACpB,OAARmB,EAEHoL,GAASnwB,EAAIouB,EAAM51B,YACd,IAAI41B,EAAKtY,QAEVsY,EAAKpK,OAASuL,GAAiBG,UAEjCn3B,GAAS2H,GAASF,EAAGgjB,UAAYhjB,GAAIowB,KAAKhC,EAAKyB,YAC/CM,GAASnwB,EAAIouB,EAAM71B,IAEfyH,EAAGgjB,SAELhjB,EAAGqwB,UACD/vB,KAAM,OACNuT,IAAKyc,GACLlC,KAAMA,GACL,KAAM,KAAMluB,GAGbiwB,GAASnwB,EAAIouB,EAAMpuB,EAAGowB,KAAKhC,EAAKyB,iBAGjC,IAAIzB,EAAKuB,iBAAkB,CAEhC,GAAI5Z,GAAWlD,EAAYkS,EAC3BxsB,GAAQwd,IAAagP,EAAMnS,EAAUJ,EAASuS,IAAQhP,EACtDoa,GAASnwB,EAAIouB,EAAM71B,OAMnBA,GAAQ4C,EAAQiI,OAASmtB,UAAoB,KAARxL,GAAcA,IAAQ7R,EAAUkb,EAAK9tB,QAAgBykB,EAC1FoL,GAASnwB,EAAIouB,EAAM71B,IAiB3B,QAASi4B,IAAiBxwB,EAAIouB,EAAMqC,EAAUr1B,GAC5C,GAAIs1B,GAAWtC,EAAKtY,SAAW2Q,GAAa2H,EAAKyB,YAC7Ct3B,EAAQk4B,CACEj4B,UAAVD,IACFA,EAAQo4B,GAAoB3wB,EAAIouB,IAElC71B,EAAQq4B,GAAWxC,EAAM71B,EAAOyH,EAChC,IAAI6wB,GAAUt4B,IAAUk4B,CACnBK,IAAW1C,EAAM71B,EAAOyH,KAC3BzH,EAAQC,QAENk4B,IAAaG,EACf3Q,GAAkB,WAChB9kB,EAAG7C,KAGL6C,EAAG7C,GAYP,QAAS43B,IAASnwB,EAAIouB,EAAM71B,GAC1Bi4B,GAAiBxwB,EAAIouB,EAAM71B,EAAO,SAAUA,GAC1C0oB,GAAejhB,EAAIouB,EAAKxK,KAAMrrB,KAYlC,QAASw4B,IAAW/wB,EAAIouB,EAAM71B,GAC5Bi4B,GAAiBxwB,EAAIouB,EAAM71B,EAAO,SAAUA,GAC1CyH,EAAGouB,EAAKxK,MAAQrrB,IAYpB,QAASo4B,IAAoB3wB,EAAIouB,GAE/B,GAAIjzB,GAAUizB,EAAKjzB,OACnB,KAAKkW,EAAOlW,EAAS,WAEnB,MAAOA,GAAQiI,OAASmtB,SAAkB/3B,MAE5C,IAAIqb,GAAM1Y,EAAQ,UAMlB,OAJIb,GAASuZ,IACuBra,GAAK,mCAAqC40B,EAAK9tB,KAAO,2FAAsGN,GAG1K,kBAAR6T,IAAsB1Y,EAAQiI,OAASijB,SAAWxS,EAAI/b,KAAKkI,GAAM6T,EAWjF,QAASid,IAAW1C,EAAM71B,EAAOyH,GAC/B,IAAKouB,EAAKjzB,QAAQ40B,WACL,OAAb3B,EAAKrJ,KACI,MAATxsB,GAEI,OAAO,CAEX,IAAI4C,GAAUizB,EAAKjzB,QACfiI,EAAOjI,EAAQiI,KACf4tB,GAAS5tB,EACT6tB,IACJ,IAAI7tB,EAAM,CACH7G,GAAQ6G,KACXA,GAAQA,GAEV,KAAK,GAAI5L,GAAI,EAAGA,EAAI4L,EAAKrL,SAAWi5B,EAAOx5B,IAAK,CAC9C,GAAI05B,GAAeC,GAAW54B,EAAO6K,EAAK5L,GAC1Cy5B,GAAc1zB,KAAK2zB,EAAaE,cAChCJ,EAAQE,EAAaF,OAGzB,IAAKA,EAIH,MAFEx3B,IAAK,6CAA+C40B,EAAK9tB,KAAO,eAAsB2wB,EAAc1xB,IAAI8xB,IAAY5yB,KAAK,MAAQ,SAAW6yB,GAAY/4B,GAAS,IAAKyH,IAEjK,CAET,IAAIuxB,GAAYp2B,EAAQo2B,SACxB,SAAIA,IACGA,EAAUh5B,MACqBiB,GAAK,yDAA2D40B,EAAK9tB,KAAO,KAAMN,IAC7G,GAcb,QAAS4wB,IAAWxC,EAAM71B,EAAOyH,GAC/B,GAAIwxB,GAASpD,EAAKjzB,QAAQq2B,MAC1B,OAAKA,GAGiB,kBAAXA,GACFA,EAAOj5B,IAEoBiB,GAAK,4BAA8B40B,EAAK9tB,KAAO,8BAA1C,mBAAgFkxB,GAAhF,YAAAzgB,EAAgFygB,IAAS,IAAKxxB,GAC9HzH,GANAA,EAkBX,QAAS44B,IAAW54B,EAAO6K,GACzB,GAAI4tB,GACAI,CAsBJ,OArBIhuB,KAASquB,QACXL,EAAe,SACfJ,GAAQ,mBAAOz4B,GAAP,YAAAwY,EAAOxY,MAAU64B,GAChBhuB,IAASsP,QAClB0e,EAAe,SACfJ,GAAQ,mBAAOz4B,GAAP,YAAAwY,EAAOxY,MAAU64B,GAChBhuB,IAASmtB,SAClBa,EAAe,UACfJ,GAAQ,mBAAOz4B,GAAP,YAAAwY,EAAOxY,MAAU64B,GAChBhuB,IAASijB,UAClB+K,EAAe,WACfJ,GAAQ,mBAAOz4B,GAAP,YAAAwY,EAAOxY,MAAU64B,GAChBhuB,IAAS3I,QAClB22B,EAAe,SACfJ,EAAQx2B,EAAcjC,IACb6K,IAASjE,OAClBiyB,EAAe,QACfJ,EAAQz0B,GAAQhE,IAEhBy4B,EAAQz4B,YAAiB6K,IAGzB4tB,MAAOA,EACPI,aAAcA,GAWlB,QAASC,IAAWjuB,GAClB,MAAOA,GAAOA,EAAKnF,OAAO,GAAG6F,cAAgBV,EAAKpH,MAAM,GAAK,cAU/D,QAASs1B,IAAYn3B,GACnB,MAAOM,QAAOE,UAAUmE,SAAShH,KAAKqC,GAAK6B,MAAM,MAgEnD,QAAS01B,IAAQC,GACfC,GAAQr0B,KAAKo0B,GACRhJ,KACHA,IAAS,EACT/uB,GAASi4B,KASb,QAASA,MAGP,IAAK,GADDp6B,GAAI6L,SAAS8V,gBAAgB0Y,aACxBt6B,EAAI,EAAGA,EAAIo6B,GAAQ75B,OAAQP,IAClCo6B,GAAQp6B,IAMV,OAJAo6B,OACAjJ,IAAS,EAGFlxB,EA2CT,QAASs6B,IAAWlqB,EAAIqW,EAAIxF,EAAO1Y,GACjC5H,KAAK8lB,GAAKA,EACV9lB,KAAKyP,GAAKA,EACVzP,KAAK45B,WAAatZ,GAASA,EAAMsZ,YAAc9T,EAAK,SACpD9lB,KAAK65B,WAAavZ,GAASA,EAAMuZ,YAAc/T,EAAK,SACpD9lB,KAAKsgB,MAAQA,EACbtgB,KAAK4H,GAAKA,EAEV5H,KAAK85B,gBAAkB95B,KAAK+5B,aAAe/5B,KAAKwc,OAASxc,KAAKg6B,YAAch6B,KAAKmgB,GAAKngB,KAAKyB,GAAK,KAChGzB,KAAKi6B,aAAc,EACnBj6B,KAAKk6B,QAAUl6B,KAAKm6B,MAAO,EAC3Bn6B,KAAKo6B,aAELp6B,KAAKgL,KAAOsV,GAASA,EAAMtV,KAGrBhL,KAAKgL,MAAQhL,KAAKgL,OAASqvB,IAAmBr6B,KAAKgL,OAASsvB,IAC9Dl5B,GAAK,+CAAiDpB,KAAK8lB,GAAK,MAAQ9lB,KAAKgL,KAAMpD,EAIvF,IAAIJ,GAAOxH,MAAM,gBAAiB,YAAa,gBAAiB,aAAa6D,QAAQ,SAAU02B,GAC7F/yB,EAAK+yB,GAAK15B,EAAK2G,EAAK+yB,GAAI/yB,KA4S5B,QAASgzB,IAAS/qB,GAChB,GAAI,OAAOpI,KAAKoI,EAAGmT,cAAe,CAGhC,GAAI6X,GAAOhrB,EAAGirB,uBACd,SAASD,EAAKE,OAASF,EAAKG,QAE5B,QAASnrB,EAAGorB,aAAeprB,EAAGiqB,cAAgBjqB,EAAGqrB,iBAAiBn7B,QAwDtE,QAASw0B,IAAQ1kB,EAAI1M,EAASg4B,GAE5B,GAAIC,GAAaD,IAAYh4B,EAAQk4B,aAAeC,GAAYzrB,EAAI1M,GAAW,KAE3Eo4B,EAAgBH,GAAcA,EAAWI,UAAcC,GAAS5rB,KAAOA,EAAGiU,gBAA4D,KAA1C4X,GAAgB7rB,EAAGyjB,WAAYnwB,EAe/H,OAAO,UAAyB6E,EAAI6H,EAAIzF,EAAMlC,EAAOgd,GAEnD,GAAIoO,GAAahY,EAAQzL,EAAGyjB,YAExBqI,EAAOC,GAAe,WACpBR,GAAYA,EAAWpzB,EAAI6H,EAAIzF,EAAMlC,EAAOgd,GAC5CqW,GAAaA,EAAYvzB,EAAIsrB,EAAYlpB,EAAMlC,EAAOgd,IACzDld,EACH,OAAO6zB,IAAa7zB,EAAI2zB,IAY5B,QAASC,IAAe3I,EAAQjrB,GAG9B,GAAI8zB,GAAmB9zB,EAAGiiB,YAAYlqB,MACtCkzB,IACA,IAAI0I,GAAO3zB,EAAGiiB,YAAYjmB,MAAM83B,EAChCH,GAAKI,KAAKC,GACV,KAAK,GAAIx8B,GAAI,EAAGI,EAAI+7B,EAAK57B,OAAQP,EAAII,EAAGJ,IACtCm8B,EAAKn8B,GAAGy8B,OAEV,OAAON,GAUT,QAASK,IAAoB18B,EAAGwb,GAG9B,MAFAxb,GAAIA,EAAE48B,WAAWrgB,IAAIsgB,UAAYC,GACjCthB,EAAIA,EAAEohB,WAAWrgB,IAAIsgB,UAAYC,GAC1B98B,EAAIwb,KAASxb,IAAMwb,EAAI,EAAI,EAkBpC,QAAS+gB,IAAa7zB,EAAI2zB,EAAM56B,EAASs7B,GACvC,QAAShJ,GAAOiJ,GACdC,GAAav0B,EAAI2zB,EAAMW,GACnBv7B,GAAWs7B,GACbE,GAAax7B,EAASs7B,GAK1B,MADAhJ,GAAOsI,KAAOA,EACPtI,EAWT,QAASkJ,IAAav0B,EAAI2zB,EAAMW,GAE9B,IADA,GAAI98B,GAAIm8B,EAAK57B,OACNP,KACLm8B,EAAKn8B,GAAGg9B,YAC+BF,GACrCt0B,EAAGiiB,YAAYwS,QAAQd,EAAKn8B,IAelC,QAASk9B,IAAoB10B,EAAI6H,EAAIiG,EAAO5N,GAC1C,GAAIy0B,GAAc1F,GAAapnB,EAAIiG,EAAO9N,GACtC40B,EAAWhB,GAAe,WAC5Be,EAAY30B,EAAIE,IACfF,EACH,OAAO6zB,IAAa7zB,EAAI40B,GAkB1B,QAASC,IAAYhtB,EAAI1M,EAAS25B,GAChC,GAEIC,GAAeC,EAFfC,EAAiB95B,EAAQ+5B,gBACzBC,EAAgBh6B,EAAQi6B,cAK5B,IAAoB,KAAhBvtB,EAAG0R,SAGDpe,EAAQk4B,cAEN4B,GAAkBH,IACpBC,EAAgBM,GAAkBJ,EAAgBH,IAEhDK,IAEFH,EAAiBK,GAAkBF,EAAeh6B,KAIpD65B,EAAiBK,GAAkBxtB,EAAGgV,WAAY1hB,OAE/C,IAAsC85B,EAAgB,CAE3D,GAAI7F,GAAQ6F,EAAe71B,OAAO,SAAU+vB,GAE1C,MAAOA,GAAK7uB,KAAKrD,QAAQ,OAAS,IAEjCq4B,GAAK71B,KAAK0vB,EAAK7uB,OAEF,SAAd6uB,EAAK7uB,OACJf,IAAI,SAAU4vB,GACf,MAAO,IAAMA,EAAK7uB,KAAO,KAE3B,IAAI8uB,EAAMr3B,OAAQ,CAChB,GAAIw9B,GAASnG,EAAMr3B,OAAS,CAC5ByB,IAAK,aAAe+7B,EAAS,KAAO,KAAOnG,EAAM3wB,KAAK,OAAS82B,EAAS,OAAS,OAAS,0BAAiCp6B,EAAQ0M,GAAGsU,QAAQhY,cAAgB,6GAKlK,MADAhJ,GAAQ+5B,gBAAkB/5B,EAAQi6B,eAAiB,KAC5C,SAAoBp1B,EAAI6H,EAAI3H,GAEjC,GACIm0B,GADAt7B,EAAUiH,EAAGgjB,QAEbjqB,IAAWg8B,IACbV,EAAcT,GAAe,WAC3BmB,EAAch8B,EAAS8O,EAAI,KAAM3H,IAChCnH,GAIL,IAAIy8B,GAAW5B,GAAe,WACxBoB,GAAgBA,EAAeh1B,EAAI6H,IACtC7H,EAIH,OAAO6zB,IAAa7zB,EAAIw1B,EAAUz8B,EAASs7B,IAa/C,QAASf,IAAYra,EAAM9d,GACzB,GAAIiI,GAAO6V,EAAKM,QAChB,OAAa,KAATnW,GAAeqwB,GAASxa,GAER,IAAT7V,GAAc6V,EAAKtW,KAAK5I,OAC1B07B,GAAgBxc,EAAM9d,GAEtB,KAJAu6B,GAAezc,EAAM9d,GAgBhC,QAASu6B,IAAe7tB,EAAI1M,GAI1B,GAAmB,aAAf0M,EAAGsU,QAAwB,CAC7B,GAAI5G,GAAS8B,EAAUxP,EAAGtP,MACtBgd,KACF1N,EAAGoT,aAAa,SAAUtD,EAAYpC,IACtC1N,EAAGtP,MAAQ,IAGf,GAAIo9B,GACA9X,EAAWhW,EAAG8U,gBACdC,EAAQiB,GAAYvK,EAAQzL,EAAGgV,WAiBnC,OAfIgB,KACF8X,EAASC,GAAwB/tB,EAAI+U,EAAOzhB,IAGzCw6B,IACHA,EAASE,GAAuBhuB,EAAI1M,IAGjCw6B,IACHA,EAASG,GAAejuB,EAAI1M,KAGzBw6B,GAAU9X,IACb8X,EAASN,GAAkBzY,EAAOzhB,IAE7Bw6B,EAWT,QAASF,IAAgBxc,EAAM9d,GAE7B,GAAI8d,EAAK8c,MACP,MAAOC,GAGT,IAAIzgB,GAAS8B,EAAU4B,EAAKgd,UAC5B,KAAK1gB,EACH,MAAO,KAST,KADA,GAAI9Y,GAAOwc,EAAKiB,YACTzd,GAA0B,IAAlBA,EAAK8c,UAClB9c,EAAKs5B,OAAQ,EACbt5B,EAAOA,EAAKyd,WAKd,KAAK,GADDrS,GAAI+P,EADJsF,EAAO5Z,SAAS0Y,yBAEXxkB,EAAI,EAAGI,EAAI2d,EAAOxd,OAAQP,EAAII,EAAGJ,IACxCogB,EAAQrC,EAAO/d,GACfqQ,EAAK+P,EAAMF,IAAMwe,GAAiBte,EAAOzc,GAAWmI,SAASkZ,eAAe5E,EAAMrf,OAClF2kB,EAAKvZ,YAAYkE,EAEnB,OAAOsuB,IAAmB5gB,EAAQ2H,EAAM/hB,GAU1C,QAAS66B,IAAWh2B,EAAIiZ,GACtBzP,EAAOyP,GAWT,QAASid,IAAiBte,EAAOzc,GAgB/B,QAASi7B,GAAahzB,GACpB,IAAIwU,EAAMsc,WAAV,CACA,GAAIzhB,GAASuD,EAAe4B,EAAMrf,MAClCqf,GAAMsc,YACJ5zB,KAAM8C,EACNyQ,IAAKwiB,GAAWjzB,GAChBvF,WAAY4U,EAAO5U,WACnB8X,QAASlD,EAAOkD,UAtBpB,GAAI9N,EAyBJ,OAxBI+P,GAAMJ,QACR3P,EAAKvE,SAASkZ,eAAe5E,EAAMrf,OAE/Bqf,EAAMN,MACRzP,EAAKvE,SAASiZ,cAAc,UAC5B6Z,EAAa,UAKbvuB,EAAKvE,SAASkZ,eAAe,KAC7B4Z,EAAa,SAaVvuB,EAUT,QAASsuB,IAAmB5gB,EAAQ2H,GAClC,MAAO,UAAwBld,EAAI6H,EAAIzF,EAAMlC,GAI3C,IAAK,GADD0X,GAAOrf,EAAO0gB,EAFdqd,EAAYpZ,EAAKQ,WAAU,GAC3B4N,EAAahY,EAAQgjB,EAAUhL,YAE1B9zB,EAAI,EAAGI,EAAI2d,EAAOxd,OAAQP,EAAII,EAAGJ,IACxCogB,EAAQrC,EAAO/d,GACfe,EAAQqf,EAAMrf,MACVqf,EAAMF,MACRuB,EAAOqS,EAAW9zB,GACdogB,EAAMJ,SACRjf,GAAS2H,GAASF,GAAI+X,MAAMxf,GACxBqf,EAAMN,KACRrd,EAAQgf,EAAM2R,GAAcryB,GAAO,IAEnC0gB,EAAKtW,KAAO4P,EAAUha,IAGxByH,EAAGqwB,SAASzY,EAAMsc,WAAYjb,EAAM7W,EAAMlC,GAIhDjG,GAAQ4N,EAAIyuB,IAYhB,QAAS5C,IAAgB6C,EAAUp7B,GAGjC,IAAK,GADDi4B,GAAYG,EAAata,EADzBud,KAEKh/B,EAAI,EAAGI,EAAI2+B,EAASx+B,OAAQP,EAAII,EAAGJ,IAC1CyhB,EAAOsd,EAAS/+B,GAChB47B,EAAaE,GAAYra,EAAM9d,GAC/Bo4B,EAAgBH,GAAcA,EAAWI,UAA8B,WAAjBva,EAAKkD,UAAwBlD,EAAK6C,gBAA8D,KAA5C4X,GAAgBza,EAAKqS,WAAYnwB,GAC3Iq7B,EAAQj5B,KAAK61B,EAAYG,EAE3B,OAAOiD,GAAQz+B,OAAS0+B,GAAgBD,GAAW,KAUrD,QAASC,IAAgBD,GACvB,MAAO,UAAqBx2B,EAAIsd,EAAOlb,EAAMlC,EAAOgd,GAElD,IAAK,GADDjE,GAAMma,EAAYsD,EACbl/B,EAAI,EAAGP,EAAI,EAAGW,EAAI4+B,EAAQz+B,OAAQP,EAAII,EAAGX,IAAK,CACrDgiB,EAAOqE,EAAMrmB,GACbm8B,EAAaoD,EAAQh/B,KACrBk/B,EAAiBF,EAAQh/B,IAEzB,IAAI8zB,GAAahY,EAAQ2F,EAAKqS,WAC1B8H,IACFA,EAAWpzB,EAAIiZ,EAAM7W,EAAMlC,EAAOgd,GAEhCwZ,GACFA,EAAe12B,EAAIsrB,EAAYlpB,EAAMlC,EAAOgd,KAcpD,QAAS2Y,IAAuBhuB,EAAI1M,GAClC,GAAIuc,GAAM7P,EAAGsU,QAAQhY,aACrB,KAAI2Z,GAAYre,KAAKiY,GAArB,CAGA,GAAI7D,GAAMoK,GAAa9iB,EAAS,oBAAqBuc,EACrD,OAAI7D,GACK8iB,GAAuB9uB,EAAI6P,EAAK,GAAIvc,EAAS0Y,GADtD,QAcF,QAASiiB,IAAejuB,EAAI1M,GAC1B,GAAIgU,GAAYyO,GAAmB/V,EAAI1M,EACvC,IAAIgU,EAAW,CACb,GAAIynB,GAAMla,GAAQ7U,GACdqsB,GACF5zB,KAAM,YACNs2B,IAAKA,EACL/4B,WAAYsR,EAAU+O,GACtBrK,IAAKgjB,GAAmB1nB,UACxB2nB,WACEh5B,SAAUqR,EAAU2G,UAGpBihB,EAAkB,SAAyB/2B,EAAI6H,EAAIzF,EAAMlC,EAAOgd,GAC9D0Z,GACF3V,IAAgB/gB,GAASF,GAAI8hB,MAAO8U,EAAK,MAE3C52B,EAAGqwB,SAAS6D,EAAYrsB,EAAIzF,EAAMlC,EAAOgd,GAG3C,OADA6Z,GAAgBvD,UAAW,EACpBuD,GAcX,QAASnB,IAAwB/tB,EAAI+U,EAAOzhB,GAE1C,GAA6B,OAAzBse,EAAQ5R,EAAI,SACd,MAAOmvB,GAGT,IAAInvB,EAAGkS,aAAa,UAAW,CAC7B,GAAIvD,GAAO3O,EAAGovB,sBACd,IAAIzgB,GAAQA,EAAKuD,aAAa,QAC5B,MAAOid,IAKX,IAAK,GADD7H,GAAM7uB,EAAM/H,EAAOu+B,EAAWI,EAASC,EAASC,EAASxhB,EAAK/B,EAAKwjB,EAC9D7/B,EAAI,EAAG8/B,EAAI1a,EAAM7kB,OAAQP,EAAI8/B,EAAG9/B,IACvC23B,EAAOvS,EAAMplB,GACb8I,EAAO6uB,EAAK7uB,KAAKrG,QAAQs9B,GAAY,KACjCL,EAAU52B,EAAK3D,MAAM66B,OACvB3jB,EAAMoK,GAAa9iB,EAAS,aAAc+7B,EAAQ,IAC9CrjB,GAAOA,EAAI2f,YACR6D,IAAYxjB,EAAIsgB,UAAYsD,IAA6BJ,EAAQlD,YACpEkD,EAAUxjB,EACVujB,EAAUjI,EAAK7uB,KACfw2B,EAAYY,GAAevI,EAAK7uB,MAChC/H,EAAQ42B,EAAK52B,MACb4+B,EAAUD,EAAQ,GAClBthB,EAAMshB,EAAQ,IAMtB,OAAIG,GACKV,GAAuB9uB,EAAIsvB,EAAS5+B,EAAO4C,EAASk8B,EAASD,EAASxhB,EAAKkhB,GADpF,OAKF,QAASE,OAoBT,QAASL,IAAuB9uB,EAAIsvB,EAAS5+B,EAAO4C,EAAS0Y,EAAKujB,EAASxhB,EAAKkhB,GAC9E,GAAIrkB,GAASuD,EAAezd,GACxB27B,GACF5zB,KAAM62B,EACNvhB,IAAKA,EACL/X,WAAY4U,EAAO5U,WACnB8X,QAASlD,EAAOkD,QAChBoP,IAAKxsB,EACL42B,KAAMiI,EACNN,UAAWA,EACXjjB,IAAKA,EAGS,SAAZsjB,GAAiC,gBAAZA,IACvBjD,EAAW0C,IAAMla,GAAQ7U,GAE3B,IAAIzM,GAAK,SAA4B4E,EAAI6H,EAAIzF,EAAMlC,EAAOgd,GACpDgX,EAAW0C,KACb3V,IAAgB/gB,GAASF,GAAI8hB,MAAOoS,EAAW0C,IAAK,MAEtD52B,EAAGqwB,SAAS6D,EAAYrsB,EAAIzF,EAAMlC,EAAOgd,GAG3C,OADA9hB,GAAGo4B,UAAW,EACPp4B,EAWT,QAASi6B,IAAkBzY,EAAOzhB,GA8EhC,QAASw8B,GAAQR,EAAStjB,EAAK+jB,GAC7B,GAAIC,GAAkBD,GAAgBE,GAAWF,GAC7CnlB,GAAUolB,GAAmB7hB,EAAezd,EAChDo7B,GAAKp2B,MACH+C,KAAM62B,EACNhI,KAAMiI,EACNrS,IAAK0L,EACL5c,IAAKA,EACL+B,IAAKA,EACLkhB,UAAWA,EAIXj5B,WAAY4U,GAAUA,EAAO5U,WAC7B8X,QAASlD,GAAUA,EAAOkD,QAC1BoiB,OAAQH,EACRE,WAAYD,IA1FhB,IAHA,GAEI1I,GAAM7uB,EAAM/H,EAAO6+B,EAAS3G,EAAU0G,EAASvhB,EAAKkhB,EAAWkB,EAAQziB,EAAQ2hB,EAF/E1/B,EAAIolB,EAAM7kB,OACV47B,KAEGn8B,KAYL,GAXA23B,EAAOvS,EAAMplB,GACb8I,EAAO82B,EAAUjI,EAAK7uB,KACtB/H,EAAQk4B,EAAWtB,EAAK52B,MACxBgd,EAAS8B,EAAU9e,GAEnBqd,EAAM,KAENkhB,EAAYY,GAAep3B,GAC3BA,EAAOA,EAAKrG,QAAQs9B,GAAY,IAG5BhiB,EACFhd,EAAQof,EAAYpC,GACpBK,EAAMtV,EACNq3B,EAAQ,OAAQtB,GAAWp9B,KAAMsc,GAGlB,UAATjV,GAAoBnB,MAAMxE,UAAUs9B,KAAKngC,KAAK8kB,EAAO,SAAUuS,GACjE,MAAqB,WAAdA,EAAK7uB,MAAmC,iBAAd6uB,EAAK7uB,QAEtC9G,GAAK,UAAYi3B,EAAW,yGAA+Gt1B,OAM/I,IAAI+8B,GAAaz4B,KAAKa,GACpBw2B,EAAUh5B,SAAWq6B,GAAO14B,KAAKa,GACjCq3B,EAAQ,aAAcd,GAAmBre,gBAIzC,IAAI8c,GAAK71B,KAAKa,GACZsV,EAAMtV,EAAKrG,QAAQq7B,GAAM,IACzBqC,EAAQ,KAAMtB,GAAW/b,QAIzB,IAAI6d,GAAO14B,KAAKa,GACd62B,EAAU72B,EAAKrG,QAAQk+B,GAAQ,IACf,UAAZhB,GAAmC,UAAZA,EACzBQ,EAAQR,EAASN,GAAmBM,KAEpCvhB,EAAMuhB,EACNQ,EAAQ,OAAQtB,GAAWp9B,WAK7B,IAAIi+B,EAAU52B,EAAK3D,MAAM66B,IAAY,CAKnC,GAJAL,EAAUD,EAAQ,GAClBthB,EAAMshB,EAAQ,GAGE,SAAZC,EACF,QAGFa,GAAS/Z,GAAa9iB,EAAS,aAAcg8B,GAAS,GAClDa,GACFL,EAAQR,EAASa,GAiC/B,GAAIrE,EAAK57B,OACP,MAAOqgC,IAAezE,GAW1B,QAAS+D,IAAep3B,GACtB,GAAIue,GAAMpkB,OAAO2a,OAAO,MACpBzY,EAAQ2D,EAAK3D,MAAM46B,GACvB,IAAI56B,EAEF,IADA,GAAInF,GAAImF,EAAM5E,OACPP,KACLqnB,EAAIliB,EAAMnF,GAAGwE,MAAM,KAAM,CAG7B,OAAO6iB,GAUT,QAASuZ,IAAe/B,GACtB,MAAO,UAAoBr2B,EAAI6H,EAAIzF,EAAMlC,EAAOgd,GAG9C,IADA,GAAI1lB,GAAI6+B,EAAWt+B,OACZP,KACLwI,EAAGqwB,SAASgG,EAAW7+B,GAAIqQ,EAAIzF,EAAMlC,EAAOgd,IAYlD,QAAS4a,IAAWviB,GAElB,IADA,GAAI/d,GAAI+d,EAAOxd,OACRP,KACL,GAAI+d,EAAO/d,GAAGggB,QAAS,OAAO,EAIlC,QAASic,IAAS5rB,GAChB,MAAsB,WAAfA,EAAGsU,WAA0BtU,EAAGkS,aAAa,SAAuC,oBAA5BlS,EAAG8R,aAAa,SAiBjF,QAAS0e,IAAWxwB,EAAI1M,GA8BtB,MAxBIA,KACFA,EAAQ+5B,gBAAkBoD,GAAazwB,IAIrC8T,GAAW9T,KACbA,EAAK+iB,GAAc/iB,IAEjB1M,IACEA,EAAQk4B,eAAiBl4B,EAAQuC,WACnCvC,EAAQuC,SAAW,iBAEjBvC,EAAQuC,WACVvC,EAAQo9B,SAAWhd,GAAe1T,GAClCA,EAAK2wB,GAAmB3wB,EAAI1M,KAG5BygB,GAAW/T,KAIbsS,EAAQiC,GAAa,WAAW,GAAOvU,GACvCA,EAAGlE,YAAYyY,GAAa,SAAS,KAEhCvU,EAYT,QAAS2wB,IAAmB3wB,EAAI1M,GAC9B,GAAIuC,GAAWvC,EAAQuC,SACnBwf,EAAO0N,GAAcltB,GAAU,EACnC,IAAIwf,EAAM,CACR,GAAIub,GAAWvb,EAAK9C,WAChB1C,EAAM+gB,EAAStc,SAAWsc,EAAStc,QAAQhY,aAC/C,OAAIhJ,GAAQlB,SAEN4N,IAAOvE,SAASjB,MACgB7I,GAAK,6IAOzC0jB,EAAKoO,WAAWvzB,OAAS,GAEH,IAAtB0gC,EAASlf,UAED,cAAR7B,GAAuBuG,GAAa9iB,EAAS,aAAcuc,IAAQoC,EAAY2e,EAAU,OAEzFxa,GAAa9iB,EAAS,oBAAqBuc,IAE3C+gB,EAAS1e,aAAa,UAEtB0e,EAAS1e,aAAa,QACbmD,GAEP/hB,EAAQi6B,eAAiBkD,GAAaG,GACtCC,GAAW7wB,EAAI4wB,GACRA,KAGT5wB,EAAGlE,YAAYuZ,GACRrV,GAGyBrO,GAAK,4BAA8BkE,GAYzE,QAAS46B,IAAazwB,GACpB,GAAoB,IAAhBA,EAAG0R,UAAkB1R,EAAG8U,gBAC1B,MAAOrJ,GAAQzL,EAAGgV,YAYtB,QAAS6b,IAAW/kB,EAAMD,GAIxB,IAHA,GAEIpT,GAAM/H,EAFNqkB,EAAQjJ,EAAKkJ,WACbrlB,EAAIolB,EAAM7kB,OAEPP,KACL8I,EAAOsc,EAAMplB,GAAG8I,KAChB/H,EAAQqkB,EAAMplB,GAAGe,MACZmb,EAAGqG,aAAazZ,IAAUq4B,GAAcl5B,KAAKa,GAE9B,UAATA,IAAqB+W,EAAU9e,KAAWA,EAAQA,EAAMwB,SACjExB,EAAM4F,MAAM,OAAOlC,QAAQ,SAAU6e,GACnCI,EAASxH,EAAIoH,KAHfpH,EAAGuH,aAAa3a,EAAM/H,GAoB5B,QAASqgC,IAAa54B,EAAI6b,GACxB,GAAKA,EAAL,CAKA,IAAK,GADDhU,GAAIvH,EADJu4B,EAAW74B,EAAG84B,cAAgBr+B,OAAO2a,OAAO,MAEvC5d,EAAI,EAAGI,EAAIikB,EAAQsH,SAASprB,OAAQP,EAAII,EAAGJ,IAClDqQ,EAAKgU,EAAQsH,SAAS3rB,IAElB8I,EAAOuH,EAAG8R,aAAa,WACxBkf,EAASv4B,KAAUu4B,EAASv4B,QAAa/C,KAAKsK,GAGXgS,EAAYhS,EAAI,SACpDrO,GAAK,uCAAwCwG,EAAG6Y,QAGpD,KAAKvY,IAAQu4B,GACXA,EAASv4B,GAAQy4B,GAAgBF,EAASv4B,GAAOub,EAEnD,IAAIA,EAAQC,gBAAiB,CAC3B,GAAIwB,GAAQzB,EAAQyP,UACpB,IAAqB,IAAjBhO,EAAMvlB,QAAsC,IAAtBulB,EAAM,GAAG/D,WAAmB+D,EAAM,GAAG3a,KAAK5I,OAClE,MAEF8+B,GAAS,WAAaE,GAAgBld,EAAQyP,WAAYzP,KAW9D,QAASkd,IAAgBzb,EAAOjE,GAC9B,GAAI6D,GAAO5Z,SAAS0Y,wBACpBsB,GAAQhK,EAAQgK,EAChB,KAAK,GAAI9lB,GAAI,EAAGI,EAAI0lB,EAAMvlB,OAAQP,EAAII,EAAGJ,IAAK,CAC5C,GAAIyhB,GAAOqE,EAAM9lB,IACbmkB,GAAW1C,IAAUA,EAAKc,aAAa,SAAYd,EAAKc,aAAa,WACvEV,EAAO9V,YAAY0V,GACnBA,EAAO2R,GAAc3R,GAAM,IAE7BiE,EAAKvZ,YAAYsV,GAEnB,MAAOiE,GAaT,QAAS8b,IAAY7/B,GA8KnB,QAASqsB,MAsBT,QAASyT,GAAmB7X,EAAQ8X,GAClC,GAAI3R,GAAU,GAAIM,IAAQqR,EAAO9X,EAAQ,MACvC+G,MAAM,GAER,OAAO,YAOL,MANIZ,GAAQW,OACVX,EAAQ4R,WAENpZ,GAAIlkB,QACN0rB,EAAQhG,SAEHgG,EAAQhvB,OAxMnBkC,OAAO4S,eAAelU,EAAIwB,UAAW,SACnC4L,IAAK,WACH,MAAOnO,MAAKmZ,OAEdH,IAAK,SAAagoB,GACZA,IAAYhhC,KAAKmZ,OACnBnZ,KAAKihC,SAASD,MAapBjgC,EAAIwB,UAAU2oB,WAAa,WACzBlrB,KAAKkhC,aACLlhC,KAAKmhC,YACLnhC,KAAKohC,eACLphC,KAAKqhC,YACLrhC,KAAKshC,iBAOPvgC,EAAIwB,UAAU2+B,WAAa,WACzB,GAAIn+B,GAAU/C,KAAKoD,SACfqM,EAAK1M,EAAQ0M,GACbiG,EAAQ3S,EAAQ2S,KAChBA,KAAUjG,GACsBrO,GAAK,6EAAmFpB,MAG5HyP,EAAK1M,EAAQ0M,GAAKjL,EAAMiL,GACxBzP,KAAKuhC,eAAiB9xB,GAAsB,IAAhBA,EAAG0R,UAAkBzL,EAE/C4mB,GAAoBt8B,KAAMyP,EAAIiG,EAAO1V,KAAK6qB,QAAU,MAOxD9pB,EAAIwB,UAAU8+B,UAAY,WACxB,GAAIG,GAASxhC,KAAKoD,SAASmH,KACvBA,EAAOvK,KAAKmZ,MAAQqoB,EAASA,MAC5Bp/B,GAAcmI,KACjBA,KACkCnJ,GAAK,0CAA2CpB,MAEpF,IAGIZ,GAAGmE,EAHHmS,EAAQ1V,KAAK63B,OAEbnzB,EAAOrC,OAAOqC,KAAK6F,EAGvB,KADAnL,EAAIsF,EAAK/E,OACFP,KACLmE,EAAMmB,EAAKtF,GAKNsW,GAAUuD,EAAOvD,EAAOnS,GAG3BnC,GAAK,eAAiBmC,EAAM,4LAA4MvD,MAFxOA,KAAKyZ,OAAOlW,EAMhBmlB,IAAQne,EAAMvK,OAShBe,EAAIwB,UAAU0+B,SAAW,SAAUD,GACjCA,EAAUA,KACV,IAAIS,GAAUzhC,KAAKmZ,KACnBnZ,MAAKmZ,MAAQ6nB,CACb,IAAIt8B,GAAMnB,EAAKnE,CAIf,KAFAsF,EAAOrC,OAAOqC,KAAK+8B,GACnBriC,EAAIsF,EAAK/E,OACFP,KACLmE,EAAMmB,EAAKtF,GACLmE,IAAOy9B,IACXhhC,KAAK4Z,SAASrW,EAOlB,KAFAmB,EAAOrC,OAAOqC,KAAKs8B,GACnB5hC,EAAIsF,EAAK/E,OACFP,KACLmE,EAAMmB,EAAKtF,GACN6Z,EAAOjZ,KAAMuD,IAEhBvD,KAAKyZ,OAAOlW,EAGhBk+B,GAAQpoB,OAAOqoB,SAAS1hC,MACxB0oB,GAAQsY,EAAShhC,MACjBA,KAAK0Z,WAUP3Y,EAAIwB,UAAUkX,OAAS,SAAUlW,GAC/B,IAAKyW,EAAWzW,GAAM,CAKpB,GAAIiE,GAAOxH,IACXqC,QAAO4S,eAAezN,EAAMjE,GAC1BqY,cAAc,EACdF,YAAY,EACZvN,IAAK,WACH,MAAO3G,GAAK2R,MAAM5V,IAEpByV,IAAK,SAAqBjX,GACxByF,EAAK2R,MAAM5V,GAAOxB,OAY1BhB,EAAIwB,UAAUqX,SAAW,SAAUrW,GAC5ByW,EAAWzW,UACPvD,MAAKuD,IAQhBxC,EAAIwB,UAAUmX,QAAU,WACtB,IAAK,GAAIta,GAAI,EAAGI,EAAIQ,KAAK4pB,UAAUjqB,OAAQP,EAAII,EAAGJ,IAChDY,KAAK4pB,UAAUxqB,GAAG+R,QAAO,IAU7BpQ,EAAIwB,UAAU++B,cAAgB,WAC5B,GAAI7uB,GAAWzS,KAAKoD,SAASqP,QAC7B,IAAIA,EACF,IAAK,GAAIlP,KAAOkP,GAAU,CACxB,GAAIkvB,GAAUlvB,EAASlP,GACnBkY,GACFC,YAAY,EACZE,cAAc,EAEO,mBAAZ+lB,IACTlmB,EAAItN,IAAM0yB,EAAmBc,EAAS3hC,MACtCyb,EAAIzC,IAAMoU,IAEV3R,EAAItN,IAAMwzB,EAAQxzB,IAAMwzB,EAAQ3iB,SAAU,EAAQ6hB,EAAmBc,EAAQxzB,IAAKnO,MAAQa,EAAK8gC,EAAQxzB,IAAKnO,MAAQotB,EACpH3R,EAAIzC,IAAM2oB,EAAQ3oB,IAAMnY,EAAK8gC,EAAQ3oB,IAAKhZ,MAAQotB,GAEpD/qB,OAAO4S,eAAejV,KAAMuD,EAAKkY,KA0BvC1a,EAAIwB,UAAU6+B,aAAe,WAC3B,GAAIhuB,GAAUpT,KAAKoD,SAASgQ,OAC5B,IAAIA,EACF,IAAK,GAAI7P,KAAO6P,GACdpT,KAAKuD,GAAO1C,EAAKuS,EAAQ7P,GAAMvD,OASrCe,EAAIwB,UAAU4+B,UAAY,WACxB,GAAIS,GAAQ5hC,KAAKoD,SAASy+B,KAC1B,IAAID,EACF,IAAK,GAAIr+B,KAAOq+B,GACd/Y,GAAe7oB,KAAMuD,EAAKq+B,EAAMr+B,KAQxC,QAASu+B,IAAa/gC,GAuBpB,QAASghC,GAAwBn6B,EAAI6H,GAGnC,IAAK,GADDvH,GAAM/H,EAAOuH,EADb8c,EAAQ/U,EAAGgV,WAENrlB,EAAI,EAAGI,EAAIglB,EAAM7kB,OAAQP,EAAII,EAAGJ,IACvC8I,EAAOsc,EAAMplB,GAAG8I,KACZ85B,GAAQ36B,KAAKa,KACfA,EAAOA,EAAKrG,QAAQmgC,GAAS,IAI7B7hC,EAAQqkB,EAAMplB,GAAGe,MACbkuB,GAAaluB,KACfA,GAAS,4BAEXuH,GAAWE,EAAGijB,QAAUjjB,EAAGgjB,UAAUjL,MAAMxf,GAAO,GAClDuH,EAAQu6B,aAAc,EACtBr6B,EAAGs6B,IAAIh6B,EAAKrG,QAAQmgC,IAAUt6B,IAapC,QAASy6B,GAAkBv6B,EAAI+F,EAAQ5F,GACrC,GAAKA,EAAL,CACA,GAAIq6B,GAAU7+B,EAAKnE,EAAG8/B,CACtB,KAAK37B,IAAOwE,GAEV,GADAq6B,EAAWr6B,EAAKxE,GACZY,GAAQi+B,GACV,IAAKhjC,EAAI,EAAG8/B,EAAIkD,EAASziC,OAAQP,EAAI8/B,EAAG9/B,IACtCijC,EAASz6B,EAAI+F,EAAQpK,EAAK6+B,EAAShjC,QAGrCijC,GAASz6B,EAAI+F,EAAQpK,EAAK6+B,IAehC,QAASC,GAASz6B,EAAI+F,EAAQpK,EAAKmE,EAAS3E,GAC1C,GAAIiI,GAAA,mBAActD,GAAd,YAAAiR,EAAcjR,EAClB,IAAa,aAATsD,EACFpD,EAAG+F,GAAQpK,EAAKmE,EAAS3E,OACpB,IAAa,WAATiI,EAAmB,CAC5B,GAAIoI,GAAUxL,EAAGxE,SAASgQ,QACtBrK,EAASqK,GAAWA,EAAQ1L,EAC5BqB,GACFnB,EAAG+F,GAAQpK,EAAKwF,EAAQhG,GAEU3B,GAAK,oBAAsBsG,EAAU,mCAA0CiG,EAAS,MAAQpK,EAAM,KAAMqE,OAEvIF,IAAoB,WAATsD,GACpBq3B,EAASz6B,EAAI+F,EAAQpK,EAAKmE,EAAQA,QAASA,GAiB/C,QAAS46B,KACFtiC,KAAKwqB,cACRxqB,KAAKwqB,aAAc,EACnBxqB,KAAKypB,UAAU5lB,QAAQ0+B,IAU3B,QAASA,GAAWlf,IACbA,EAAMmH,aAAe5J,EAAMyC,EAAMkG,MACpClG,EAAM4H,UAAU,YAQpB,QAASuX,KACHxiC,KAAKwqB,cACPxqB,KAAKwqB,aAAc,EACnBxqB,KAAKypB,UAAU5lB,QAAQ4+B,IAU3B,QAASA,GAAWpf,GACdA,EAAMmH,cAAgB5J,EAAMyC,EAAMkG,MACpClG,EAAM4H,UAAU,YA1IpBlqB,EAAIwB,UAAU4oB,YAAc,WAC1B,GAAIpoB,GAAU/C,KAAKoD,QACfL,GAAQk4B,cACV8G,EAAwB/hC,KAAM+C,EAAQ0M,IAExC0yB,EAAkBniC,KAAM,MAAO+C,EAAQ2/B,QACvCP,EAAkBniC,KAAM,SAAU+C,EAAQiT,QAqF5CjV,EAAIwB,UAAUogC,cAAgB,WAC5B3iC,KAAKkiC,IAAI,gBAAiBI,GAC1BtiC,KAAKkiC,IAAI,gBAAiBM,IAuD5BzhC,EAAIwB,UAAU0oB,UAAY,SAAU2X,GAClC5iC,KAAK6iC,MAAM,YAAcD,EACzB,IAAIR,GAAWpiC,KAAKoD,SAASw/B,EAC7B,IAAIR,EACF,IAAK,GAAIhjC,GAAI,EAAG8/B,EAAIkD,EAASziC,OAAQP,EAAI8/B,EAAG9/B,IAC1CgjC,EAAShjC,GAAGM,KAAKM,KAGrBA,MAAK6iC,MAAM,QAAUD,IAIzB,QAASE,OA4BT,QAASC,IAAUjH,EAAYl0B,EAAI6H,EAAIzF,EAAMlC,EAAOgd,GAClD9kB,KAAK4H,GAAKA,EACV5H,KAAKyP,GAAKA,EAEVzP,KAAK87B,WAAaA,EAClB97B,KAAKkI,KAAO4zB,EAAW5zB,KACvBlI,KAAKyF,WAAaq2B,EAAWr2B,WAC7BzF,KAAKwd,IAAMse,EAAWte,IACtBxd,KAAK0+B,UAAY5C,EAAW4C,UAC5B1+B,KAAKud,QAAUue,EAAWve,QAC1Bvd,KAAK0F,QAAU1F,KAAK0+B,WAAa1+B,KAAK0+B,UAAUh5B,QAEhD1F,KAAKgjC,SAAU,EACfhjC,KAAKijC,QAAS,EACdjjC,KAAKkjC,WAAa,KAElBljC,KAAKmjC,MAAQn5B,EACbhK,KAAK6qB,OAAS/iB,EACd9H,KAAK8qB,MAAQhG,EAEyB9kB,KAAKyP,KACzCzP,KAAKyP,GAAG2zB,gBAAkBpjC,KAAKyP,GAAG2zB,oBAClCpjC,KAAKyP,GAAG2zB,gBAAgBj+B,KAAKnF,OAsPjC,QAASqjC,IAAgBtiC,GAOvBA,EAAIwB,UAAUyoB,WAAa,SAAU5Z,GACnC,GAAIotB,GAAMx+B,KAAKoD,SAASiN,IACxB,IAAImuB,EAAK,CACP,GAAI8E,IAAQtjC,KAAK6qB,QAAU7qB,KAAK4qB,UAAUlB,KACtCtY,GACEkyB,EAAK9E,KAASx+B,OAChBsjC,EAAK9E,GAAO,MAGd8E,EAAK9E,GAAOx+B,OAiBlBe,EAAIwB,UAAUghC,SAAW,SAAU9zB,GACjC,GAAI1M,GAAU/C,KAAKoD,SAOf6pB,EAAWxd,CAKf,IAJAA,EAAKwwB,GAAWxwB,EAAI1M,GACpB/C,KAAKwjC,aAAa/zB,GAGE,IAAhBA,EAAG0R,UAA2C,OAAzBE,EAAQ5R,EAAI,SAArC,CAMA,GAAIitB,GAAiB18B,KAAK4qB,UAAY5qB,KAAK4qB,SAASxnB,SAChDqgC,EAAahH,GAAYhtB,EAAI1M,EAAS25B,EAG1C8D,IAAaxgC,KAAM+C,EAAQo9B,SAG3B,IAAIuD,GACAC,EAAO3jC,KAAK6Y,WAGZ9V,GAAQ6gC,kBACVF,EAAgBC,EAAK9Q,OAChB6Q,IACHA,EAAgBC,EAAK9Q,OAASsB,GAAQ1kB,EAAI1M,IAM9C,IAAI8gC,GAAeJ,EAAWzjC,KAAMyP,EAAIzP,KAAK6qB,QACzCiZ,EAAkBJ,EAAgBA,EAAc1jC,KAAMyP,GAAM0kB,GAAQ1kB,EAAI1M,GAAS/C,KAAMyP,EAI3FzP,MAAK2qB,UAAY,WACfkZ,IAGAC,GAAgB,IAId/gC,EAAQlB,SACVA,EAAQorB,EAAUxd,GAGpBzP,KAAKwgB,aAAc,EACnBxgB,KAAKirB,UAAU,cAUjBlqB,EAAIwB,UAAUihC,aAAe,SAAU/zB,GACjC+T,GAAW/T,IACbzP,KAAKkqB,aAAc,EACnBlqB,KAAKupB,IAAMvpB,KAAKoqB,eAAiB3a,EAAGuS,WACpChiB,KAAKqqB,aAAe5a,EAAGqU,UAEc,IAAjC9jB,KAAKoqB,eAAejJ,WACtBnhB,KAAKoqB,eAAe7f,KAAOvK,KAAKqqB,aAAa9f,KAAO,IAEtDvK,KAAKmqB,UAAY1a,GAEjBzP,KAAKupB,IAAM9Z,EAEbzP,KAAKupB,IAAIiL,QAAUx0B,KACnBA,KAAKirB,UAAU,kBAajBlqB,EAAIwB,UAAU01B,SAAW,SAAU6D,EAAYjb,EAAM7W,EAAMlC,EAAOgd,GAChE9kB,KAAK6pB,YAAY1kB,KAAK,GAAI49B,IAAUjH,EAAY97B,KAAM6gB,EAAM7W,EAAMlC,EAAOgd,KAY3E/jB,EAAIwB,UAAUwhC,SAAW,SAAU3yB,EAAQ4yB,GACzC,GAAIhkC,KAAKyqB,kBAIP,YAHKuZ,GACHhkC,KAAKikC,WAKT,IAAIC,GACAC,EAEA38B,EAAOxH,KAKPokC,EAAoB,YAClBF,GAAiBC,GAAmBH,GACtCx8B,EAAKy8B,WAKL7yB,IAAUpR,KAAKupB,MACjB4a,GAAiB,EACjBnkC,KAAKq8B,QAAQ,WACX8H,GAAiB,EACjBC,OAIJpkC,KAAKirB,UAAU,iBACfjrB,KAAKyqB,mBAAoB,CACzB,IAAIrrB,GAGA6hB,EAASjhB,KAAKygB,OAQlB,KAPIQ,IAAWA,EAAOwJ,oBACpBxJ,EAAOwI,UAAU4S,QAAQr8B,MAEzBA,KAAKgrB,YAAW,IAGlB5rB,EAAIY,KAAKypB,UAAU9pB,OACZP,KACLY,KAAKypB,UAAUrqB,GAAGilC,UAYpB,KATIrkC,KAAKuhC,gBACPvhC,KAAKuhC,iBAIHvhC,KAAK2qB,WACP3qB,KAAK2qB,YAEPvrB,EAAIY,KAAK4pB,UAAUjqB,OACZP,KACLY,KAAK4pB,UAAUxqB,GAAGklC,UAGhBtkC,MAAKupB,MACPvpB,KAAKupB,IAAIiL,QAAU,MAGrB0P,GAAe,EACfE,KASFrjC,EAAIwB,UAAU0hC,SAAW,WACnBjkC,KAAKsqB,eAMLtqB,KAAK8qB,OACP9qB,KAAK8qB,MAAMC,SAASsR,QAAQr8B,MAI1BA,KAAKmZ,OAASnZ,KAAKmZ,MAAME,QAC3BrZ,KAAKmZ,MAAME,OAAOqoB,SAAS1hC,MAU7BA,KAAKupB,IAAMvpB,KAAKygB,QAAUzgB,KAAKwpB,MAAQxpB,KAAKypB,UAAYzpB,KAAK4pB,UAAY5pB,KAAK4qB,SAAW5qB,KAAK6qB,OAAS7qB,KAAK6pB,YAAc,KAE1H7pB,KAAKsqB,cAAe,EACpBtqB,KAAKirB,UAAU,aAEfjrB,KAAKukC,SAIT,QAASC,IAAWzjC,GAclBA,EAAIwB,UAAUkiC,cAAgB,SAAUtkC,EAAOukC,EAAUnnB,EAASonB,GAChE,GAAI39B,GAAQhE,EAAIU,EAAM8Z,EAAKonB,EAAQxlC,EAAGI,EAAG0/B,EAAGj4B,CAC5C,KAAK7H,EAAI,EAAGI,EAAI+d,EAAQ5d,OAAQP,EAAII,EAAGJ,IAGrC,GAFA4H,EAASuW,EAAQonB,EAAQnlC,EAAIJ,EAAI,EAAIA,GACrC4D,EAAK6iB,GAAa7lB,KAAKoD,SAAU,UAAW4D,EAAOkB,MAAM,GACpDlF,IACLA,EAAK2hC,EAAQ3hC,EAAG2hC,MAAQ3hC,EAAG6hC,MAAQ7hC,EACjB,kBAAPA,IAAX,CAGA,GAFAU,EAAOihC,GAASxkC,EAAOukC,IAAavkC,GACpCykC,EAASD,EAAQ,EAAI,EACjB39B,EAAOtD,KACT,IAAKw7B,EAAI,EAAGj4B,EAAID,EAAOtD,KAAK/D,OAAQu/B,EAAIj4B,EAAGi4B,IACzC1hB,EAAMxW,EAAOtD,KAAKw7B,GAClBx7B,EAAKw7B,EAAI0F,GAAUpnB,EAAIE,QAAU1d,KAAKg4B,KAAKxa,EAAIrd,OAASqd,EAAIrd,KAGhEA,GAAQ6C,EAAGoC,MAAMpF,KAAM0D,GAEzB,MAAOvD,IAcTY,EAAIwB,UAAUuiC,kBAAoB,SAAU3kC,EAAOsB,GACjD,GAAIkG,EAOJ,IALEA,EADmB,kBAAVxH,GACCA,EAEA0lB,GAAa7lB,KAAKoD,SAAU,aAAcjD,GAAO,GAO7D,GAAKwH,EAAQ5E,QA0BXtB,EAAGkG,OAzBH,IAAIA,EAAQo9B,SAEVtjC,EAAGkG,EAAQo9B,cACN,IAAIp9B,EAAQq9B,UAEjBr9B,EAAQs9B,iBAAiB9/B,KAAK1D,OACzB,CACLkG,EAAQq9B,WAAY,CACpB,IAAIE,GAAMv9B,EAAQs9B,kBAAoBxjC,EACtCkG,GAAQjI,KAAKM,KAAM,SAAiBymB,GAC9BrkB,EAAcqkB,KAChBA,EAAM1lB,EAAI0U,OAAOgR,IAGnB9e,EAAQo9B,SAAWte,CAEnB,KAAK,GAAIrnB,GAAI,EAAGI,EAAI0lC,EAAIvlC,OAAQP,EAAII,EAAGJ,IACrC8lC,EAAI9lC,GAAGqnB,IAER,SAAgBvX,GACiB9N,GAAK,qCAAwD,gBAAVjB,GAAqB,KAAOA,EAAQ,IAAM,MAAQ+O,EAAS,aAAeA,EAAS,SAYlL,QAASi2B,IAASpkC,GAyKhB,QAASqkC,GAAMjjC,GACb,MAAOiI,MAAKnF,MAAMmF,KAAKC,UAAUlI,IAjKnCpB,EAAIwB,UAAUy1B,KAAO,SAAUle,EAAKurB,GAClC,GAAI5e,GAAMsG,GAAgBjT,EAC1B,IAAI2M,EAAK,CACP,GAAI4e,EAAa,CACf,GAAI79B,GAAOxH,IACX,OAAO,YACLwH,EAAK89B,WAAapqB,EAAQrY,UAC1B,IAAI2D,GAASigB,EAAItY,IAAIzO,KAAK8H,EAAMA,EAEhC,OADAA,GAAK89B,WAAa,KACX9+B,GAGT,IACE,MAAOigB,GAAItY,IAAIzO,KAAKM,KAAMA,MAC1B,MAAOrB,OAcfoC,EAAIwB,UAAU4qB,KAAO,SAAUrT,EAAK/X,GAClC,GAAI0kB,GAAMsG,GAAgBjT,GAAK,EAC3B2M,IAAOA,EAAIzN,KACbyN,EAAIzN,IAAItZ,KAAKM,KAAMA,KAAM+B,IAU7BhB,EAAIwB,UAAUgjC,QAAU,SAAUhiC,GAChCoW,EAAI3Z,KAAKmZ,MAAO5V,IAelBxC,EAAIwB,UAAUijC,OAAS,SAAU9V,EAASjuB,EAAIsB,GAC5C,GACIsX,GADAzS,EAAK5H,IAEc,iBAAZ0vB,KACTrV,EAASuD,EAAe8R,GACxBA,EAAUrV,EAAO5U,WAEnB,IAAI0pB,GAAU,GAAIM,IAAQ7nB,EAAI8nB,EAASjuB,GACrCyC,KAAMnB,GAAWA,EAAQmB,KACzBuhC,KAAM1iC,GAAWA,EAAQ0iC,KACzBloB,QAASlD,GAAUA,EAAOkD,QAC1BiS,MAAOzsB,GAAWA,EAAQysB,QAAS,GAKrC,OAHIzsB,IAAWA,EAAQ2iC,WACrBjkC,EAAG/B,KAAKkI,EAAIunB,EAAQhvB,OAEf,WACLgvB,EAAQmV,aAYZvjC,EAAIwB,UAAUod,MAAQ,SAAUlV,EAAM46B,GAEpC,GAAIM,GAAWt+B,KAAKoD,GAAO,CACzB,GAAI6S,GAAMM,EAAenT,GAIrB1I,EAAM/B,KAAKg4B,KAAK1a,EAAI7X,WAAY4/B,EACpC,OAAO/nB,GAAIC,QAAUvd,KAAKykC,cAAc1iC,EAAK,KAAMub,EAAIC,SAAWxb,EAGlE,MAAO/B,MAAKg4B,KAAKvtB,EAAM46B,IAW3BtkC,EAAIwB,UAAUqjC,aAAe,SAAUn7B,GACrC,GAAI0S,GAAS8B,EAAUxU,GACnB7C,EAAK5H,IACT,OAAImd,GACoB,IAAlBA,EAAOxd,OACFiI,EAAG+X,MAAMxC,EAAO,GAAGhd,OAAS,GAE5Bgd,EAAOhW,IAAI,SAAUqY,GAC1B,MAAOA,GAAMF,IAAM1X,EAAG+X,MAAMH,EAAMrf,OAASqf,EAAMrf,QAChDkG,KAAK,IAGHoE,GAYX1J,EAAIwB,UAAUsjC,KAAO,SAAUra,GAC7B,GAAIjhB,GAAOihB,EAAOsB,GAAQ9sB,KAAKmZ,MAAOqS,GAAQxrB,KAAKmZ,KAKnD,IAJI5O,IACFA,EAAO66B,EAAM76B,KAGVihB,EAAM,CACT,GAAIjoB,EACJ,KAAKA,IAAOvD,MAAKoD,SAASqP,SACxBlI,EAAKhH,GAAO6hC,EAAMplC,KAAKuD,GAEzB,IAAIvD,KAAK63B,OACP,IAAKt0B,IAAOvD,MAAK63B,OACfttB,EAAKhH,GAAO6hC,EAAMplC,KAAKuD,IAI7BjC,QAAQuR,IAAItI,IAgBhB,QAASu7B,IAAQ/kC,GAkHf,QAASglC,GAAOn+B,EAAInE,EAAQhC,EAAI+xB,EAAgBwS,EAAKC,GACnDxiC,EAASe,EAAMf,EACf,IAAIyiC,IAAoBtlB,EAAMnd,GAC1B0c,EAAKqT,KAAmB,GAAS0S,EAAmBF,EAAMC,EAC1DE,GAAkBD,IAAqBt+B,EAAG4iB,cAAgB5J,EAAMhZ,EAAG2hB,IAYvE,OAXI3hB,GAAGsiB,aACLvF,GAAa/c,EAAGwiB,eAAgBxiB,EAAGyiB,aAAc,SAAUxJ,GACzDV,EAAGU,EAAMpd,EAAQmE,KAEnBnG,GAAMA,KAEN0e,EAAGvY,EAAG2hB,IAAK9lB,EAAQmE,EAAInG,GAErB0kC,GACFv+B,EAAGqjB,UAAU,YAERrjB,EAST,QAASpD,GAAMiL,GACb,MAAqB,gBAAPA,GAAkBvE,SAASyV,cAAclR,GAAMA,EAY/D,QAAS22B,GAAO32B,EAAIhM,EAAQmE,EAAInG,GAC9BgC,EAAO8H,YAAYkE,GACfhO,GAAIA,IAYV,QAAS4kC,GAAa52B,EAAIhM,EAAQmE,EAAInG,GACpC+J,EAAOiE,EAAIhM,GACPhC,GAAIA,IAWV,QAAS6kC,GAAa72B,EAAI7H,EAAInG,GAC5B2P,EAAO3B,GACHhO,GAAIA,IA5KVV,EAAIwB,UAAUgkC,UAAY,SAAUvjC,GAClCxB,GAASwB,EAAIhD,OAWfe,EAAIwB,UAAUikC,UAAY,SAAU/iC,EAAQhC,EAAI+xB,GAC9C,MAAOuS,GAAO/lC,KAAMyD,EAAQhC,EAAI+xB,EAAgB4S,EAAQtmB,IAW1D/e,EAAIwB,UAAUkkC,WAAa,SAAUhjC,EAAQhC,EAAI+xB,GAO/C,MANA/vB,GAASe,EAAMf,GACXA,EAAOigB,gBACT1jB,KAAK0mC,QAAQjjC,EAAOue,WAAYvgB,EAAI+xB,GAEpCxzB,KAAKwmC,UAAU/iC,EAAQhC,EAAI+xB,GAEtBxzB,MAWTe,EAAIwB,UAAUmkC,QAAU,SAAUjjC,EAAQhC,EAAI+xB,GAC5C,MAAOuS,GAAO/lC,KAAMyD,EAAQhC,EAAI+xB,EAAgB6S,EAAcrmB,IAWhEjf,EAAIwB,UAAUokC,OAAS,SAAUljC,EAAQhC,EAAI+xB,GAO3C,MANA/vB,GAASe,EAAMf,GACXA,EAAOqe,YACT9hB,KAAK0mC,QAAQjjC,EAAOqe,YAAargB,EAAI+xB,GAErCxzB,KAAKwmC,UAAU/iC,EAAOyd,WAAYzf,EAAI+xB,GAEjCxzB,MAUTe,EAAIwB,UAAU85B,QAAU,SAAU56B,EAAI+xB,GACpC,IAAKxzB,KAAKupB,IAAIrI,WACZ,MAAOzf,IAAMA,GAEf,IAAImlC,GAAa5mC,KAAKwqB,aAAe5J,EAAM5gB,KAAKupB,IAG3Cqd,KAAYpT,GAAiB,EAClC,IAAIhsB,GAAOxH,KACP6mC,EAAS,WACPD,GAAYp/B,EAAKyjB,UAAU,YAC3BxpB,GAAIA,IAEV,IAAIzB,KAAKkqB,YACPrF,GAAgB7kB,KAAKoqB,eAAgBpqB,KAAKqqB,aAAcrqB,KAAMA,KAAKmqB,UAAW0c,OACzE,CACL,GAAI1mB,GAAKqT,KAAmB,EAAQ8S,EAAermB,CACnDE,GAAGngB,KAAKupB,IAAKvpB,KAAM6mC,GAErB,MAAO7mC,OAsFX,QAAS8mC,IAAW/lC,GAmLlB,QAASgmC,GAAoBn/B,EAAIW,EAAOqG,GACtC,GAAIqS,GAASrZ,EAAG6Y,OAGhB,IAAKQ,GAAWrS,IAASo4B,EAAO3/B,KAAKkB,GACrC,KAAO0Y,GACLA,EAAOgJ,aAAa1hB,IAAU0Y,EAAOgJ,aAAa1hB,IAAU,GAAKqG,EACjEqS,EAASA,EAAOR,QAlLpB1f,EAAIwB,UAAU2/B,IAAM,SAAU35B,EAAOvF;AAGnC,OAFChD,KAAKgqB,QAAQzhB,KAAWvI,KAAKgqB,QAAQzhB,QAAcpD,KAAKnC,GACzD+jC,EAAoB/mC,KAAMuI,EAAO,GAC1BvI,MAWTe,EAAIwB,UAAU0kC,MAAQ,SAAU1+B,EAAOvF,GAErC,QAASkf,KACP1a,EAAK+8B,KAAKh8B,EAAO2Z,GACjBlf,EAAGoC,MAAMpF,KAAM6C,WAHjB,GAAI2E,GAAOxH,IAOX,OAFAkiB,GAAGlf,GAAKA,EACRhD,KAAKkiC,IAAI35B,EAAO2Z,GACTliB,MAWTe,EAAIwB,UAAUgiC,KAAO,SAAUh8B,EAAOvF,GACpC,GAAIkiC,EAEJ,KAAKriC,UAAUlD,OAAQ,CACrB,GAAIK,KAAKygB,QACP,IAAKlY,IAASvI,MAAKgqB,QACjBkb,EAAMllC,KAAKgqB,QAAQzhB,GACf28B,GACF6B,EAAoB/mC,KAAMuI,GAAQ28B,EAAIvlC,OAK5C,OADAK,MAAKgqB,WACEhqB,KAIT,GADAklC,EAAMllC,KAAKgqB,QAAQzhB,IACd28B,EACH,MAAOllC,KAET,IAAyB,IAArB6C,UAAUlD,OAGZ,MAFAonC,GAAoB/mC,KAAMuI,GAAQ28B,EAAIvlC,QACtCK,KAAKgqB,QAAQzhB,GAAS,KACfvI,IAKT,KAFA,GAAIyB,GACArC,EAAI8lC,EAAIvlC,OACLP,KAEL,GADAqC,EAAKyjC,EAAI9lC,GACLqC,IAAOuB,GAAMvB,EAAGuB,KAAOA,EAAI,CAC7B+jC,EAAoB/mC,KAAMuI,MAC1B28B,EAAIgC,OAAO9nC,EAAG,EACd,OAGJ,MAAOY,OAUTe,EAAIwB,UAAUsgC,MAAQ,SAAUt6B,GAC9B,GAAI4+B,GAA4B,gBAAV5+B,EACtBA,GAAQ4+B,EAAW5+B,EAAQA,EAAML,IACjC,IAAIg9B,GAAMllC,KAAKgqB,QAAQzhB,GACnB6+B,EAAkBD,IAAajC,CACnC,IAAIA,EAAK,CACPA,EAAMA,EAAIvlC,OAAS,EAAIub,EAAQgqB,GAAOA,CAKtC,IAAImC,GAAeF,GAAYjC,EAAIrF,KAAK,SAAUp+B,GAChD,MAAOA,GAAGwgC,aAERoF,KACFD,GAAkB,EAGpB,KAAK,GADD1jC,GAAOwX,EAAQrY,UAAW,GACrBzD,EAAI,EAAGI,EAAI0lC,EAAIvlC,OAAQP,EAAII,EAAGJ,IAAK,CAC1C,GAAIqC,GAAKyjC,EAAI9lC,GACTqnB,EAAMhlB,EAAG2D,MAAMpF,KAAM0D,EACrB+iB,MAAQ,GAAU4gB,IAAgB5lC,EAAGwgC,cACvCmF,GAAkB,IAIxB,MAAOA,IAUTrmC,EAAIwB,UAAU+kC,WAAa,SAAU/+B,GACnC,GAAI4+B,GAA4B,gBAAV5+B,EAItB,IAHAA,EAAQ4+B,EAAW5+B,EAAQA,EAAML,KAG5BlI,KAAKiqB,aAAa1hB,GAAvB,CACA,GAAIwiB,GAAW/qB,KAAKypB,UAChB/lB,EAAOwX,EAAQrY,UACfskC,KAGFzjC,EAAK,IAAOwE,KAAMK,EAAOzE,OAAQ9D,MAEnC,KAAK,GAAIZ,GAAI,EAAGI,EAAIurB,EAASprB,OAAQP,EAAII,EAAGJ,IAAK,CAC/C,GAAIikB,GAAQ0H,EAAS3rB,GACjBgoC,EAAkB/jB,EAAMwf,MAAMz9B,MAAMie,EAAO3f,EAC3C0jC,IACF/jB,EAAMikB,WAAWliC,MAAMie,EAAO3f,GAGlC,MAAO1D,QAUTe,EAAIwB,UAAUglC,UAAY,SAAUh/B,GAClC,GAAI6+B,GAAkBpnC,KAAK6iC,MAAMz9B,MAAMpF,KAAM6C,UAC7C,IAAKukC,EAAL,CACA,GAAInmB,GAASjhB,KAAKygB,QACd/c,EAAOwX,EAAQrY,UAInB,KADAa,EAAK,IAAOwE,KAAMK,EAAOzE,OAAQ9D,MAC1BihB,GACLmmB,EAAkBnmB,EAAO4hB,MAAMz9B,MAAM6b,EAAQvd,GAC7Cud,EAASmmB,EAAkBnmB,EAAOR,QAAU,IAE9C,OAAOzgB,OAaT,IAAIgnC,GAAS,SAaf,QAASQ,IAAczmC,GAmCrB,QAAS6R,KACP5S,KAAKwqB,aAAc,EACnBxqB,KAAKuqB,UAAW,EAChBvqB,KAAKirB,UAAU,SA3BjBlqB,EAAIwB,UAAU6oB,OAAS,SAAU3b,GAC/B,MAAIzP,MAAKwgB,gBAC2Bpf,IAAK,uCAAwCpB,OAGjFyP,EAAKjL,EAAMiL,GACNA,IACHA,EAAKvE,SAASE,cAAc,QAE9BpL,KAAKujC,SAAS9zB,GACdzP,KAAK2iC,gBACD/hB,EAAM5gB,KAAKupB,MACbvpB,KAAKirB,UAAU,YACfrY,EAAMlT,KAAKM,OAEXA,KAAKinC,MAAM,gBAAiBr0B,GAEvB5S,OAqBTe,EAAIwB,UAAU8hC,SAAW,SAAUjzB,EAAQ4yB,GACzChkC,KAAK+jC,SAAS3yB,EAAQ4yB,IAcxBjjC,EAAIwB,UAAUklC,SAAW,SAAUh4B,EAAIzF,EAAMlC,EAAOgd,GAClD,MAAOqP,IAAQ1kB,EAAIzP,KAAKoD,UAAU,GAAMpD,KAAMyP,EAAIzF,EAAMlC,EAAOgd,IAkBnE,QAAS/jB,IAAIgC,GACX/C,KAAKspB,MAAMvmB,GAoHb,QAAS2kC,IAAQrrB,EAAKxd,EAAG+lC,GAGvB,MAFAA,GAASA,EAASh+B,SAASg+B,EAAQ,IAAM,EACzC/lC,EAAIub,EAASvb,GACO,gBAANA,GAAiBwd,EAAIzY,MAAMghC,EAAQA,EAAS/lC,GAAKwd,EAWjE,QAASsrB,IAAStrB,EAAKtM,EAAQ63B,GAE7B,GADAvrB,EAAMwrB,GAAaxrB,GACL,MAAVtM,EACF,MAAOsM,EAET,IAAsB,kBAAXtM,GACT,MAAOsM,GAAIrV,OAAO+I,EAGpBA,IAAU,GAAKA,GAAQhE,aAQvB,KAAK,GADD+7B,GAAMvkC,EAAKxB,EAAKm9B,EAJhBrgC,EAAkB,OAAd+oC,EAAqB,EAAI,EAE7BljC,EAAOqC,MAAMxE,UAAUgzB,OAAOnwB,SAAU8V,EAAQrY,UAAWhE,IAC3D4nB,KAEKrnB,EAAI,EAAGI,EAAI6c,EAAI1c,OAAQP,EAAII,EAAGJ,IAIrC,GAHA0oC,EAAOzrB,EAAIjd,GACX2C,EAAM+lC,GAAQA,EAAKC,QAAUD,EAC7B5I,EAAIx6B,EAAK/E,QAEP,KAAOu/B,KAEL,GADA37B,EAAMmB,EAAKw6B,GACC,SAAR37B,GAAkB6d,GAAS0mB,EAAKE,KAAMj4B,IAAWqR,GAAS0L,GAAQ/qB,EAAKwB,GAAMwM,GAAS,CACxF0W,EAAIthB,KAAK2iC,EACT,YAGK1mB,IAAS0mB,EAAM/3B,IACxB0W,EAAIthB,KAAK2iC,EAGb,OAAOrhB,GAUT,QAASwhB,IAAQ5rB,GAiCf,QAAS6rB,GAAYhpC,EAAGwb,EAAGytB,GACzB,GAAIC,GAAUC,EAASF,EASvB,OARIC,KACc,SAAZA,IACElmC,EAAShD,IAAM,UAAYA,KAAGA,EAAIA,EAAE6oC,QACpC7lC,EAASwY,IAAM,UAAYA,KAAGA,EAAIA,EAAEqtB,SAE1C7oC,EAAIgD,EAAShD,GAAK4tB,GAAQ5tB,EAAGkpC,GAAWlpC,EACxCwb,EAAIxY,EAASwY,GAAKoS,GAAQpS,EAAG0tB,GAAW1tB,GAEnCxb,IAAMwb,EAAI,EAAIxb,EAAIwb,EAAInG,GAASA,EA1CxC,GAAI+zB,GAAa,KACbD,EAAWjoC,MACfic,GAAMwrB,GAAaxrB,EAGnB,IAAI3Y,GAAOwX,EAAQrY,UAAW,GAC1B0R,EAAQ7Q,EAAKA,EAAK/D,OAAS,EACV,iBAAV4U,IACTA,EAAQA,EAAQ,KAAS,EACzB7Q,EAAOA,EAAK/D,OAAS,EAAI+D,EAAKE,MAAM,MAASF,GAE7C6Q,EAAQ,CAIV,IAAIg0B,GAAW7kC,EAAK,EACpB,OAAK6kC,IAE0B,kBAAbA,GAEhBD,EAAa,SAAUppC,EAAGwb,GACxB,MAAO6tB,GAASrpC,EAAGwb,GAAKnG,IAI1B8zB,EAAWthC,MAAMxE,UAAUgzB,OAAOnwB,SAAU1B,GAC5C4kC,EAAa,SAAUppC,EAAGwb,EAAGtb,GAE3B,MADAA,GAAIA,GAAK,EACFA,GAAKipC,EAAS1oC,OAAS,EAAIuoC,EAAYhpC,EAAGwb,EAAGtb,GAAK8oC,EAAYhpC,EAAGwb,EAAGtb,IAAMkpC,EAAWppC,EAAGwb,EAAGtb,EAAI,KAkBnGid,EAAIzY,QAAQ+3B,KAAK2M,IA7BfjsB,EAuCX,QAAS+E,IAASrf,EAAKgO,GACrB,GAAI3Q,EACJ,IAAIgD,EAAcL,GAAM,CACtB,GAAI2C,GAAOrC,OAAOqC,KAAK3C,EAEvB,KADA3C,EAAIsF,EAAK/E,OACFP,KACL,GAAIgiB,GAASrf,EAAI2C,EAAKtF,IAAK2Q,GACzB,OAAO,MAGN,IAAI5L,GAAQpC,IAEjB,IADA3C,EAAI2C,EAAIpC,OACDP,KACL,GAAIgiB,GAASrf,EAAI3C,GAAI2Q,GACnB,OAAO,MAGN,IAAW,MAAPhO,EACT,MAAOA,GAAI2E,WAAWqF,cAAclH,QAAQkL,MAkHhD,QAASy4B,IAAkBznC,GA2GzB,QAAS0nC,GAAYvgC,GAEnB,MAAO,IAAI+lB,UAAS,mBAAqBjT,EAAS9S,GAAQ,wCAnG5DnH,EAAIgC,SACFk7B,WAAYA,GACZyK,kBAAmBA,GACnBnrB,QAASA,GACTorB,eACA31B,cACA41B,YACA/mC,SAAS,GAOXd,EAAIC,KAAOA,GACXD,EAAIG,OAASA,GACbH,EAAIiY,IAAMA,EACVjY,EAAI,UAAY4Y,EAChB5Y,EAAIS,SAAWA,GAMfT,EAAI8nC,SAAWA,GACf9nC,EAAIgzB,gBAAkBA,GACtBhzB,EAAI09B,mBAAqBA,GACzB19B,EAAI+nC,SACFtd,KAAMA,GACN/gB,KAAMA,GACNnF,SAAUA,GACV4P,UAAWA,GACXzP,WAAYA,IASd1E,EAAIizB,IAAM,CACV,IAAIA,GAAM,CAQVjzB,GAAI0U,OAAS,SAAUszB,GACrBA,EAAgBA,KAChB,IAAIC,GAAQhpC,KACRipC,EAA8B,IAAdD,EAAMhV,GAC1B,IAAIiV,GAAiBF,EAAcG,MACjC,MAAOH,GAAcG,KAEvB,IAAIhhC,GAAO6gC,EAAc7gC,MAAQ8gC,EAAMjmC,QAAQmF,IAExC,oBAAmBb,KAAKa,KAC3B9G,GAAK,4BAA8B8G,EAAO,gFAC1CA,EAAO,KAGX,IAAIihC,GAAMV,EAAYvgC,GAAQ,eAqB9B,OApBAihC,GAAI5mC,UAAYF,OAAO2a,OAAOgsB,EAAMzmC,WACpC4mC,EAAI5mC,UAAUsW,YAAcswB,EAC5BA,EAAInV,IAAMA,IACVmV,EAAIpmC,QAAUikB,GAAagiB,EAAMjmC,QAASgmC,GAC1CI,EAAI,SAAWH,EAEfG,EAAI1zB,OAASuzB,EAAMvzB,OAGnBvU,GAAOkoC,YAAYvlC,QAAQ,SAAUmH,GACnCm+B,EAAIn+B,GAAQg+B,EAAMh+B,KAGhB9C,IACFihC,EAAIpmC,QAAQiQ,WAAW9K,GAAQihC,GAG7BF,IACFF,EAAcG,MAAQC,GAEjBA,GAwBTpoC,EAAIqM,IAAM,SAAUS,GAElB,IAAIA,EAAOC,UAAX,CAIA,GAAIpK,GAAOwX,EAAQrY,UAAW,EAQ9B,OAPAa,GAAKwJ,QAAQlN,MACiB,kBAAnB6N,GAAOw7B,QAChBx7B,EAAOw7B,QAAQjkC,MAAMyI,EAAQnK,GAE7BmK,EAAOzI,MAAM,KAAM1B,GAErBmK,EAAOC,WAAY,EACZ9N,OAQTe,EAAIwmB,MAAQ,SAAUA,GACpBxmB,EAAIgC,QAAUikB,GAAajmB,EAAIgC,QAASwkB,IAW1CrmB,GAAOkoC,YAAYvlC,QAAQ,SAAUmH,GACnCjK,EAAIiK,GAAQ,SAAU8a,EAAIwjB,GACxB,MAAKA,IAKY,cAATt+B,IAAyB0a,GAAYre,KAAKye,IAAOH,GAActe,KAAKye,KACtE1kB,GAAK,kEAAyE0kB,GAGrE,cAAT9a,GAAwB5I,EAAcknC,KACnCA,EAAWphC,OACdohC,EAAWphC,KAAO4d,GAEpBwjB,EAAavoC,EAAI0U,OAAO6zB,IAE1BtpC,KAAK+C,QAAQiI,EAAO,KAAK8a,GAAMwjB,EACxBA,GAfAtpC,KAAK+C,QAAQiI,EAAO,KAAK8a,MAqBtCrQ,EAAO1U,EAAIqf,WAAYA,IAxvTzB,GAAI5c,IAAiBnB,OAAOE,UAAUiB,eAoBlCuW,GAAiB,iDA8EjBa,GAAa,SAiBbG,GAAc,oBAkBdE,GAAa,oBA4EbvU,GAAWrE,OAAOE,UAAUmE,SAC5B8U,GAAgB,kBAahBrX,GAAU4C,MAAM5C,QAsGhB+jB,GAAY,gBAGZqhB,GAA8B,mBAAXt+B,SAAqE,oBAA3C5I,OAAOE,UAAUmE,SAAShH,KAAKuL,QAG5EgkB,GAAWsa,IAAat+B,OAAOu+B,6BAG/BC,GAAKF,IAAat+B,OAAOy+B,UAAUC,UAAU59B,cAC7C69B,GAAOH,IAAMA,GAAG5kC,QAAQ,WAAa,EACrC8d,GAAQ8mB,IAAMA,GAAG5kC,QAAQ,YAAc,EACvCglC,GAAYJ,IAAMA,GAAG5kC,QAAQ,WAAa,EAC1CilC,GAAQL,IAAM,0BAA0BpiC,KAAKoiC,IAC7CM,GAAkBD,IAASL,GAAGllC,MAAM,eACpCylC,GAAaD,IAAmBA,GAAgB,GAAGhkC,MAAM,KAGzDkkC,GAAyBD,IAAc1vB,OAAO0vB,GAAW,KAAO,GAAK1vB,OAAO0vB,GAAW,KAAO,IAAM/+B,OAAOi/B,UAE3GC,GAAiB/pC,OACjBmgB,GAAqBngB,OACrBgqC,GAAgBhqC,OAChBiqC,GAAoBjqC,MAGxB,IAAImpC,KAAc5mB,GAAO,CACvB,GAAI2nB,IAA2ClqC,SAA3B6K,OAAOs/B,iBAAkEnqC,SAAjC6K,OAAOu/B,sBAC/DC,GAAyCrqC,SAA1B6K,OAAOy/B,gBAAgEtqC,SAAhC6K,OAAO0/B,oBACjER,IAAiBG,GAAgB,mBAAqB,aACtD/pB,GAAqB+pB,GAAgB,sBAAwB,gBAC7DF,GAAgBK,GAAe,kBAAoB,YACnDJ,GAAoBI,GAAe,qBAAuB,eAa5D,GAAIjpC,IAAY,WAId,QAASopC,KACPC,GAAU,CACV,IAAIC,GAASC,EAAUnnC,MAAM,EAC7BmnC,KACA,KAAK,GAAI3rC,GAAI,EAAGA,EAAI0rC,EAAOnrC,OAAQP,IACjC0rC,EAAO1rC,KARX,GAEI4rC,GAFAD,KACAF,GAAU,CAYd,IAAgC,mBAArBI,mBAAqChB,GAWzC,CAIL,GAAItpC,GAAU4oC,GAAYt+B,OAA2B,mBAAXyN,GAAyBA,IACnEsyB,GAAYrqC,EAAQuqC,cAAgBl/B,eAhBkC,CACtE,GAAIm/B,GAAU,EACVC,EAAW,GAAIH,kBAAiBL,GAChCS,EAAWngC,SAASkZ,eAAe+mB,EACvCC,GAAS1iB,QAAQ2iB,GACfC,eAAe,IAEjBN,EAAY,WACVG,GAAWA,EAAU,GAAK,EAC1BE,EAAS9gC,KAAO4gC,GASpB,MAAO,UAAU1pC,EAAIC,GACnB,GAAIoa,GAAOpa,EAAM,WACfD,EAAG/B,KAAKgC,IACND,CACJspC,GAAU5lC,KAAK2W,GACX+uB,IACJA,GAAU,EACVG,EAAUJ,EAAiB,QAI3Bza,GAAO/vB,MAEQ,oBAARmrC,MAAuBA,IAAI7kC,WAAWnC,MAAM,eAErD4rB,GAAOob,KAGPpb,GAAO,WACLnwB,KAAKgZ,IAAM3W,OAAO2a,OAAO,OAE3BmT,GAAK5tB,UAAUosB,IAAM,SAAUprB,GAC7B,MAAyBnD,UAAlBJ,KAAKgZ,IAAIzV,IAElB4sB,GAAK5tB,UAAU0F,IAAM,SAAU1E,GAC7BvD,KAAKgZ,IAAIzV,GAAO,GAElB4sB,GAAK5tB,UAAUquB,MAAQ,WACrB5wB,KAAKgZ,IAAM3W,OAAO2a,OAAO,OAW7B,IAAI1N,IAAIoN,EAAMna,SAad+M,IAAEwB,IAAM,SAAUvN,EAAKpD,GACrB,GAAI6kB,GAEAwmB,EAAQxrC,KAAKmO,IAAI5K,GAAK,EAoB1B,OAnBKioC,KACCxrC,KAAK4c,OAAS5c,KAAK2c,QACrBqI,EAAUhlB,KAAKmP,SAEjBq8B,GACEjoC,IAAKA,GAEPvD,KAAK+c,QAAQxZ,GAAOioC,EAChBxrC,KAAK8c,MACP9c,KAAK8c,KAAK2uB,MAAQD,EAClBA,EAAME,MAAQ1rC,KAAK8c,MAEnB9c,KAAK6c,KAAO2uB,EAEdxrC,KAAK8c,KAAO0uB,EACZxrC,KAAK4c,QAEP4uB,EAAMrrC,MAAQA,EAEP6kB,GAST1V,GAAEH,MAAQ,WACR,GAAIq8B,GAAQxrC,KAAK6c,IAQjB,OAPI2uB,KACFxrC,KAAK6c,KAAO7c,KAAK6c,KAAK4uB,MACtBzrC,KAAK6c,KAAK6uB,MAAQtrC,OAClBorC,EAAMC,MAAQD,EAAME,MAAQtrC,OAC5BJ,KAAK+c,QAAQyuB,EAAMjoC,KAAOnD,OAC1BJ,KAAK4c,QAEA4uB,GAYTl8B,GAAEnB,IAAM,SAAU5K,EAAKooC,GACrB,GAAIH,GAAQxrC,KAAK+c,QAAQxZ,EACzB,IAAcnD,SAAVorC,EACJ,MAAIA,KAAUxrC,KAAK8c,KACV6uB,EAAcH,EAAQA,EAAMrrC,OAMjCqrC,EAAMC,QACJD,IAAUxrC,KAAK6c,OACjB7c,KAAK6c,KAAO2uB,EAAMC,OAEpBD,EAAMC,MAAMC,MAAQF,EAAME,OAExBF,EAAME,QACRF,EAAME,MAAMD,MAAQD,EAAMC,OAE5BD,EAAMC,MAAQrrC,OACdorC,EAAME,MAAQ1rC,KAAK8c,KACf9c,KAAK8c,OACP9c,KAAK8c,KAAK2uB,MAAQD,GAEpBxrC,KAAK8c,KAAO0uB,EACLG,EAAcH,EAAQA,EAAMrrC,OAGrC,IAQIyB,IACA0b,GACArD,GACAmE,GACAhf,GACAI,GACA0d,GACAa,GACAC,GACAC,GACAC,GACAC,GAnBAL,GAAU,GAAIpB,GAAM,KACpBU,GAAgB,4BAChBK,GAAgB,cAgJlBvI,GAAY7S,OAAOupC,QACnBhuB,eAAgBA,IAGdU,GAAgB,yBAChBU,GAAQ5e,OACRye,GAAQze,OACR2e,GAAS3e,OA+HTyf,GAAW,aAiBbpV,GAAOpI,OAAOupC,QACdrtB,aAAcA,EACdU,UAAWA,EACXM,YAAaA,IAGXf,IAAc,KAAM,MACpBG,IAAoB,MAAO,OAE3Bzd,GAASmB,OAAO4L,kBASlBhN,OAAO,EAQPE,QAAQ,EAMRmK,OAAO,EAOPugC,sBAAsB,EAOtB5c,UAAU,EASV6c,oBAAoB,EAQpB1C,aAAc,YAAa,YAAa,mBAAoB,SAAU,aAAc,WAMpF2C,mBACE3U,QAAS,EACTC,QAAS,EACTC,SAAU,GAOZjI,gBAAiB,MAGjB7Q,YAOErQ,IAAK,WACH,MAAOqQ,KAETxF,IAAK,SAAajX,GAChByc,GAAazc,EACbwc,KAEF3C,cAAc,EACdF,YAAY,GAEdiD,kBACExQ,IAAK,WACH,MAAOwQ,KAET3F,IAAK,SAAajX,GAChB4c,GAAmB5c,EACnBwc,KAEF3C,cAAc,EACdF,YAAY,KAIZta,GAAOhB,OACP4rC,GAAsB5rC,QAGxB,WACE,GAAI6rC,GAAgC,mBAAZ3qC,QAExBF,IAAO,SAAUC,EAAKuG,GAChBqkC,IAAe/qC,GAAOC,QACxBG,QAAQC,MAAM,eAAiBF,GAAOuG,EAAKokC,GAAoBpkC,GAAM,MAIzEokC,GAAsB,SAAUpkC,GAC9B,GAAIM,GAAON,EAAGsR,OAAStR,EAAGxE,SAAS8E,KAAON,EAAGM,IAC7C,OAAOA,GAAO,0BAA4B4S,EAAU5S,GAAQ,KAAO,MAiF3E,IAAIkY,IAAa/d,OAAOupC,QACpB9rB,qBAAsBA,EACtBE,qBAAsBA,EACtBC,qBAAsBA,EACtBF,gBAAiBA,IAuVf2E,GAAQ,UA6FRgB,GAAc,mJACdC,GAAgB,8BAEhBO,GAAmB9lB,MAErB8lB,IAAmB,SAAUzW,EAAI6P,GAC/B,MAAIA,GAAIza,QAAQ,QAEP4K,EAAGoJ,cAAgB5N,OAAOihC,oBAAsBz8B,EAAGoJ,cAAgB5N,OAAOkhC,YAEzE,qBAAqB9kC,KAAKoI,EAAG/I,cAIlC,8CAA8CW,KAAKiY,GA2E5D,IAAI6H,IAASjmB,GAAOkrC,sBAAwB/pC,OAAO2a,OAAO,KAwB1DmK,IAAO5c,KAAO,SAAUgc,EAAWC,EAAU5e,GAC3C,MAAKA,GAoBM2e,GAAaC,EACf,WAEL,GAAI6lB,GAAmC,kBAAb7lB,GAA0BA,EAAS9mB,KAAKkI,GAAM4e,EACpE8lB,EAAmC,kBAAd/lB,GAA2BA,EAAU7mB,KAAKkI,GAAMxH,MACzE,OAAIisC,GACKlmB,GAAUkmB,EAAcC,GAExBA,GARN,OAlBA9lB,EAGmB,kBAAbA,IACyBplB,GAAK,qGAAgHwG,GAChJ2e,GAEJA,EAQE,WACL,MAAOJ,IAAUK,EAAS9mB,KAAKM,MAAOumB,EAAU7mB,KAAKM,QAR9CwmB,EAPAD,GAmCbY,GAAO1X,GAAK,SAAU8W,EAAWC,EAAU5e,GACzC,IAAKA,GAAM4e,GAAgC,kBAAbA,GAE5B,WADkCplB,IAAK,mGAA8GwG,EAGvJ,IAAIyT,GAAMmL,GAAYD,CAEtB,OAAO3e,IAAqB,kBAARyT,GAAqBA,EAAI3b,KAAKkI,GAAMyT,GAO1D8L,GAAO4N,KAAO5N,GAAOolB,QAAUplB,GAAOvU,MAAQuU,GAAOqlB,SAAWrlB,GAAOslB,SAAWtlB,GAAOulB,cAAgBvlB,GAAOwlB,SAAWxlB,GAAOylB,cAAgBzlB,GAAO0lB,UAAY1lB,GAAO2lB,SAAW,SAAUvmB,EAAWC,GAC1M,MAAOA,GAAWD,EAAYA,EAAUgP,OAAO/O,GAAYriB,GAAQqiB,GAAYA,GAAYA,GAAYD,GAgBzGrlB,GAAOkoC,YAAYvlC,QAAQ,SAAUmH,GACnCmc,GAAOnc,EAAO,KAAOsb,KAUvBa,GAAOnR,MAAQmR,GAAOub,OAAS,SAAUnc,EAAWC,GAClD,IAAKA,EAAU,MAAOD,EACtB,KAAKA,EAAW,MAAOC,EACvB,IAAInL,KACJ5F,GAAO4F,EAAKkL,EACZ,KAAK,GAAIhjB,KAAOijB,GAAU,CACxB,GAAIvF,GAAS5F,EAAI9X,GACb8f,EAAQmD,EAASjjB,EACjB0d,KAAW9c,GAAQ8c,KACrBA,GAAUA,IAEZ5F,EAAI9X,GAAO0d,EAASA,EAAOsU,OAAOlS,IAAUA,GAE9C,MAAOhI,IAOT8L,GAAOzR,MAAQyR,GAAO/T,QAAU+T,GAAO1U,SAAW,SAAU8T,EAAWC,GACrE,IAAKA,EAAU,MAAOD,EACtB,KAAKA,EAAW,MAAOC,EACvB,IAAInL,GAAMhZ,OAAO2a,OAAO,KAGxB,OAFAvH,GAAO4F,EAAKkL,GACZ9Q,EAAO4F,EAAKmL,GACLnL,EAOT,IAAI+L,IAAe,SAAsBb,EAAWC,GAClD,MAAoBpmB,UAAbomB,EAAyBD,EAAYC,GA4K1CoB,GAAQ,CAgBZD,IAAIlkB,OAAS,KAQbkkB,GAAIplB,UAAUwqC,OAAS,SAAUC,GAC/BhtC,KAAK6nB,KAAK1iB,KAAK6nC,IASjBrlB,GAAIplB,UAAU0qC,UAAY,SAAUD,GAClChtC,KAAK6nB,KAAKwU,QAAQ2Q,IAOpBrlB,GAAIplB,UAAU4mB,OAAS,WACrBxB,GAAIlkB,OAAOypC,OAAOltC,OAOpB2nB,GAAIplB,UAAU0M,OAAS,WAGrB,IAAK,GADD4Y,GAAO3M,EAAQlb,KAAK6nB,MACfzoB,EAAI,EAAGI,EAAIqoB,EAAKloB,OAAQP,EAAII,EAAGJ,IACtCyoB,EAAKzoB,GAAG+R,SAIZ,IAAIg8B,IAAapmC,MAAMxE,UACnB8lB,GAAehmB,OAAO2a,OAAOmwB,KAM/B,OAAQ,MAAO,QAAS,UAAW,SAAU,OAAQ,WAAWtpC,QAAQ,SAAUkF,GAElF,GAAIkkB,GAAWkgB,GAAWpkC,EAC1B0S,GAAI4M,GAActf,EAAQ,WAKxB,IAFA,GAAI3J,GAAIyD,UAAUlD,OACd+D,EAAO,GAAIqD,OAAM3H,GACdA,KACLsE,EAAKtE,GAAKyD,UAAUzD,EAEtB,IAEI4zB,GAFAxsB,EAASymB,EAAS7nB,MAAMpF,KAAM0D,GAC9B0V,EAAKpZ,KAAKqZ,MAEd,QAAQtQ,GACN,IAAK,OACHiqB,EAAWtvB,CACX,MACF,KAAK,UACHsvB,EAAWtvB,CACX,MACF,KAAK,SACHsvB,EAAWtvB,EAAKE,MAAM,GAM1B,MAHIovB,IAAU5Z,EAAGmP,aAAayK,GAE9B5Z,EAAGG,IAAItK,SACAzI,MAaXiV,EAAI0xB,GAAY,OAAQ,SAAcp3B,EAAOhU,GAI3C,MAHIgU,IAAS/V,KAAKL,SAChBK,KAAKL,OAAS2a,OAAOvE,GAAS,GAEzB/V,KAAKknC,OAAOnxB,EAAO,EAAGhU,GAAK,KASpC0Z,EAAI0xB,GAAY,UAAW,SAAiBrF,GAE1C,GAAK9nC,KAAKL,OAAV,CACA,GAAIoW,GAAQlR,EAAQ7E,KAAM8nC,EAC1B,OAAI/xB,MACK/V,KAAKknC,OAAOnxB,EAAO,GAD5B,SAKF,IAAIuS,IAAYjmB,OAAO+qC,oBAAoB/kB,IAYvCN,IAAgB,CAyCpBC,IAASzlB,UAAUimB,KAAO,SAAUrmB,GAElC,IAAK,GADDuC,GAAOrC,OAAOqC,KAAKvC,GACd/C,EAAI,EAAGI,EAAIkF,EAAK/E,OAAQP,EAAII,EAAGJ,IACtCY,KAAKsZ,QAAQ5U,EAAKtF,GAAI+C,EAAIuC,EAAKtF,MAUnC4oB,GAASzlB,UAAUgmB,aAAe,SAAU8kB,GAC1C,IAAK,GAAIjuC,GAAI,EAAGI,EAAI6tC,EAAM1tC,OAAQP,EAAII,EAAGJ,IACvCspB,GAAQ2kB,EAAMjuC,KAYlB4oB,GAASzlB,UAAU+W,QAAU,SAAU/V,EAAKxB,GAC1C8mB,GAAe7oB,KAAKG,MAAOoD,EAAKxB,IAYlCimB,GAASzlB,UAAUqmB,MAAQ,SAAUhhB,IAClC5H,KAAKwZ,MAAQxZ,KAAKwZ,SAAWrU,KAAKyC,IAUrCogB,GAASzlB,UAAUm/B,SAAW,SAAU95B,GACtC5H,KAAKwZ,IAAI6iB,QAAQz0B,GAuHnB,IAAI5G,IAAOqB,OAAOupC,QACjB/iB,eAAgBA,GAChB7P,IAAKA,EACLW,IAAKA,EACLV,OAAQA,EACRY,UAAWA,EACXG,WAAYA,EACZG,UAAWA,EACXC,SAAUA,EACVI,UAAWA,EACXC,YAAaA,EACbE,SAAUA,EACVG,UAAWA,EACXE,SAAUA,EACVna,KAAMA,EACNqa,QAASA,EACTzF,OAAQA,EACRvT,SAAUA,EACVE,cAAeA,EACfqZ,IAAKA,EACL6xB,SAAUzxB,EACVhX,QAASA,EACTyX,YAAaA,EACbG,WAAYA,EACZtY,QAASA,GACT+jB,SAAUA,GACVqhB,UAAWA,GACXta,SAAUA,GACV2a,KAAMA,GACNjnB,MAAOA,GACPknB,UAAWA,GACXC,MAAOA,GACPC,gBAAiBA,GACjBC,WAAYA,GACZC,uBAAwBA,GACxBE,GAAIA,kBAAoB,MAAOA,KAC/B5pB,GAAIA,sBAAwB,MAAOA,KACnC6pB,GAAIA,iBAAmB,MAAOA,KAC9BC,GAAIA,qBAAuB,MAAOA,KAClC7oC,SAAUA,GACV2uB,GAAIA,QAAU,MAAOA,KACrB3rB,MAAOA,EACPoc,MAAOA,EACPS,QAASA,EACTI,YAAaA,EACbC,YAAaA,EACblW,OAAQA,EACRqW,MAAOA,EACPzQ,OAAQA,EACR2Q,QAASA,EACTlgB,QAASA,EACTqgB,GAAIA,EACJE,IAAKA,EACLK,SAAUA,EACVK,SAAUA,EACVG,YAAaA,GACbE,eAAgBA,GAChBQ,SAAUA,GACVJ,WAAYA,GACZS,aAAcA,GACdM,QAASA,GACTK,aAAcA,GACdE,gBAAiBA,GACjBrB,WAAYA,GACZ2B,aAAcA,GACd6B,aAAcA,GACdnB,aAAcA,GACdL,mBAAoBA,GACpBE,YAAaA,GACbC,cAAeA,GACfvkB,GAAIA,QAAU,MAAOA,OAGlB2oB,GAAM,EAsGN8C,GAAY,GAAInQ,GAAM,KAGtBsP,GAAS,EACTI,GAAO,EACPC,GAAqB,EACrBC,GAAgB,EAGhBJ,GAAc,EACdqhB,GAAU,EACVC,GAAe,EACfC,GAAW,EACXlhB,GAAc,EACdV,GAAkB,EAClBC,GAAkB,EAClBY,GAAa,EACbD,GAAQ,EAERD,KAEJA,IAAiBN,KACfwhB,IAAOxhB,IACPyhB,OAAUF,GAAUzhB,IACpB4hB,KAAMrhB,IACNshB,KAAQnhB,KAGVF,GAAiB+gB,KACfG,IAAOH,IACPO,KAAMN,IACNI,KAAMrhB,IACNshB,KAAQnhB,KAGVF,GAAiBghB,KACfE,IAAOF,IACPG,OAAUF,GAAUzhB,KAGtBQ,GAAiBihB,KACfE,OAAUF,GAAUzhB,IACpB+hB,GAAMN,GAAUzhB,IAChBgiB,QAAWP,GAAUzhB,IACrB0hB,IAAOH,GAASnhB,IAChB0hB,KAAMN,GAAcphB,IACpBwhB,KAAMrhB,GAAaH,IACnByhB,KAAQnhB,GAAYN,KAGtBI,GAAiBD,KACf0hB,KAAMpiB,GAAiBG,IACvBkiB,KAAMpiB,GAAiBE,IACvB4hB,KAAMrhB,GAAaF,IACnB8hB,KAAMZ,GAASjhB,IACfuhB,IAAOphB,GACP2hB,QAAS7hB,GAAaP,KAGxBQ,GAAiBX,KACfoiB,KAAM1hB,GAAaP,IACnB6hB,IAAOphB,GACP2hB,QAASviB,GAAiBG,KAG5BQ,GAAiBV,KACfoiB,KAAM3hB,GAAaP,IACnB6hB,IAAOphB,GACP2hB,QAAStiB,GAAiBE,IA2M5B,IAAIkB,GAEFA,IAAkB,SAAU1B,EAAM5jB,GAChCxG,GAAK,wCAA0CoqB,EAAKmB,IAAM,yIAAyJ/kB,GAoDzN,IAAI4jB,IAAOnpB,OAAOupC,QACdhf,UAAWA,GACXE,QAASA,GACTE,QAASA,KAGPoB,GAAkB,GAAI1R,GAAM,KAE5B2xB,GAAkB,qJAClB7gB,GAAoB,GAAI1O,QAAO,KAAOuvB,GAAgBxsC,QAAQ,KAAM,QAAU,QAG9EysC,GAAmB,mQACnB1gB,GAAqB,GAAI9O,QAAO,KAAOwvB,GAAiBzsC,QAAQ,KAAM,QAAU,QAEhFisB,GAAO,MACPR,GAAY,MACZO,GAAS,2IACTJ,GAAY,WACZa,GAAa,6FACbP,GAAU,gCACVQ,GAAmB,+CAcnBlB,MAuKF5nB,GAAapD,OAAOupC,QACpB7e,gBAAiBA,GACjBsB,aAAcA,KAUZI,MACAC,MACAC,MACAC,MACAC,IAAU,EA6FVe,GAAQ,CA0DZH,IAAQltB,UAAU4L,IAAM,WACtBnO,KAAKuuC,WACL,IACIpuC,GADA2H,EAAQ9H,KAAK8H,OAAS9H,KAAK4H,EAE/B,KACEzH,EAAQH,KAAKgpB,OAAOtpB,KAAKoI,EAAOA,GAChC,MAAOnJ,GAC+BuC,GAAO2qC,sBAC3CzqC,GAAK,qCAA4CpB,KAAKyF,WAAa,MAAQ9G,EAAE+H,WAAY1G,KAAK4H,IAkBlG,MAbI5H,MAAKkE,MACPusB,GAAStwB,GAEPH,KAAKwuC,aACPruC,EAAQH,KAAKwuC,WAAWruC,IAEtBH,KAAKud,UACPpd,EAAQ2H,EAAM28B,cAActkC,EAAO,KAAMH,KAAKud,SAAS,IAErDvd,KAAKyuC,cACPtuC,EAAQH,KAAKyuC,YAAYtuC,IAE3BH,KAAK0uC,WACEvuC,GASTsvB,GAAQltB,UAAUyW,IAAM,SAAU7Y,GAChC,GAAI2H,GAAQ9H,KAAK8H,OAAS9H,KAAK4H,EAC3B5H,MAAKud,UACPpd,EAAQ2H,EAAM28B,cAActkC,EAAOH,KAAKG,MAAOH,KAAKud,SAAS,GAE/D,KACEvd,KAAKipB,OAAOvpB,KAAKoI,EAAOA,EAAO3H,GAC/B,MAAOxB,GAC+BuC,GAAO2qC,sBAC3CzqC,GAAK,iCAAwCpB,KAAKyF,WAAa,MAAQ9G,EAAE+H,WAAY1G,KAAK4H,IAI9F,GAAI+mC,GAAa7mC,EAAM8mC,WACvB,IAAID,GAAcA,EAAWE,QAAU7uC,KAAKyF,WAAY,CACtD,GAAIkpC,EAAWpxB,QAEb,WADkCnc,IAAK,4DAAmEpB,KAAKyF,WAAa,yJAAyKzF,KAAK4H,GAG5S+mC,GAAWG,UAAU,WACfhnC,EAAMkgC,KAER2G,EAAWtW,SAASvwB,EAAMkgC,MAAQ7nC,EAElCwuC,EAAWtW,SAASlL,KAAKrlB,EAAMinC,OAAQ5uC,OAU/CsvB,GAAQltB,UAAUgsC,UAAY,WAC5B5mB,GAAIlkB,OAASzD,MASfyvB,GAAQltB,UAAU2qC,OAAS,SAAU3zB,GACnC,GAAIuM,GAAKvM,EAAIuM,EACR9lB,MAAKowB,UAAUzB,IAAI7I,KACtB9lB,KAAKowB,UAAUnoB,IAAI6d,GACnB9lB,KAAKiwB,QAAQ9qB,KAAKoU,GACbvZ,KAAKkwB,OAAOvB,IAAI7I,IACnBvM,EAAIwzB,OAAO/sC,QASjByvB,GAAQltB,UAAUmsC,SAAW,WAC3B/mB,GAAIlkB,OAAS,IAEb,KADA,GAAIrE,GAAIY,KAAKgwB,KAAKrwB,OACXP,KAAK,CACV,GAAIma,GAAMvZ,KAAKgwB,KAAK5wB,EACfY,MAAKowB,UAAUzB,IAAIpV,EAAIuM,KAC1BvM,EAAI0zB,UAAUjtC,MAGlB,GAAIiG,GAAMjG,KAAKkwB,MACflwB,MAAKkwB,OAASlwB,KAAKowB,UACnBpwB,KAAKowB,UAAYnqB,EACjBjG,KAAKowB,UAAUQ,QACf3qB,EAAMjG,KAAKgwB,KACXhwB,KAAKgwB,KAAOhwB,KAAKiwB,QACjBjwB,KAAKiwB,QAAUhqB,EACfjG,KAAKiwB,QAAQtwB,OAAS,GAUxB8vB,GAAQltB,UAAU4O,OAAS,SAAUqf,GAC/BxwB,KAAK+vB,KACP/vB,KAAK8vB,OAAQ,EACJ9vB,KAAKylC,OAASvkC,GAAOoK,MAC9BtL,KAAKovB,OAILpvB,KAAKwwB,QAAUxwB,KAAKuwB,SAASC,GAAUxwB,KAAKwwB,UAAoBA,EAChExwB,KAAKuwB,QAAS,EAGwBrvB,GAAOD,QAC3CjB,KAAKqwB,UAAY,GAAI/wB,OAAM,4BAE7BgwB,GAAYtvB,QAShByvB,GAAQltB,UAAU6sB,IAAM,WACtB,GAAIpvB,KAAK6vB,OAAQ,CACf,GAAI1vB,GAAQH,KAAKmO,KACjB,IAAIhO,IAAUH,KAAKG,QAKlB+B,EAAS/B,IAAUH,KAAKkE,QAAUlE,KAAKwwB,QAAS,CAE/C,GAAIkU,GAAW1kC,KAAKG,KACpBH,MAAKG,MAAQA,CAIb,IAAIkwB,GAAYrwB,KAAKqwB,SAErB,IAAsCnvB,GAAOD,OAASovB,EAAW,CAC/DrwB,KAAKqwB,UAAY,IACjB,KACErwB,KAAKyB,GAAG/B,KAAKM,KAAK4H,GAAIzH,EAAOukC,GAC7B,MAAO/lC,GAIP,KAHA6C,IAAS,WACP,KAAM6uB,IACL,GACG1xB,OAGRqB,MAAKyB,GAAG/B,KAAKM,KAAK4H,GAAIzH,EAAOukC,GAGjC1kC,KAAKuwB,OAASvwB,KAAKwwB,SAAU,IASjCf,GAAQltB,UAAUw+B,SAAW,WAG3B,GAAI5rB,GAAUwS,GAAIlkB,MAClBzD,MAAKG,MAAQH,KAAKmO,MAClBnO,KAAK8vB,OAAQ,EACbnI,GAAIlkB,OAAS0R,GAOfsa,GAAQltB,UAAU4mB,OAAS,WAEzB,IADA,GAAI/pB,GAAIY,KAAKgwB,KAAKrwB,OACXP,KACLY,KAAKgwB,KAAK5wB,GAAG+pB,UAQjBsG,GAAQltB,UAAU+hC,SAAW,WAC3B,GAAItkC,KAAK6vB,OAAQ,CAKV7vB,KAAK4H,GAAG6iB,mBAAsBzqB,KAAK4H,GAAG8iB,eACzC1qB,KAAK4H,GAAGgiB,UAAUyS,QAAQr8B,KAG5B,KADA,GAAIZ,GAAIY,KAAKgwB,KAAKrwB,OACXP,KACLY,KAAKgwB,KAAK5wB,GAAG6tC,UAAUjtC,KAEzBA,MAAK6vB,QAAS,EACd7vB,KAAK4H,GAAK5H,KAAKyB,GAAKzB,KAAKG,MAAQ,MAYrC,IAAIwwB,IAAc,GAAIR,IA8BlB6e,IAEFnuC,KAAM,WACJb,KAAK+2B,KAA4B,IAArB/2B,KAAKyP,GAAG0R,SAAiB,OAAS,eAGhDhQ,OAAQ,SAAgBhR,GACtBH,KAAKyP,GAAGzP,KAAK+2B,MAAQ5c,EAAUha,KAI/BixB,GAAgB,GAAI1U,GAAM,KAC1BgW,GAAkB,GAAIhW,GAAM,KAE5BvV,IACFyqB,QAAS,EAAG,GAAI,IAChBqd,QAAS,EAAG,aAAc,eAC1BC,IAAK,EAAG,iBAAkB,oBAC1BC,KAAM,EAAG,mCAAoC,uBAG/ChoC,IAAIioC,GAAKjoC,GAAIkoC,IAAM,EAAG,qBAAsB,yBAE5CloC,GAAImoC,OAASnoC,GAAIooC,UAAY,EAAG,+BAAgC,aAEhEpoC,GAAIqoC,MAAQroC,GAAIsoC,MAAQtoC,GAAIuoC,SAAWvoC,GAAIwoC,QAAUxoC,GAAIyoC,OAAS,EAAG,UAAW,YAEhFzoC,GAAI0oC,EAAI1oC,GAAI2oC,KAAO3oC,GAAI4oC,OAAS5oC,GAAIiG,IAAMjG,GAAIgN,MAAQhN,GAAIsD,KAAOtD,GAAI6oC,OAAS7oC,GAAI8oC,QAAU9oC,GAAI+oC,KAAO/oC,GAAIqkB,KAAOrkB,GAAIgpC,QAAUhpC,GAAIipC,SAAWjpC,GAAIszB,MAAQ,EAAG,gJAAqK,SAcnU,IAAInJ,IAAU,aACVE,GAAW,WACXE,GAAY,OA2FZW,GAAqB,WAEvB,GAAIkX,GAAW,CACb,GAAIrqC,GAAIgM,SAASE,cAAc,MAE/B,OADAlM,GAAEqmB,UAAY,0BACNrmB,EAAEomB,WAAU,GAAMtD,WAAWuD,UAErC,OAAO,KAKPgN,GAAuB,WAEzB,GAAIgX,GAAW,CACb,GAAI3qC,GAAIsM,SAASE,cAAc,WAE/B,OADAxM,GAAEyxC,YAAc,IACmB,MAA5BzxC,EAAE0mB,WAAU,GAAMnlB,MAEzB,OAAO,KA4GTmF,GAAWjD,OAAOupC,QAClBtmB,UAAWA,GACXkN,cAAeA,KAGbtT,IAEFre,KAAM,WAGqB,IAArBb,KAAKyP,GAAG0R,WAEVnhB,KAAKklB,SAELllB,KAAKkkB,OAASF,GAAa,UAC3BniB,EAAQ7B,KAAKyP,GAAIzP,KAAKkkB,UAI1B/S,OAAQ,SAAgBhR,GACtBA,EAAQga,EAAUha,GACdH,KAAKklB,MACPllB,KAAKswC,KAAKnwC,GAEVH,KAAKyP,GAAG8V,UAAYplB,GAIxBmwC,KAAM,SAAcnwC,GAGlB,IADA,GAAIf,GAAIY,KAAKklB,MAAMvlB,OACZP,KACLgS,EAAOpR,KAAKklB,MAAM9lB,GAIpB,IAAI0lB,GAAO0N,GAAcryB,GAAO,GAAM,EAEtCH,MAAKklB,MAAQhK,EAAQ4J,EAAKoO,YAC1B1nB,EAAOsZ,EAAM9kB,KAAKkkB,SAqDtB0O,IAASrwB,UAAUkxB,SAAW,SAAUmP,GACtC,GAAIxjC,GAAGI,CACP,KAAKJ,EAAI,EAAGI,EAAIQ,KAAK+yB,WAAWpzB,OAAQP,EAAII,EAAGJ,IAC7CY,KAAK+yB,WAAW3zB,GAAGq0B,SAASmP,EAE9B,KAAKxjC,EAAI,EAAGI,EAAIQ,KAAK+qB,SAASprB,OAAQP,EAAII,EAAGJ,IAC3CwjC,EAAK5iC,KAAK+qB,SAAS3rB,KA6EvBwzB,GAASrwB,UAAUqxB,aAAe,WAChC,GAAIx0B,GAAGI,CACP,KAAKJ,EAAI,EAAGI,EAAIQ,KAAK+yB,WAAWpzB,OAAQP,EAAII,EAAGJ,IAG7CY,KAAK+yB,WAAW3zB,GAAGw0B,cAAa,EAElC,KAAKx0B,EAAI,EAAGI,EAAIQ,KAAK+qB,SAASprB,OAAQP,EAAII,EAAGJ,IAM3CY,KAAK+qB,SAAS3rB,GAAGilC,UAAS,GAAO,EAEnC,IAAI9I,GAAOv7B,KAAKizB,OAAOsI,IACvB,KAAKn8B,EAAI,EAAGI,EAAI+7B,EAAK57B,OAAQP,EAAII,EAAGJ,IAIlCm8B,EAAKn8B,GAAGmxC,UAAYhV,EAAKn8B,GAAGmxC,SAASjM,YAQzC1R,GAASrwB,UAAUuxB,QAAU,WACvB9zB,KAAK8yB,YACP9yB,KAAK8yB,WAAWC,WAAWsJ,QAAQr8B,MAErCA,KAAK6gB,KAAK0S,SAAW,KACrBvzB,KAAKizB,SA2BP,IAAIiB,IAAc,GAAIxX,GAAM,IA4C5BqX,IAAgBxxB,UAAUya,OAAS,SAAUhT,EAAMlC,EAAOgrB,GACxD,GAAIhO,GAAOQ,GAAUtlB,KAAKsF,SAC1B,OAAO,IAAIstB,IAAS5yB,KAAK6yB,OAAQ7yB,KAAK4H,GAAIkd,EAAM9a,EAAMlC,EAAOgrB,GAG/D,IAAI0d,IAAK,IACLC,GAAQ,IACRC,GAAO,IACPC,GAAa,KACbC,GAAK,KACLC,GAAY,KACZC,GAAU,KACVC,GAAK,KACLC,GAAM,KACNC,GAAO,KAEPC,GAAQ,EAERC,IAEFpV,SAAUiV,GACV5V,UAAU,EAEVx2B,QAAS,WAAY,UAAW,gBAAiB,iBAEjD/D,KAAM,WAEJ,GAAIuwC,GAAUpxC,KAAKyF,WAAWlB,MAAM,sBACpC,IAAI6sC,EAAS,CACX,GAAIC,GAAUD,EAAQ,GAAG7sC,MAAM,gBAC3B8sC,IACFrxC,KAAKsD,SAAW+tC,EAAQ,GAAG1vC,OAC3B3B,KAAK6uC,MAAQwC,EAAQ,GAAG1vC,QAExB3B,KAAK6uC,MAAQuC,EAAQ,GAAGzvC,OAE1B3B,KAAKyF,WAAa2rC,EAAQ,GAG5B,IAAKpxC,KAAK6uC,MAER,WADkCztC,IAAK,6BAA+BpB,KAAK87B,WAAWnP,IAAM,wBAA8B3sB,KAAK4H,GAKjI5H,MAAK8lB,GAAK,eAAgBorB,EAQ1B,IAAI5xB,GAAMtf,KAAKyP,GAAGsU,OAClB/jB,MAAKsxC,UAAoB,WAARhyB,GAA4B,aAARA,IAAsD,WAA/Btf,KAAKyP,GAAGyR,WAAW6C,QAG/E/jB,KAAKob,MAAQ4I,GAAa,eAC1BhkB,KAAK4kB,IAAMZ,GAAa,aACxBniB,EAAQ7B,KAAKyP,GAAIzP,KAAK4kB,KACtBpZ,EAAOxL,KAAKob,MAAOpb,KAAK4kB,KAGxB5kB,KAAKgf,MAAQ3c,OAAO2a,OAAO,MAG3Bhd,KAAK2H,QAAU,GAAIosB,IAAgB/zB,KAAK4H,GAAI5H,KAAKyP,KAGnD0B,OAAQ,SAAgB5G,GACtBvK,KAAKuxC,KAAKhnC,GACVvK,KAAKwxC,YACLxxC,KAAKyxC,eAiBPF,KAAM,SAAchnC,GAElB,GAYInL,GAAGI,EAAGslB,EAAMvhB,EAAKpD,EAAOuxC,EAZxB5J,EAAOv9B,EAAK,GACZonC,EAAsB3xC,KAAK4xC,WAAa1vC,EAAS4lC,IAAS7uB,EAAO6uB,EAAM,SAAW7uB,EAAO6uB,EAAM,UAE/FlT,EAAa50B,KAAK4E,OAAOitC,QACzBC,EAAW9xC,KAAK+xC,MAChBA,EAAQ/xC,KAAK+xC,MAAQ,GAAIhrC,OAAMwD,EAAK5K,QACpCkvC,EAAQ7uC,KAAK6uC,MACbvrC,EAAWtD,KAAKsD,SAChB8X,EAAQpb,KAAKob,MACbwJ,EAAM5kB,KAAK4kB,IACXgiB,EAAahmB,EAAMxF,GACnB2Z,GAAQ+c,CAOZ,KAAK1yC,EAAI,EAAGI,EAAI+K,EAAK5K,OAAQP,EAAII,EAAGJ,IAClC0oC,EAAOv9B,EAAKnL,GACZmE,EAAMouC,EAAsB7J,EAAKE,KAAO,KACxC7nC,EAAQwxC,EAAsB7J,EAAKC,OAASD,EAC5C4J,GAAaxvC,EAAS/B,GACtB2kB,GAAQiQ,GAAQ/0B,KAAKgyC,cAAc7xC,EAAOf,EAAGmE,GACzCuhB,GAEFA,EAAKmtB,QAAS,EAEdntB,EAAKhd,MAAMinC,OAAS3vC,EAEhBmE,IACFuhB,EAAKhd,MAAMkgC,KAAOzkC,GAGhBD,IACFwhB,EAAKhd,MAAMxE,GAAoB,OAARC,EAAeA,EAAMnE,IAI1Cw1B,GAAc+c,GAAuBD,IACvC5pB,GAAkB,WAChBhD,EAAKhd,MAAM+mC,GAAS1uC,MAKxB2kB,EAAO9kB,KAAKgd,OAAO7c,EAAO0uC,EAAOzvC,EAAGmE,GACpCuhB,EAAKotB,OAASnd,GAEhBgd,EAAM3yC,GAAK0lB,EACPiQ,GACFjQ,EAAKtZ,OAAOoZ,EAKhB,KAAImQ,EAAJ,CAOA,GAAIod,GAAe,EACfC,EAAeN,EAASnyC,OAASoyC,EAAMpyC,MAK3C,KADAK,KAAK4H,GAAG8iB,eAAgB,EACnBtrB,EAAI,EAAGI,EAAIsyC,EAASnyC,OAAQP,EAAII,EAAGJ,IACtC0lB,EAAOgtB,EAAS1yC,GACX0lB,EAAKmtB,SACRjyC,KAAKqyC,iBAAiBvtB,GACtB9kB,KAAKoR,OAAO0T,EAAMqtB,IAAgBC,EAAcxL,GAGpD5mC,MAAK4H,GAAG8iB,eAAgB,EACpBynB,IACFnyC,KAAK4H,GAAGgiB,UAAY5pB,KAAK4H,GAAGgiB,UAAU5iB,OAAO,SAAUsrC,GACrD,MAAOA,GAAEziB,SAMb,IAAI0iB,GAAYC,EAAQC,EACpBC,EAAiB,CACrB,KAAKtzC,EAAI,EAAGI,EAAIuyC,EAAMpyC,OAAQP,EAAII,EAAGJ,IACnC0lB,EAAOitB,EAAM3yC,GAEbmzC,EAAaR,EAAM3yC,EAAI,GACvBozC,EAASD,EAAaA,EAAWI,UAAYJ,EAAWK,cAAgBL,EAAW3tB,KAAO2tB,EAAW1xB,KAAOzF,EACxG0J,EAAKmtB,SAAWntB,EAAK6tB,WACvBF,EAAcre,GAAatP,EAAM1J,EAAOpb,KAAK8lB,IACzC2sB,IAAgBF,GAAgBE,GAGpCre,GAAaqe,EAAar3B,EAAOpb,KAAK8lB,MAAQysB,GAC5CvyC,KAAK6yC,KAAK/tB,EAAM0tB,IAKlBxyC,KAAK+lC,OAAOjhB,EAAM4tB,IAAkBF,EAAQ5L,GAE9C9hB,EAAKmtB,OAASntB,EAAKotB,OAAQ,IAc/Bl1B,OAAQ,SAAgB7c,EAAO0uC,EAAO94B,EAAOxS,GAC3C,GAAIyG,GAAOhK,KAAKmjC,MAEZ2P,EAAc9yC,KAAK6qB,QAAU7qB,KAAK4H,GAClCE,EAAQzF,OAAO2a,OAAO81B,EAE1BhrC,GAAM4hB,MAAQrnB,OAAO2a,OAAO81B,EAAYppB,OACxC5hB,EAAM6hB,KAAOtnB,OAAO2a,OAAO81B,EAAYnpB,MAEvC7hB,EAAM2Y,QAAUqyB,EAEhBhrC,EAAM8mC,YAAc5uC,KAIpB8nB,GAAkB,WAChBe,GAAe/gB,EAAO+mC,EAAO1uC,KAE/B0oB,GAAe/gB,EAAO,SAAUiO,GAC5BxS,EACFslB,GAAe/gB,EAAO,OAAQvE,GACrBuE,EAAMkgC,MAEfvsB,EAAI3T,EAAO,OAAQ,MAEjB9H,KAAKsD,UACPulB,GAAe/gB,EAAO9H,KAAKsD,SAAkB,OAARC,EAAeA,EAAMwS,EAE5D,IAAI+O,GAAO9kB,KAAK2H,QAAQqV,OAAOhT,EAAMlC,EAAO9H,KAAK8qB,MAGjD,OAFAhG,GAAKwP,MAAQt0B,KAAK8lB,GAClB9lB,KAAK+yC,UAAU5yC,EAAO2kB,EAAM/O,EAAOxS,GAC5BuhB,GAOT0sB,UAAW,WACT,GAAIhT,GAAMx+B,KAAK87B,WAAW0C,GAC1B,IAAKA,EAAL,CACA,GACI8E,GADAv7B,GAAQ/H,KAAK6qB,QAAU7qB,KAAK4H,IAAI8hB,KAE/B1pB,MAAK4xC,YAGRtO,KACAtjC,KAAK+xC,MAAMluC,QAAQ,SAAUihB,GAC3Bwe,EAAKxe,EAAKhd,MAAMkgC,MAAQzT,GAAezP,MAJzCwe,EAAOtjC,KAAK+xC,MAAM5qC,IAAIotB,IAOxBxsB,EAAKy2B,GAAO8E,IAQdmO,YAAa,WACX,GAAIzxC,KAAKsxC,SAAU,CACjB,GAAIrwB,GAASjhB,KAAKob,MAAM8F,WACpB8xB,EAAQ/xB,GAAUA,EAAOgyB,SACzBD,IACFA,EAAME,gBAcZnN,OAAQ,SAAgBjhB,EAAM/O,EAAOy8B,EAAQ5L,GACvC9hB,EAAK6tB,YACP7tB,EAAK6tB,UAAUn2B,SACfsI,EAAK6tB,UAAY,KAEnB,IAAIQ,GAAgBnzC,KAAKozC,WAAWtuB,EAAM/O,EAAO,KAAM,QACvD,IAAI6wB,GAAcuM,EAAe,CAI/B,GAAIjvB,GAASY,EAAK8tB,aACb1uB,KACHA,EAASY,EAAK8tB,cAAgB5uB,GAAa,kBAC3CE,EAAOqP,SAAWzO,GAEpBjD,EAAMqC,EAAQsuB,EACd,IAAIryB,GAAK2E,EAAK6tB,UAAYr2B,EAAY,WACpCwI,EAAK6tB,UAAY,KACjB7tB,EAAKtZ,OAAO0Y,GACZ9S,EAAO8S,IAETlY,YAAWmU,EAAIgzB,OACV,CACL,GAAI1vC,GAAS+uC,EAAO1wB,WAEfre,KAGHoe,EAAM7hB,KAAK4kB,IAAK4tB,GAChB/uC,EAASzD,KAAK4kB,KAEhBE,EAAKtZ,OAAO/H,KAahB2N,OAAQ,SAAgB0T,EAAM/O,EAAO6gB,EAAOgQ,GAC1C,GAAI9hB,EAAK6tB,UAQP,MAPA7tB,GAAK6tB,UAAUn2B,cACfsI,EAAK6tB,UAAY,KAQnB,IAAIQ,GAAgBnzC,KAAKozC,WAAWtuB,EAAM/O,EAAO6gB,EAAO,QACxD,IAAIgQ,GAAcuM,EAAe,CAC/B,GAAIhzB,GAAK2E,EAAK6tB,UAAYr2B,EAAY,WACpCwI,EAAK6tB,UAAY,KACjB7tB,EAAK1T,UAEPpF,YAAWmU,EAAIgzB,OAEfruB,GAAK1T,UAYTyhC,KAAM,SAAc/tB,EAAM0tB,GAMnBA,EAAO1wB,aACV9hB,KAAK4kB,IAAI1D,WAAW3V,YAAYvL,KAAK4kB,KAEvCE,EAAKtZ,OAAOgnC,EAAO1wB,aAAa,IAYlCixB,UAAW,SAAmB5yC,EAAO2kB,EAAM/O,EAAOxS,GAChD,GAGIuiB,GAHA8O,EAAa50B,KAAK4E,OAAOitC,QACzB7yB,EAAQhf,KAAKgf,MACb0yB,GAAaxvC,EAAS/B,EAEtBoD,IAAOqxB,GAAc8c,GACvB5rB,EAAK6O,GAAc5e,EAAOxS,EAAKpD,EAAOy0B,GACjC5V,EAAM8G,GAEe,WAAf8O,GACyB50B,KAAKqzC,cAAclzC,GAFrD6e,EAAM8G,GAAMhB,IAKdgB,EAAK9lB,KAAK8lB,GACN7M,EAAO9Y,EAAO2lB,GACE,OAAd3lB,EAAM2lB,GACR3lB,EAAM2lB,GAAMhB,EAEsB9kB,KAAKqzC,cAAclzC,GAE9CkC,OAAOsmB,aAAaxoB,GAC7Bsb,EAAItb,EAAO2lB,EAAIhB,GAEf1jB,GAAK,+FAGT0jB,EAAK6H,IAAMxsB,GAYb6xC,cAAe,SAAuB7xC,EAAO4V,EAAOxS,GAClD,GAEIuhB,GAFA8P,EAAa50B,KAAK4E,OAAOitC,QACzBH,GAAaxvC,EAAS/B,EAE1B,IAAIoD,GAAOqxB,GAAc8c,EAAW,CAClC,GAAI5rB,GAAK6O,GAAc5e,EAAOxS,EAAKpD,EAAOy0B,EAC1C9P,GAAO9kB,KAAKgf,MAAM8G,OAElBhB,GAAO3kB,EAAMH,KAAK8lB,GAKpB,OAHIhB,KAASA,EAAKmtB,QAAUntB,EAAKotB,QACGlyC,KAAKqzC,cAAclzC,GAEhD2kB,GASTutB,iBAAkB,SAA0BvtB,GAC1C,GAAI3kB,GAAQ2kB,EAAK6H,IACbiI,EAAa50B,KAAK4E,OAAOitC,QACzB/pC,EAAQgd,EAAKhd,MACbiO,EAAQjO,EAAMinC,OAGdxrC,EAAM0V,EAAOnR,EAAO,SAAWA,EAAMkgC,KACrC0J,GAAaxvC,EAAS/B,EAC1B,IAAIy0B,GAAcrxB,GAAOmuC,EAAW,CAClC,GAAI5rB,GAAK6O,GAAc5e,EAAOxS,EAAKpD,EAAOy0B,EAC1C50B,MAAKgf,MAAM8G,GAAM,SAEjB3lB,GAAMH,KAAK8lB,IAAM,KACjBhB,EAAK6H,IAAM,MAafymB,WAAY,SAAoBtuB,EAAM/O,EAAO6gB,EAAO5rB,GAClDA,GAAc,SACd,IAAIsoC,GAAQxuB,EAAKjE,KAAKR,UAClBC,EAAQgzB,GAASA,EAAMhzB,MACvBsiB,EAAOtiB,IAAUA,EAAMtV,IAASsV,EAAMizB,QAC1C,OAAO3Q,GAAOA,EAAKljC,KAAKolB,EAAM/O,EAAO6gB,GAAS7gB,EAAQnP,SAAS5G,KAAK4E,OAAOoG,IAAShL,KAAK4E,OAAO2uC,QAAS,KAQ3GC,YAAa,SAAqBrzC,GAGhC,MADAH,MAAKq4B,SAAWl4B,EACTA,GAYTszC,aAAc,SAAsBtzC,GAClC,GAAIgE,GAAQhE,GACV,MAAOA,EACF,IAAIiC,EAAcjC,GAAQ,CAM/B,IAJA,GAGIoD,GAHAmB,EAAOrC,OAAOqC,KAAKvE,GACnBf,EAAIsF,EAAK/E,OACT8mB,EAAM,GAAI1f,OAAM3H,GAEbA,KACLmE,EAAMmB,EAAKtF,GACXqnB,EAAIrnB,IACF4oC,KAAMzkC,EACNwkC,OAAQ5nC,EAAMoD,GAGlB,OAAOkjB,GAKP,MAHqB,gBAAVtmB,IAAuBoa,MAAMpa,KACtCA,EAAQs0B,GAAMt0B,IAETA,OAIXuzC,OAAQ,WAIN,GAHI1zC,KAAK87B,WAAW0C,OACjBx+B,KAAK6qB,QAAU7qB,KAAK4H,IAAI8hB,MAAM1pB,KAAK87B,WAAW0C,KAAO,MAEpDx+B,KAAK+xC,MAGP,IAFA,GACIjtB,GADA1lB,EAAIY,KAAK+xC,MAAMpyC,OAEZP,KACL0lB,EAAO9kB,KAAK+xC,MAAM3yC,GAClBY,KAAKqyC,iBAAiBvtB,GACtBA,EAAKgP,WAoFXqd,IAAKkC,cAAgB,SAAUlzC,GAC7BiB,GAAK,mCAAqCpB,KAAK87B,WAAWnP,IAAM,MAAQviB,KAAKC,UAAUlK,GAAS,iEAAuEH,KAAK4H,IAIhL,IAAI+rC,KAEF5X,SAAUgV,GACV3V,UAAU,EAEVv6B,KAAM,WACJ,GAAI4O,GAAKzP,KAAKyP,EACd,IAAKA,EAAG+kB,QAW4BpzB,GAAK,SAAWpB,KAAKyF,WAAa,gDAAsDzF,KAAK4H,IAC/H5H,KAAK4zC,SAAU,MAZA,CAEf,GAAIvvC,GAAOoL,EAAGokC,kBACVxvC,IAAoC,OAA5Bgd,EAAQhd,EAAM,YACxB+M,EAAO/M,GACPrE,KAAK8zC,OAASzvC,GAGhBrE,KAAKkkB,OAASF,GAAa,QAC3BniB,EAAQ4N,EAAIzP,KAAKkkB,UAOrB/S,OAAQ,SAAgBhR,GAClBH,KAAK4zC,UACLzzC,EACGH,KAAK8kB,MACR9kB,KAAK+lC,SAGP/lC,KAAKoR,WAIT20B,OAAQ,WACF/lC,KAAK+zC,WACP/zC,KAAK+zC,SAAS3iC,SACdpR,KAAK+zC,SAAW,MAGb/zC,KAAK2H,UACR3H,KAAK2H,QAAU,GAAIosB,IAAgB/zB,KAAK4H,GAAI5H,KAAKyP,KAEnDzP,KAAK8kB,KAAO9kB,KAAK2H,QAAQqV,OAAOhd,KAAKmjC,MAAOnjC,KAAK6qB,OAAQ7qB,KAAK8qB,OAC9D9qB,KAAK8kB,KAAKtZ,OAAOxL,KAAKkkB,SAGxB9S,OAAQ,WACFpR,KAAK8kB,OACP9kB,KAAK8kB,KAAK1T,SACVpR,KAAK8kB,KAAO,MAEV9kB,KAAK8zC,SAAW9zC,KAAK+zC,WAClB/zC,KAAKg0C,cACRh0C,KAAKg0C,YAAc,GAAIjgB,IAAgB/zB,KAAK8zC,OAAOlpB,UAAY5qB,KAAK4H,GAAI5H,KAAK8zC,SAE/E9zC,KAAK+zC,SAAW/zC,KAAKg0C,YAAYh3B,OAAOhd,KAAKmjC,MAAOnjC,KAAK6qB,OAAQ7qB,KAAK8qB,OACtE9qB,KAAK+zC,SAASvoC,OAAOxL,KAAKkkB,UAI9BwvB,OAAQ,WACF1zC,KAAK8kB,MACP9kB,KAAK8kB,KAAKgP,UAER9zB,KAAK+zC,UACP/zC,KAAK+zC,SAASjgB,YAKhBmgB,IAEFpzC,KAAM,WAEJ,GAAIwD,GAAOrE,KAAKyP,GAAGokC,kBACfxvC,IAAoC,OAA5Bgd,EAAQhd,EAAM,YACxBrE,KAAK8zC,OAASzvC,IAIlB8M,OAAQ,SAAgBhR,GACtBH,KAAKoF,MAAMpF,KAAKyP,GAAItP,GAChBH,KAAK8zC,QACP9zC,KAAKoF,MAAMpF,KAAK8zC,QAAS3zC,IAI7BiF,MAAO,SAAeqK,EAAItP,GAMxB,QAAS+zC,KACPzkC,EAAG4F,MAAM8+B,QAAUh0C,EAAQ,GAAK,OAN9BygB,EAAMnR,GACRsQ,EAAgBtQ,EAAItP,EAAQ,KAAQ+zC,EAAQl0C,KAAK4H,IAEjDssC,MAQFE,IAEFvzC,KAAM,WACJ,GAAI2G,GAAOxH,KACPyP,EAAKzP,KAAKyP,GACV4kC,EAAsB,UAAZ5kC,EAAGzE,KACb+kB,EAAO/vB,KAAK4E,OAAOmrB,KACnBie,EAAShuC,KAAK4E,OAAOopC,OACrBV,EAAWttC,KAAK4E,OAAO0oC,SASvBgH,GAAY,CAkEhB,IAjEKzK,IAAcwK,IACjBr0C,KAAKkiB,GAAG,mBAAoB,WAC1BoyB,GAAY,IAEdt0C,KAAKkiB,GAAG,iBAAkB,WACxBoyB,GAAY,EAMPvkB,GACHvoB,EAAK+sC,cAOXv0C,KAAKw0C,SAAU,EACVH,GAAYtkB,IACf/vB,KAAKkiB,GAAG,QAAS,WACf1a,EAAKgtC,SAAU,IAEjBx0C,KAAKkiB,GAAG,OAAQ,WACd1a,EAAKgtC,SAAU,EAEVhtC,EAAKsjB,QAAStjB,EAAKsjB,MAAMkI,UAC5BxrB,EAAKitC,iBAMXz0C,KAAKu0C,SAAWv0C,KAAKy0C,YAAc,WACjC,IAAIH,GAAc9sC,EAAKy7B,OAAvB,CAGA,GAAIlhC,GAAMisC,GAAUqG,EAAUj6B,EAAS3K,EAAGtP,OAASsP,EAAGtP,KACtDqH,GAAKwR,IAAIjX,GAGTP,GAAS,WACHgG,EAAKy7B,SAAWz7B,EAAKgtC,SACvBhtC,EAAK2J,OAAO3J,EAAK+oC,SAASpwC,WAM5BmtC,IACFttC,KAAKu0C,SAAW14B,EAAU7b,KAAKu0C,SAAUjH,IAa3CttC,KAAK00C,UAA8B,kBAAXC,QACpB30C,KAAK00C,UAAW,CAClB,GAAI3rC,GAAS4rC,OAAO3xC,GAAGkf,GAAK,KAAO,MACnCyyB,QAAOllC,GAAI1G,GAAQ,SAAU/I,KAAKy0C,aAC7B1kB,GACH4kB,OAAOllC,GAAI1G,GAAQ,QAAS/I,KAAKu0C,cAGnCv0C,MAAKkiB,GAAG,SAAUliB,KAAKy0C,aAClB1kB,GACH/vB,KAAKkiB,GAAG,QAASliB,KAAKu0C,WAKrBxkB,GAAQpN,KACX3iB,KAAKkiB,GAAG,MAAO,WACb1gB,GAASgG,EAAK+sC,YAEhBv0C,KAAKkiB,GAAG,QAAS,SAAUvjB,GACP,KAAdA,EAAE62B,SAAgC,IAAd72B,EAAE62B,SACxBhuB,EAAK+sC,eAMP9kC,EAAGkS,aAAa,UAA2B,aAAflS,EAAGsU,SAA0BtU,EAAGtP,MAAMwB,UACpE3B,KAAK40C,UAAY50C,KAAKu0C,WAI1BpjC,OAAQ,SAAgBhR,GAGtBA,EAAQga,EAAUha,GACdA,IAAUH,KAAKyP,GAAGtP,QAAOH,KAAKyP,GAAGtP,MAAQA,IAG/CuzC,OAAQ,WACN,GAAIjkC,GAAKzP,KAAKyP,EACd,IAAIzP,KAAK00C,UAAW,CAClB,GAAI3rC,GAAS4rC,OAAO3xC,GAAGof,IAAM,MAAQ,QACrCuyB,QAAOllC,GAAI1G,GAAQ,SAAU/I,KAAKu0C,UAClCI,OAAOllC,GAAI1G,GAAQ,QAAS/I,KAAKu0C,aAKnCM,IAEFh0C,KAAM,WACJ,GAAI2G,GAAOxH,KACPyP,EAAKzP,KAAKyP,EAEdzP,MAAK60B,SAAW,WAEd,GAAIplB,EAAGjM,eAAe,UACpB,MAAOiM,GAAGwlB,MAEZ,IAAIlzB,GAAM0N,EAAGtP,KAIb,OAHIqH,GAAK5C,OAAOopC,SACdjsC,EAAMqY,EAASrY,IAEVA,GAGT/B,KAAKu0C,SAAW,WACd/sC,EAAKwR,IAAIxR,EAAKqtB,aAEhB70B,KAAKkiB,GAAG,SAAUliB,KAAKu0C,UAEnB9kC,EAAGkS,aAAa,aAClB3hB,KAAK40C,UAAY50C,KAAKu0C,WAI1BpjC,OAAQ,SAAgBhR,GACtBH,KAAKyP,GAAGqlC,QAAUr4B,EAAWtc,EAAOH,KAAK60B,cAIzCkgB,IAEFl0C,KAAM,WACJ,GAAIyN,GAAQtO,KAERwH,EAAOxH,KACPyP,EAAKzP,KAAKyP,EAGdzP,MAAKkzC,YAAc,WACb1rC,EAAK+oC,UACP/oC,EAAK2J,OAAO3J,EAAK+oC,SAASpiC,OAK9B,IAAI6mC,GAAWh1C,KAAKg1C,SAAWvlC,EAAGkS,aAAa,WAG/C3hB,MAAKu0C,SAAW,WACd,GAAIp0C,GAAQ00B,GAASplB,EAAIulC,EACzB70C,GAAQqH,EAAK5C,OAAOopC,OAAS7pC,GAAQhE,GAASA,EAAMgH,IAAIiT,GAAYA,EAASja,GAASA,EACtFqH,EAAKwR,IAAI7Y,IAEXH,KAAKkiB,GAAG,SAAUliB,KAAKu0C,SAGvB,IAAIU,GAAYpgB,GAASplB,EAAIulC,GAAU,IACnCA,GAAYC,EAAUt1C,SAAWq1C,GAA0B,OAAdC,KAC/Cj1C,KAAK40C,UAAY50C,KAAKu0C,UAOxBv0C,KAAK4H,GAAGs6B,IAAI,gBAAiB,WAC3B1gC,GAAS8M,EAAM4kC,gBAInB/hC,OAAQ,SAAgBhR,GACtB,GAAIsP,GAAKzP,KAAKyP,EACd,KAAKmR,EAAMnR,GACT,MAAOjO,IAASxB,KAAKkzC,YAEvBzjC,GAAGylC,gBAKH,KAJA,GAGI/0B,GAAIpe,EAHJ+yB,EAAQ90B,KAAKg1C,UAAY7wC,GAAQhE,GACjC4C,EAAU0M,EAAG1M,QACb3D,EAAI2D,EAAQpD,OAETP,KACL+gB,EAAKpd,EAAQ3D,GACb2C,EAAMoe,EAAG3c,eAAe,UAAY2c,EAAG8U,OAAS9U,EAAGhgB,MAEnDggB,EAAG6U,SAAWF,EAAQI,GAAU/0B,EAAO4B,MAAY0a,EAAWtc,EAAO4B,IAKzE2xC,OAAQ,WAEN1zC,KAAK4H,GAAG28B,KAAK,gBAAiBvkC,KAAKkzC,eAiDnCiC,IAEFt0C,KAAM,WAQJ,QAASu0C,KACP,GAAIrzC,GAAM0N,EAAGqlC,OACb,OAAI/yC,IAAO0N,EAAGjM,eAAe,cACpBiM,EAAG4lC,YAEPtzC,GAAO0N,EAAGjM,eAAe,eACrBiM,EAAG6lC,YAELvzC,EAfT,GAAIyF,GAAOxH,KACPyP,EAAKzP,KAAKyP,EAEdzP,MAAK60B,SAAW,WACd,MAAOplB,GAAGjM,eAAe,UAAYiM,EAAGwlB,OAASztB,EAAK5C,OAAOopC,OAAS5zB,EAAS3K,EAAGtP,OAASsP,EAAGtP,OAchGH,KAAKu0C,SAAW,WACd,GAAIvB,GAAQxrC,EAAK+oC,SAASpwC,KAC1B,IAAIgE,GAAQ6uC,GAAQ,CAClB,GAAIjxC,GAAMyF,EAAKqtB,UACXplB,GAAGqlC,QACDjwC,EAAQmuC,EAAOjxC,GAAO,GACxBixC,EAAM7tC,KAAKpD,GAGbixC,EAAM3W,QAAQt6B,OAGhByF,GAAKwR,IAAIo8B,MAIbp1C,KAAKkiB,GAAG,SAAUliB,KAAKu0C,UACnB9kC,EAAGkS,aAAa,aAClB3hB,KAAK40C,UAAY50C,KAAKu0C,WAI1BpjC,OAAQ,SAAgBhR,GACtB,GAAIsP,GAAKzP,KAAKyP,EACVtL,IAAQhE,GACVsP,EAAGqlC,QAAUjwC,EAAQ1E,EAAOH,KAAK60B,eAE7BplB,EAAGjM,eAAe,cACpBiM,EAAGqlC,QAAUr4B,EAAWtc,EAAOsP,EAAG4lC,YAElC5lC,EAAGqlC,UAAY30C,IAMnBiiC,IACF33B,KAAM2pC,GACNS,MAAOA,GACPE,OAAQA,GACRI,SAAUA,IAGRnC,IAEFjX,SAAU0U,GACVngB,QAAQ,EACR8R,SAAUA,GACVx9B,QAAS,OAAQ,SAAU,YAa3B/D,KAAM,WAEJb,KAAKu1C,eACDv1C,KAAKw1C,UAAYx1C,KAAKy1C,UACUr0C,GAAK,2DAAkEpB,KAAK87B,WAAWnP,IAAM,wEAA8E3sB,KAAK4H,GAEpN,IAEIF,GAFA+H,EAAKzP,KAAKyP,GACV6P,EAAM7P,EAAGsU,OAEb,IAAY,UAARzE,EACF5X,EAAU06B,GAAS3yB,EAAGzE,OAASo3B,GAAS33B,SACnC,IAAY,WAAR6U,EACT5X,EAAU06B,GAAS2S,WACd,CAAA,GAAY,aAARz1B,EAIT,WADkCle,IAAK,0CAA4Cke,EAAKtf,KAAK4H,GAF7FF,GAAU06B,GAAS33B,KAKrBgF,EAAGwjC,UAAYjzC,KACf0H,EAAQ7G,KAAKnB,KAAKM,MAClBA,KAAKmR,OAASzJ,EAAQyJ,OACtBnR,KAAK01C,QAAUhuC,EAAQgsC,QAOzB6B,aAAc,WACZ,GAAIh4B,GAAUvd,KAAKud,OACnB,IAAKA,EAEL,IADA,GAAIne,GAAIme,EAAQ5d,OACTP,KAAK,CACV,GAAI4H,GAAS6e,GAAa7lB,KAAK4H,GAAGxE,SAAU,UAAWma,EAAQne,GAAG8I,OAC5C,kBAAXlB,IAAyBA,EAAO69B,QACzC7kC,KAAKw1C,SAAU,GAEbxuC,EAAO29B,QACT3kC,KAAKy1C,UAAW,KAKtB/B,OAAQ,WACN1zC,KAAKyP,GAAGwjC,UAAY,KACpBjzC,KAAK01C,SAAW11C,KAAK01C,YAKrBpgB,IACFqgB,IAAK,GACLC,IAAK,EACLC,MAAO,GACPC,MAAO,GACP7kC,UAAW,EAAG,IACd8kC,GAAI,GACJ5b,KAAM,GACN6b,MAAO,GACPC,KAAM,IA+CJC,IAEFna,SAAUyU,GACV2F,iBAAiB,EACjB7gB,SAAUA,GAEVz0B,KAAM,WAEJ,GAAwB,WAApBb,KAAKyP,GAAGsU,SAAqC,SAAb/jB,KAAKwd,IAAgB,CACvD,GAAIhW,GAAOxH,IACXA,MAAKo2C,WAAa,WAChBl0B,EAAG1a,EAAKiI,GAAG4mC,cAAe7uC,EAAKgW,IAAKhW,EAAKE,QAASF,EAAKk3B,UAAU4X,UAEnEt2C,KAAKkiB,GAAG,OAAQliB,KAAKo2C,cAIzBjlC,OAAQ,SAAgBzJ,GAOtB,GAJK1H,KAAK87B,WAAWnP,MACnBjlB,EAAU,cAGW,kBAAZA,GAET,WADkCtG,IAAK,QAAUpB,KAAKwd,IAAM,KAAOxd,KAAKyF,WAAa,mCAA0CiC,EAAS1H,KAAK4H,GAK3I5H,MAAK0+B,UAAU6X,OACjB7uC,EAAU+tB,GAAW/tB,IAEnB1H,KAAK0+B,UAAU8X,UACjB9uC,EAAUiuB,GAAcjuB,IAEtB1H,KAAK0+B,UAAUl3B,OACjBE,EAAUmuB,GAAWnuB,GAGvB,IAAIhD,GAAOrC,OAAOqC,KAAK1E,KAAK0+B,WAAW13B,OAAO,SAAUzD,GACtD,MAAe,SAARA,GAA0B,YAARA,GAA6B,SAARA,GAA0B,YAARA,GAE9DmB,GAAK/E,SACP+H,EAAUytB,GAAUztB,EAAShD,IAG/B1E,KAAKy2C,QACLz2C,KAAK0H,QAAUA,EAEX1H,KAAKo2C,WACPp2C,KAAKo2C,aAELl0B,EAAGliB,KAAKyP,GAAIzP,KAAKwd,IAAKxd,KAAK0H,QAAS1H,KAAK0+B,UAAU4X,UAIvDG,MAAO,WACL,GAAIhnC,GAAKzP,KAAKo2C,WAAap2C,KAAKyP,GAAG4mC,cAAgBr2C,KAAKyP,EACpDzP,MAAK0H,SACP0a,EAAI3S,EAAIzP,KAAKwd,IAAKxd,KAAK0H,UAI3BgsC,OAAQ,WACN1zC,KAAKy2C,UAILngB,IAAY,WAAY,QAAS,QACjCE,IAAiB,SAAU,MAAO,MAClCkgB,GAAc,gBACdzgB,GAAY5zB,OAAO2a,OAAO,MAE1BoZ,GAAS,KAET/gB,IAEFnR,MAAM,EAENiN,OAAQ,SAAgBhR,GACD,gBAAVA,GACTH,KAAKyP,GAAG4F,MAAMshC,QAAUx2C,EACfgE,GAAQhE,GACjBH,KAAK42C,aAAaz2C,EAAM02C,OAAOphC,OAE/BzV,KAAK42C,aAAaz2C,QAItBy2C,aAAc,SAAsBz2C,GAGlC,GACI+H,GAAMnG,EADNid,EAAQhf,KAAKgf,QAAUhf,KAAKgf,SAEhC,KAAK9W,IAAQ8W,GACL9W,IAAQ/H,KACZH,KAAK82C,aAAa5uC,EAAM,YACjB8W,GAAM9W,GAGjB,KAAKA,IAAQ/H,GACX4B,EAAM5B,EAAM+H,GACRnG,IAAQid,EAAM9W,KAChB8W,EAAM9W,GAAQnG,EACd/B,KAAK82C,aAAa5uC,EAAMnG,KAK9B+0C,aAAc,SAAsB9gB,EAAM71B,GAExC,GADA61B,EAAOD,GAAUC,GAIjB,GADa,MAAT71B,IAAeA,GAAS,IACxBA,EAAO,CACT,GAAI42C,GAAcL,GAAYrvC,KAAKlH,GAAS,YAAc,EACtD42C,IAGA31C,GAAK,6HAEPjB,EAAQA,EAAM0B,QAAQ60C,GAAa,IAAI/0C,OACvC3B,KAAKyP,GAAG4F,MAAM2hC,YAAYhhB,EAAKO,MAAOp2B,EAAO42C,IAE7C/2C,KAAKyP,GAAG4F,MAAM2gB,EAAKE,OAAS/1B,MAG9BH,MAAKyP,GAAG4F,MAAM2gB,EAAKE,OAAS,KA4D9B+gB,GAAU,+BACVC,GAAU,UAGVC,GAAyB,sGAGzBC,GAAkB,qCAGlBC,GAAmB,6CAInBC,IACFn3C,MAAO,SACPo3C,aAAc,aACdC,cAAe,eAGbC,IAEF1b,SAAU2U,GAEV7vC,KAAM,WACJ,GAAIk2B,GAAO/2B,KAAKwd,IACZ8B,EAAMtf,KAAKyP,GAAGsU,OAEbgT,KACH/2B,KAAKkE,MAAO,EAGd,IAAI43B,GAAa97B,KAAK87B,WAClB3e,EAAS2e,EAAW6D,MACxB,IAAIxiB,EAAQ,CAEN2e,EAAW4D,aACb1/B,KAAKyF,WAAa8Z,EAAYpC,EAAQnd,KAAK6qB,QAAU7qB,KAAK4H,MAIxDuvC,GAAuB9vC,KAAK0vB,IAAkB,SAATA,IAA4B,YAARzX,GAA6B,SAARA,MAC9Cle,GAAK21B,EAAO,KAAO+E,EAAWnP,IAAM,yFAAoG3sB,KAAK4H,IAC/K5H,KAAKyP,GAAG+R,gBAAgBuV,GACxB/2B,KAAK4zC,SAAU,EAKf,IAAIjnB,GAAMoK,EAAO,KAAO+E,EAAWnP,IAAM,KAE5B,SAAToK,GACF31B,GAAKurB,EAAM,qFAA2F3sB,KAAK4H,IAIhG,UAATmvB,GACF31B,GAAKurB,EAAM,8HAAyI3sB,KAAK4H,MAMjKuJ,OAAQ,SAAgBhR,GACtB,IAAIH,KAAK4zC,QAAT,CAGA,GAAI7c,GAAO/2B,KAAKwd,GACZxd,MAAKwd,IACPxd,KAAK82C,aAAa/f,EAAM52B,GAExBH,KAAK42C,aAAaz2C,SAKtBy2C,aAAcvhC,GAAMuhC,aAEpBE,aAAc,SAAsB/f,EAAM52B,GACxC,GAAIsP,GAAKzP,KAAKyP,GACVkwB,EAAS3/B,KAAK87B,WAAW6D,MAI7B,IAHI3/B,KAAK0+B,UAAUxI,QACjBa,EAAOpc,EAASoc,KAEb4I,GAAUyX,GAAgB/vC,KAAK0vB,IAASA,IAAQtnB,GAAI,CACvD,GAAIioC,GAAqB,UAAT3gB,GAA4B,MAAT52B,EACjC,GAAaA,CAEXsP,GAAGsnB,KAAU2gB,IACfjoC,EAAGsnB,GAAQ2gB,GAIf,GAAIC,GAAYL,GAAWvgB,EAC3B,KAAK4I,GAAUgY,EAAW,CACxBloC,EAAGkoC,GAAax3C,CAEhB,IAAI6yC,GAAQvjC,EAAGwjC,SACXD,IACFA,EAAMuB,WAIV,MAAa,UAATxd,GAAmC,aAAftnB,EAAGsU,YACzBtU,GAAG+R,gBAAgBuV,QAIjBsgB,GAAiBhwC,KAAK0vB,GACxBtnB,EAAGoT,aAAakU,EAAM52B,EAAQ,OAAS,SACrB,MAATA,GAAiBA,KAAU,EACvB,UAAT42B,GAGEtnB,EAAG4Q,YACLlgB,GAAS,IAAMsP,EAAG4Q,UAAUyF,GAAK,eAEnCrD,EAAShT,EAAItP,IACJ+2C,GAAQ7vC,KAAK0vB,GACtBtnB,EAAGmoC,eAAeX,GAASlgB,EAAM52B,KAAU,EAAO,GAAKA,GAEvDsP,EAAGoT,aAAakU,EAAM52B,KAAU,EAAO,GAAKA,GAG9CsP,EAAG+R,gBAAgBuV,MAKrBtnB,IAEFssB,SAAU6U,GAEV/vC,KAAM,WAEJ,GAAKb,KAAKwd,IAAV,CAGA,GAAIsI,GAAK9lB,KAAK8lB,GAAKnL,EAAS3a,KAAKwd,KAC7B8lB,GAAQtjC,KAAK6qB,QAAU7qB,KAAK4H,IAAI+hB;AAChC1Q,EAAOqqB,EAAMxd,GACfwd,EAAKxd,GAAM9lB,KAAKyP,GAEhBoZ,GAAeya,EAAMxd,EAAI9lB,KAAKyP,MAIlCikC,OAAQ,WACN,GAAIpQ,IAAQtjC,KAAK6qB,QAAU7qB,KAAK4H,IAAI+hB,IAChC2Z,GAAKtjC,KAAK8lB,MAAQ9lB,KAAKyP,KACzB6zB,EAAKtjC,KAAK8lB,IAAM,QAKlB0Y,IACF39B,KAAM,WAC8BO,GAAK,SAAWpB,KAAKwd,IAAM,iDAAwDxd,KAAKyP,GAAGsU,QAAQhY,cAAgB,KAAM/L,KAAK4H,MAIhKiwC,IACFh3C,KAAM,WACJ,GAAI4O,GAAKzP,KAAKyP,EACdzP,MAAK4H,GAAGq/B,MAAM,oBAAqB,WACjCx3B,EAAG+R,gBAAgB,eAMrByc,IACFxzB,KAAMukC,GACN9vB,KAAMA,GACN44B,MAAO3G,GACP4G,KAAMpE,GACNM,KAAMA,GACNjB,MAAOA,GACP9wB,GAAIg0B,GACJr1C,KAAM42C,GACNhoC,GAAIA,GACJ+uB,IAAKA,GACLqZ,MAAOA,IAGLG,IAEF9zC,MAAM,EAENiN,OAAQ,SAAgBhR,GACjBA,EAEuB,gBAAVA,GAChBH,KAAKyiB,SAAStiB,EAAMwB,OAAOoE,MAAM,QAEjC/F,KAAKyiB,SAASgU,GAAYt2B,IAJ1BH,KAAKi4C,WAQTx1B,SAAU,SAAkBtiB,GAC1BH,KAAKi4C,QAAQ93C,EACb,KAAK,GAAIf,GAAI,EAAGI,EAAIW,EAAMR,OAAQP,EAAII,EAAGJ,IAAK,CAC5C,GAAI2C,GAAM5B,EAAMf,EACZ2C,IACFqD,GAAMpF,KAAKyP,GAAI1N,EAAK+gB,GAGxB9iB,KAAKk4C,SAAW/3C,GAGlB83C,QAAS,SAAiB93C,GACxB,GAAI+3C,GAAWl4C,KAAKk4C,QACpB,IAAKA,EAEL,IADA,GAAI94C,GAAI84C,EAASv4C,OACVP,KAAK,CACV,GAAImE,GAAM20C,EAAS94C,KACde,GAASA,EAAM0E,QAAQtB,GAAO,IACjC6B,GAAMpF,KAAKyP,GAAIlM,EAAK0f,OA+DxBlM,IAEFglB,SAAU8U,GAEVjsC,QAAS,aAAc,kBAAmB,mBAY1C/D,KAAM,WACCb,KAAKyP,GAAG+kB,QAkCuBpzB,GAAK,2BAA6BpB,KAAKyF,WAAa,iCAAwCzF,KAAKyP,KAhCnIzP,KAAKm4C,UAAYn4C,KAAK4E,OAAOuzC,UACzBn4C,KAAKm4C,YACPn4C,KAAKgf,UAGHhf,KAAK4E,OAAOwzC,iBAEdp4C,KAAKo4C,eAAiBj1B,GAAenjB,KAAKyP,IAAI,IAGhDzP,KAAKq4C,mBAAqBr4C,KAAKs4C,UAAY,KAE3Ct4C,KAAKu4C,gBAAkB,EACvBv4C,KAAKw4C,iBAAmB,KAExBx4C,KAAKkkB,OAASF,GAAa,eAC3BniB,EAAQ7B,KAAKyP,GAAIzP,KAAKkkB,QAKtBlkB,KAAKyP,GAAG+R,gBAAgB,MACxBxhB,KAAKyP,GAAG+R,gBAAgB,OAEpBxhB,KAAK87B,WAAW0C,KAClBx+B,KAAKyP,GAAG+R,gBAAgB,SAAW1G,EAAU9a,KAAK87B,WAAW0C,MAG3Dx+B,KAAK0F,SACP1F,KAAKy4C,aAAaz4C,KAAKyF,cAY7B0L,OAAQ,SAAgBhR,GACjBH,KAAK0F,SACR1F,KAAKy4C,aAAat4C,IAiBtBs4C,aAAc,SAAsBt4C,EAAOsB,GAEzC,GADAzB,KAAK04C,oBACAv4C,EAKE,CACL,GAAIqH,GAAOxH,IACXA,MAAK24C,iBAAiBx4C,EAAO,WAC3BqH,EAAKoxC,eAAen3C,SANtBzB,MAAK64C,SAAQ,GACb74C,KAAKoR,OAAOpR,KAAK84C,QAASr3C,GAC1BzB,KAAK84C,QAAU,MAiBnBH,iBAAkB,SAA0Bx4C,EAAOsB,GACjD,GAAI+F,GAAOxH,IACXA,MAAKq4C,mBAAqB/7B,EAAY,SAAUg8B,GAC9C9wC,EAAKuxC,cAAgBT,EAAUv1C,QAAQmF,OAA0B,gBAAV/H,GAAqBA,EAAQ,MACpFqH,EAAK8wC,UAAYA,EACjB72C,MAEFzB,KAAK4H,GAAGk9B,kBAAkB3kC,EAAOH,KAAKq4C,qBAYxCO,eAAgB,SAAwBn3C,GAEtCzB,KAAK64C,SAAQ,EACb,IAAIrxC,GAAOxH,KACPg5C,EAAgBh5C,KAAKs4C,UAAUv1C,QAAQ+pC,SACvCmM,EAASj5C,KAAKk5C,YACdC,EAAen5C,KAAKo5C,OACpBJ,KAAkBC,GACpBj5C,KAAKq5C,WAAaF,EAClBxiB,GAAkBqiB,EAAeG,EAAc,WACzC3xC,EAAK6xC,aAAeF,IAGxB3xC,EAAK6xC,WAAa,KAClB7xC,EAAK4Y,WAAW+4B,EAAc13C,QAI5Bw3C,GACFE,EAAanuB,aAEfhrB,KAAKogB,WAAW+4B,EAAc13C,KAUlCi3C,kBAAmB,WACb14C,KAAKq4C,qBACPr4C,KAAKq4C,mBAAmB77B,SACxBxc,KAAKq4C,mBAAqB,OAa9Be,MAAO,SAAeE,GACpB,GAAIL,GAASj5C,KAAKk5C,WAClB,IAAID,EACF,MAAOA,EAET,IAAIj5C,KAAKs4C,UAAW,CAElB,GAAIv1C,IACFmF,KAAMlI,KAAK+4C,cACXtpC,GAAI6V,GAAUtlB,KAAKyP,IACnBnK,SAAUtF,KAAKo4C,eAIfn3B,OAAQjhB,KAAKmjC,OAASnjC,KAAK4H,GAG3Bg8B,iBAAkB5jC,KAAKo4C,eACvB/nC,KAAMrQ,KAAK87B,WAAW0C,IACtBvD,cAAc,EACdse,cAAev5C,KAAKu5C,cAIpB3uB,SAAU5qB,KAAK4H,GAKfijB,OAAQ7qB,KAAK6qB,OAKbC,MAAO9qB,KAAK8qB,MAKVwuB,IACF7jC,EAAO1S,EAASu2C,EAElB,IAAIj2B,GAAQ,GAAIrjB,MAAKs4C,UAAUv1C,EAQ/B,OAPI/C,MAAKm4C,YACPn4C,KAAKgf,MAAMhf,KAAKs4C,UAAUtkB,KAAO3Q,GAGGrjB,KAAKyP,GAAGkS,aAAa,eAAiB0B,EAAM6G,aAChF9oB,GAAK,+DAAsEiiB,EAAMjgB,SAASkC,SAAU+d,GAE/FA,IAUX61B,UAAW,WACT,MAAOl5C,MAAKm4C,WAAan4C,KAAKgf,MAAMhf,KAAKs4C,UAAUtkB,MAUrD6kB,QAAS,SAAiBW,GACpBx5C,KAAKq5C,aACFr5C,KAAKm4C,WACRn4C,KAAKq5C,WAAWhV,WAElBrkC,KAAKq5C,WAAa,KAEpB,IAAIh2B,GAAQrjB,KAAK84C,OACjB,QAAKz1B,GAASrjB,KAAKm4C,eACb90B,IAEFA,EAAMo2B,WAAY,EAClBp2B,EAAM2H,YAAW,SAOrB3H,GAAMghB,UAAS,EAAOmV,IAUxBpoC,OAAQ,SAAgBiS,EAAO5hB,GAC7B,GAAI02C,GAAYn4C,KAAKm4C,SACrB,IAAI90B,EAAO,CAKTrjB,KAAKu4C,kBACLv4C,KAAKw4C,iBAAmB/2C,CACxB,IAAI+F,GAAOxH,IACXqjB,GAAMgZ,QAAQ,WACZ70B,EAAK+wC,kBACAJ,GAAW90B,EAAM4gB,YACjBz8B,EAAK+wC,iBAAmB/wC,EAAKgxC,mBAChChxC,EAAKgxC,mBACLhxC,EAAKgxC,iBAAmB,YAGnB/2C,IACTA,KAYJ2e,WAAY,SAAoB3c,EAAQhC,GACtC,GAAI+F,GAAOxH,KACPmV,EAAUnV,KAAK84C,OAKnB,QAHI3jC,IAASA,EAAQskC,WAAY,GACjCh2C,EAAOg2C,WAAY,EACnBz5C,KAAK84C,QAAUr1C,EACP+D,EAAK5C,OAAO80C,gBAClB,IAAK,SACHj2C,EAAOijC,QAAQl/B,EAAK0c,OAAQ,WAC1B1c,EAAK4J,OAAO+D,EAAS1T,IAEvB,MACF,KAAK,SACH+F,EAAK4J,OAAO+D,EAAS,WACnB1R,EAAOijC,QAAQl/B,EAAK0c,OAAQziB,IAE9B,MACF,SACE+F,EAAK4J,OAAO+D,GACZ1R,EAAOijC,QAAQl/B,EAAK0c,OAAQziB,KAQlCiyC,OAAQ,WAKN,GAJA1zC,KAAK04C,oBAEL14C,KAAK64C,UAED74C,KAAKgf,MAAO,CACd,IAAK,GAAIzb,KAAOvD,MAAKgf,MACnBhf,KAAKgf,MAAMzb,GAAK8gC,UAElBrkC,MAAKgf,MAAQ,QA0BfmY,GAAmBj2B,GAAO6qC,kBAC1B9U,MAGAC,GAAY,sBACZM,GAAiB,uDAgXjBmiB,GAAez4C,GAAO6qC,kBAEtB7T,IAEFr3B,KAAM,WACJ,GAAIwiB,GAAQrjB,KAAK4H,GACbqZ,EAASoC,EAAMuH,SAEfoL,EAAOh2B,KAAK87B,WAAW9F,KACvB4jB,EAAW5jB,EAAKxK,KAChBquB,EAAY7jB,EAAKyB,WACjBnH,EAAS0F,EAAKpK,OAAS+tB,GAAatiB,QAEpCyiB,EAAgB95C,KAAK85C,cAAgB,GAAIrqB,IAAQxO,EAAQ44B,EAAW,SAAU93C,GAChF42B,GAAWtV,EAAO2S,EAAMj0B,KAExBuuB,OAAQA,EACR/S,QAASyY,EAAKzY,QAGdzV,MAAO9H,KAAK6qB,QAOd,IAHAkN,GAAS1U,EAAO2S,EAAM8jB,EAAc35C,OAGhCmwB,EAAQ,CAGV,GAAI9oB,GAAOxH,IACXqjB,GAAM4jB,MAAM,mBAAoB,WAC9Bz/B,EAAKuyC,aAAe,GAAItqB,IAAQpM,EAAOu2B,EAAU,SAAU73C,GACzD+3C,EAAc9gC,IAAIjX,KAKlB0jC,MAAM,QAMdiO,OAAQ,WACN1zC,KAAK85C,cAAcxV,WACftkC,KAAK+5C,cACP/5C,KAAK+5C,aAAazV,aAKpB9K,MACAjJ,IAAS,EAkCT8J,GAAkB,aAClBC,GAAiB,YACjB0f,GAAoB7P,GAAiB,WACrC8P,GAAmB7P,GAAgB,WAiBnC8P,GAAM3Q,IAAat+B,OAAOkvC,sBAC1BC,GAAyBF,GAE3B,SAAUl3C,GACVk3C,GAAI,WACFA,GAAIl3C,MAEJ,SAAUA,GACZgJ,WAAWhJ,EAAI,KAsCb8L,GAAM6qB,GAAWp3B,SA2BrBuM,IAAI+mC,MAAQ,SAAU11B,EAAI1e,GACxBzB,KAAKq6C,gBACLr6C,KAAKyzB,SAAS,eACdzzB,KAAKyB,GAAKA,EACVqhB,EAAS9iB,KAAKyP,GAAIzP,KAAK45B,YACvBzZ,IACAngB,KAAKk6B,SAAU,EACfl6B,KAAKs6C,eAAe,SAChBt6C,KAAKk6B,UAGTl6B,KAAKwc,OAASxc,KAAKsgB,OAAStgB,KAAKsgB,MAAMi6B,eACvCjhB,GAAQt5B,KAAKw6C,iBASf1rC,GAAI0rC,cAAgB,WAClB,GAAIlsC,GAAQtO,IAGZA,MAAKi6B,aAAc,EACnBmgB,GAAuB,WACrB9rC,EAAM2rB,aAAc,GAEtB,IAAIwgB,GAAYz6C,KAAKy6C,UACjBzvC,EAAOhL,KAAK06C,qBAAqB16C,KAAK45B,WACrC55B,MAAKg6B,YAUChvB,IAASqvB,IAClBpX,GAAYjjB,KAAKyP,GAAIzP,KAAK45B,YAVtB5uB,IAASqvB,IAEXpX,GAAYjjB,KAAKyP,GAAIzP,KAAK45B,YAC1B55B,KAAK26C,WAAWp6B,GAAoBk6B,IAC3BzvC,IAASsvB,GAClBt6B,KAAK26C,WAAWtQ,GAAmBoQ,GAEnCA,KAWN3rC,GAAI2rC,UAAY,WACdz6C,KAAKk6B,SAAU,EACfl6B,KAAKwc,OAASxc,KAAKg6B,YAAc,KACjC/W,GAAYjjB,KAAKyP,GAAIzP,KAAK45B,YAC1B55B,KAAKyzB,SAAS,cACVzzB,KAAKyB,IAAIzB,KAAKyB,MAwBpBqN,GAAI8rC,MAAQ,SAAUz6B,EAAI1e,GACxBzB,KAAKq6C,gBACLr6C,KAAKyzB,SAAS,eACdzzB,KAAKmgB,GAAKA,EACVngB,KAAKyB,GAAKA,EACVqhB,EAAS9iB,KAAKyP,GAAIzP,KAAK65B,YACvB75B,KAAKm6B,MAAO,EACZn6B,KAAKs6C,eAAe,SAChBt6C,KAAKm6B,OAGTn6B,KAAKwc,OAASxc,KAAKsgB,OAAStgB,KAAKsgB,MAAMu6B,eAKnC76C,KAAKmgB,KAAOngB,KAAKg6B,cAIfh6B,KAAKi6B,YACPj6B,KAAK86C,YAELxhB,GAAQt5B,KAAK+6C,kBASnBjsC,GAAIisC,cAAgB,WAClB,GAAI/vC,GAAOhL,KAAK06C,qBAAqB16C,KAAK65B,WAC1C,IAAI7uB,EAAM,CACR,GAAIzC,GAAQyC,IAASqvB,GAAkB9Z,GAAqB8pB,EAC5DrqC,MAAK26C,WAAWpyC,EAAOvI,KAAK86C,eAE5B96C,MAAK86C,aAQThsC,GAAIgsC,UAAY,WACd96C,KAAKm6B,MAAO,EACZn6B,KAAKwc,OAASxc,KAAKg6B,YAAc,KACjCh6B,KAAKmgB,KACL8C,GAAYjjB,KAAKyP,GAAIzP,KAAK65B,YAC1B75B,KAAKyzB,SAAS,cACVzzB,KAAKyB,IAAIzB,KAAKyB,KAClBzB,KAAKmgB,GAAK,MAQZrR,GAAIurC,cAAgB,WAClBr6C,KAAKmgB,GAAKngB,KAAKyB,GAAK,IACpB,IAAIu5C,IAAa,CACbh7C,MAAK+5B,eACPihB,GAAa,EACb54B,EAAIpiB,KAAKyP,GAAIzP,KAAK85B,gBAAiB95B,KAAK+5B,cACxC/5B,KAAK85B,gBAAkB95B,KAAK+5B,aAAe,MAEzC/5B,KAAKg6B,cACPghB,GAAa,EACbh7C,KAAKg6B,YAAYxd,SACjBxc,KAAKg6B,YAAc,MAEjBghB,IACF/3B,GAAYjjB,KAAKyP,GAAIzP,KAAK45B,YAC1B3W,GAAYjjB,KAAKyP,GAAIzP,KAAK65B,aAExB75B,KAAKwc,SACPxc,KAAKwc,OAAO9c,KAAKM,KAAK4H,GAAI5H,KAAKyP,IAC/BzP,KAAKwc,OAAS,OAUlB1N,GAAI2kB,SAAW,SAAUzoB,GACnBhL,KAAKsgB,OAAStgB,KAAKsgB,MAAMtV,IAC3BhL,KAAKsgB,MAAMtV,GAAMtL,KAAKM,KAAK4H,GAAI5H,KAAKyP,KAexCX,GAAIwrC,eAAiB,SAAUtvC,GAC7B,GAAI43B,GAAO5iC,KAAKsgB,OAAStgB,KAAKsgB,MAAMtV,EAChC43B,KACEA,EAAKjjC,OAAS,IAChBK,KAAKg6B,YAAc1d,EAAYtc,KAAKgL,EAAO,UAE7C43B,EAAKljC,KAAKM,KAAK4H,GAAI5H,KAAKyP,GAAIzP,KAAKg6B,eAYrClrB,GAAI4rC,qBAAuB,SAAUnlC,GAEnC,MAAKgL,IAMLrV,SAAS+vC,QAETj7C,KAAKsgB,OAAStgB,KAAKsgB,MAAM46B,OAAQ,GAEjC1gB,GAASx6B,KAAKyP,KAVd,CAaA,GAAIzE,GAAOhL,KAAKgL,MAAQhL,KAAKo6B,UAAU7kB,EACvC,IAAIvK,EAAM,MAAOA,EACjB,IAAImwC,GAAen7C,KAAKyP,GAAG4F,MACvB+lC,EAAiBnwC,OAAOowC,iBAAiBr7C,KAAKyP,IAC9C6rC,EAAgBH,EAAanB,KAAsBoB,EAAepB,GACtE,IAAIsB,GAAmC,OAAlBA,EACnBtwC,EAAOqvB,OACF,CACL,GAAIkhB,GAAeJ,EAAalB,KAAqBmB,EAAenB,GAChEsB,IAAiC,OAAjBA,IAClBvwC,EAAOsvB,IAMX,MAHItvB,KACFhL,KAAKo6B,UAAU7kB,GAAavK,GAEvBA,IAUT8D,GAAI6rC,WAAa,SAAUpyC,EAAO9G,GAChCzB,KAAK85B,gBAAkBvxB,CACvB,IAAIf,GAAOxH,KACPyP,EAAKzP,KAAKyP,GACV+rC,EAAQx7C,KAAK+5B,aAAe,SAAUp7B,GACpCA,EAAE8E,SAAWgM,IACf2S,EAAI3S,EAAIlH,EAAOizC,GACfh0C,EAAKsyB,gBAAkBtyB,EAAKuyB,aAAe,MACtCvyB,EAAKwyB,aAAev4B,GACvBA,KAINygB,GAAGzS,EAAIlH,EAAOizC,GAsBhB,IAAIC,KAEF1f,SAAU4U,GAEVx/B,OAAQ,SAAgB2U,EAAI41B,GAC1B,GAAIjsC,GAAKzP,KAAKyP,GAEV6Q,EAAQuF,GAAa7lB,KAAK4H,GAAGxE,SAAU,cAAe0iB,EAC1DA,GAAKA,GAAM,IACX41B,EAAQA,GAAS,IACjBjsC,EAAG4Q,UAAY,GAAIsZ,IAAWlqB,EAAIqW,EAAIxF,EAAOtgB,KAAK4H,IAClDqb,GAAYxT,EAAIisC,EAAQ,eACxB54B,EAASrT,EAAIqW,EAAK,iBAIlB2Y,IACFppB,MAAOA,GACPsmC,QAAS3D,GACTjhC,UAAWA,GACXif,KAAMkC,GACN9X,WAAYq7B,IAIV1b,GAAS,cACT7C,GAAO,YACPkC,GAAY,yBACZD,GAAa,YACbW,GAAe,2BAGf9D,GAAmB,IACnBqD,GAA4B,GAyiBhCT,IAAKxD,UAAW,CAkNhB,IAAImF,IAAgB,aAwMhBsI,GAAWxmC,OAAOupC,QACrBzX,QAASA,GACTmI,oBAAqBA,GACrBG,YAAaA,GACbwD,WAAYA,GACZO,aAAcA,KAmPXwB,GAAU,WAqOde,IAAUxgC,UAAUs5B,MAAQ,WAC1B,GAAI3zB,GAAOlI,KAAKkI,KACZ4zB,EAAa97B,KAAK87B,UAGtB,KAAc,UAAT5zB,GAAoBlI,KAAK4H,GAAG4Y,cAAgBxgB,KAAKyP,IAAMzP,KAAKyP,GAAG+R,gBAAiB,CACnF,GAAIuV,GAAO+E,EAAW/E,MAAQ,KAAO7uB,CACrClI,MAAKyP,GAAG+R,gBAAgBuV,GAI1B,GAAItb,GAAMqgB,EAAWrgB,GAgBrB,IAfmB,kBAARA,GACTzb,KAAKmR,OAASsK,EAEdhG,EAAOzV,KAAMyb,GAIfzb,KAAK47C,eAGD57C,KAAKa,MACPb,KAAKa,OAEPb,KAAKijC,QAAS,EAEVjjC,KAAK0F,QACP1F,KAAKmR,QAAUnR,KAAKmR,OAAO2qB,EAAWnP,SACjC,KAAK3sB,KAAKyF,YAAczF,KAAK0+B,aAAe1+B,KAAKmR,QAAUnR,KAAKswB,UAAYtwB,KAAK67C,kBAAmB,CAEzG,GAAIv+B,GAAMtd,IACNA,MAAKmR,OACPnR,KAAK87C,QAAU,SAAU/5C,EAAKg6C,GACvBz+B,EAAI0lB,SACP1lB,EAAInM,OAAOpP,EAAKg6C,IAIpB/7C,KAAK87C,QAAUhZ,EAEjB,IAAI0L,GAAaxuC,KAAKwzC,YAAc3yC,EAAKb,KAAKwzC,YAAaxzC,MAAQ,KAC/DyuC,EAAczuC,KAAKyzC,aAAe5yC,EAAKb,KAAKyzC,aAAczzC,MAAQ,KAClEmvB,EAAUnvB,KAAKuwC,SAAW,GAAI9gB,IAAQzvB,KAAK4H,GAAI5H,KAAKyF,WAAYzF,KAAK87C,SAEvEv+B,QAASvd,KAAKud,QACd+S,OAAQtwB,KAAKswB,OACbpsB,KAAMlE,KAAKkE,KACXsqC,WAAYA,EACZC,YAAaA,EACb3mC,MAAO9H,KAAK6qB,QAKV7qB,MAAK40C,UACP50C,KAAK40C,YACI50C,KAAKmR,QACdnR,KAAKmR,OAAOge,EAAQhvB,SAU1B4iC,GAAUxgC,UAAUq5C,aAAe,WACjC,GAAK57C,KAAK4E,OAAV,CAGA,GAAIA,GAAS5E,KAAK4E,MAElB5E,MAAK4E,OAASvC,OAAO2a,OAAO,KAG5B,KAFA,GACIzZ,GAAKxB,EAAKi6C,EADV58C,EAAIwF,EAAOjF,OAERP,KACLmE,EAAMuX,EAAUlW,EAAOxF,IACvB48C,EAAYrhC,EAASpX,GACrBxB,EAAM0f,EAAYzhB,KAAKyP,GAAIlM,GAChB,MAAPxB,EAEF/B,KAAKi8C,mBAAmBD,EAAWj6C,IAGnCA,EAAMsf,EAAQrhB,KAAKyP,GAAIlM,GACZ,MAAPxB,IACF/B,KAAK4E,OAAOo3C,GAAqB,KAARj6C,GAAoBA,MAarDghC,GAAUxgC,UAAU05C,mBAAqB,SAAU14C,EAAKkC,GACtD,GAAI+B,GAAOxH,KACPgP,GAAS,EACTktC,GAAWl8C,KAAK6qB,QAAU7qB,KAAK4H,IAAI49B,OAAO//B,EAAY,SAAU1D,EAAKg6C,GAIvE,GAHAv0C,EAAK5C,OAAOrB,GAAOxB,EAGfiN,EAAQ,CACV,GAAIvN,GAAK+F,EAAK20C,eAAiB30C,EAAK20C,cAAc54C,EAC9C9B,IACFA,EAAG/B,KAAK8H,EAAMzF,EAAKg6C,OAGrB/sC,IAAS,IAGX02B,WAAW,EACXlW,MAAM,KACJxvB,KAAKo8C,mBAAqBp8C,KAAKo8C,sBAAwBj3C,KAAK+2C,IAclEnZ,GAAUxgC,UAAUs5C,gBAAkB,WACpC,GAAIp2C,GAAazF,KAAKyF,UACtB,IAAIA,GAAczF,KAAKm2C,kBAAoB9nB,GAAa5oB,GAAa,CACnE,GAAIzC,GAAK+pB,GAAgBtnB,GAAY0I,IACjCrG,EAAQ9H,KAAK6qB,QAAU7qB,KAAK4H,GAC5BF,EAAU,SAAiB/I,GAC7BmJ,EAAMu0C,OAAS19C,EACfqE,EAAGtD,KAAKoI,EAAOA,GACfA,EAAMu0C,OAAS,KAMjB,OAJIr8C,MAAKud,UACP7V,EAAUI,EAAM28B,cAAc/8B,EAAS,KAAM1H,KAAKud,UAEpDvd,KAAKmR,OAAOzJ,IACL,IAaXq7B,GAAUxgC,UAAUyW,IAAM,SAAU7Y,GAE9BH,KAAKswB,OACPtwB,KAAK8uC,UAAU,WACb9uC,KAAKuwC,SAASv3B,IAAI7Y,KAGpBiB,GAAK,8DAWT2hC,GAAUxgC,UAAUusC,UAAY,SAAU9rC,GACxC,GAAIwE,GAAOxH,IACXwH,GAAKw7B,SAAU,EACfhgC,EAAGtD,KAAK8H,GACRhG,GAAS,WACPgG,EAAKw7B,SAAU,KAcnBD,GAAUxgC,UAAU2f,GAAK,SAAU3Z,EAAOb,EAASya,GACjDD,EAAGliB,KAAKyP,GAAIlH,EAAOb,EAASya,IAAaniB,KAAKkjC,aAAeljC,KAAKkjC,gBAAkB/9B,MAAMoD,EAAOb,KAOnGq7B,GAAUxgC,UAAU65B,UAAY,WAC9B,GAAIp8B,KAAKijC,OAAQ,CACfjjC,KAAKijC,QAAS,EACVjjC,KAAK0zC,QACP1zC,KAAK0zC,SAEH1zC,KAAKuwC,UACPvwC,KAAKuwC,SAASjM,UAEhB,IACIllC,GADAk9C,EAAYt8C,KAAKkjC,UAErB,IAAIoZ,EAEF,IADAl9C,EAAIk9C,EAAU38C,OACPP,KACLgjB,EAAIpiB,KAAKyP,GAAI6sC,EAAUl9C,GAAG,GAAIk9C,EAAUl9C,GAAG,GAG/C,IAAIm9C,GAAav8C,KAAKo8C,gBACtB,IAAIG,EAEF,IADAn9C,EAAIm9C,EAAW58C,OACRP,KACLm9C,EAAWn9C,IAGuBY,MAAKyP,IACzCzP,KAAKyP,GAAG2zB,gBAAgB/G,QAAQr8B,MAElCA,KAAK4H,GAAK5H,KAAKyP,GAAKzP,KAAKuwC,SAAWvwC,KAAKkjC,WAAa,MAoV1D,IAAIyC,IAAa,YAgoBjBtc,IAAUtoB,IACV6/B,GAAW7/B,IACX+gC,GAAY/gC,IACZsiC,GAAetiC,IACfyjC,GAAUzjC,IAGVokC,GAAQpkC,IACR+kC,GAAO/kC,IACP+lC,GAAU/lC,IACVymC,GAAazmC,GAEb,IAAIy7C,KAEFzgB,SAAUkV,GACVrsC,QAAS,QAET/D,KAAM,WAEJ,GAAIqH,GAAOlI,KAAK4E,OAAOsD,MAAQ,UAC3Bub,EAAUzjB,KAAK4H,GAAG84B,eAAiB1gC,KAAK4H,GAAG84B,cAAcx4B,EACxDub,IAAYA,EAAQC,gBAGvB1jB,KAAKm0B,QAAQ1Q,EAAQ6B,WAAU,GAAOtlB,KAAK4H,GAAGgjB,SAAU5qB,KAAK4H,IAF7D5H,KAAKy8C,YAMTtoB,QAAS,SAAiB1Q,EAAS9iB,EAASqJ,GAC1C,GAAIyZ,GAAW9iB,EAAS,CACtB,GAAIX,KAAKyP,GAAGiU,iBAAiD,IAA9BD,EAAQyP,WAAWvzB,QAAmD,IAAnC8jB,EAAQyP,WAAW,GAAG/R,UAAkBsC,EAAQyP,WAAW,GAAGvR,aAAa,QAAS,CAGpJ,GAAI+6B,GAAYxxC,SAASE,cAAc,WACvCsxC,GAAU75B,aAAa,SAAU,IACjC65B,EAAUn3B,UAAYvlB,KAAKyP,GAAG8V,UAE9Bm3B,EAAU9xB,SAAW5qB,KAAK4H,GAC1B6b,EAAQlY,YAAYmxC,GAEtB,GAAI50C,GAAQkC,EAAOA,EAAK6gB,OAAS7qB,KAAK6qB,MACtC7qB,MAAKizB,OAAStyB,EAAQ8mC,SAAShkB,EAASzZ,EAAMlC,EAAO9H,KAAK8qB,OAExDrH,EACF5hB,EAAQ7B,KAAKyP,GAAIgU,GAEjBrS,EAAOpR,KAAKyP,KAIhBgtC,SAAU,WACRz8C,KAAKm0B,QAAQhR,GAAenjB,KAAKyP,IAAI,GAAOzP,KAAK4H,KAGnD8rC,OAAQ,WACF1zC,KAAKizB,QACPjzB,KAAKizB,WAKP8H,IAEFgB,SAAU+U,GAEVlsC,QAAS,QAGTu3C,eACEj0C,KAAM,SAAc/H,GAClBwzC,GAAIviC,OAAO1R,KAAKM,MACZG,GACFH,KAAK+lC,OAAO5lC,KAKlBU,KAAM,WACJb,KAAKkkB,OAASF,GAAa,aAC3BniB,EAAQ7B,KAAKyP,GAAIzP,KAAKkkB,QACtBlkB,KAAK+lC,OAAO/lC,KAAK4E,OAAOsD,OAG1B69B,OAAQ,SAAgBjgB,GACtB,GAAIiV,GAAUlV,GAAa7lB,KAAK4H,GAAGxE,SAAU,WAAY0iB,GAAI,EACzDiV,KACF/6B,KAAK2H,QAAU,GAAIosB,IAAgB/zB,KAAK4H,GAAImzB,GAC5C4Y,GAAI5N,OAAOrmC,KAAKM,QAIpB0zC,OAAQ,WACF1zC,KAAK8kB,MACP9kB,KAAK8kB,KAAKgP,YAKZ4U,IACF8T,KAAMA,GACNzhB,QAASA,IAGP8M,GAAesJ,GAAKsC,aAiJpBkJ,GAAW,iBAGXp/B,IAEF0qB,QAASA,GACTN,SAAUA,GACVD,QAASA,GAQTl9B,MACEq6B,KAAM,SAAc1kC,EAAOy8C,GACzB,MAAwB,gBAAVz8C,GAAqBA,EAAQiK,KAAKC,UAAUlK,EAAO,KAAM0C,UAAUlD,OAAS,EAAIi9C,EAAS,IAEzGjY,MAAO,SAAexkC,GACpB,IACE,MAAOiK,MAAKnF,MAAM9E,GAClB,MAAOxB,GACP,MAAOwB,MASb08C,WAAY,SAAoB18C,GAC9B,MAAKA,IAAmB,IAAVA,GACdA,EAAQA,EAAMuG,WACPvG,EAAM0F,OAAO,GAAG6F,cAAgBvL,EAAMyD,MAAM,IAFjB,IASpCk5C,UAAW,SAAmB38C,GAC5B,MAAOA,IAAmB,IAAVA,EAAcA,EAAMuG,WAAWgF,cAAgB,IAOjEqxC,UAAW,SAAmB58C,GAC5B,MAAOA,IAAmB,IAAVA,EAAcA,EAAMuG,WAAWqF,cAAgB,IAUjEixC,SAAU,SAAkB78C,EAAO88C,EAAWC,GAE5C,GADA/8C,EAAQg9C,WAAWh9C,IACdi9C,SAASj9C,KAAWA,GAAmB,IAAVA,EAAa,MAAO,EACtD88C,GAAyB,MAAbA,EAAoBA,EAAY,IAC5CC,EAAuB,MAAZA,EAAmBA,EAAW,CACzC,IAAIG,GAAcvyC,KAAKwyC,IAAIn9C,GAAOo9C,QAAQL,GACtCM,EAAON,EAAWG,EAAYz5C,MAAM,KAAQs5C,GAAYG,EACxDj+C,EAAIo+C,EAAK79C,OAAS,EAClBkd,EAAOzd,EAAI,EAAIo+C,EAAK55C,MAAM,EAAGxE,IAAMo+C,EAAK79C,OAAS,EAAI,IAAM,IAAM,GACjE89C,EAASP,EAAWG,EAAYz5C,SAAWs5C,GAAY,GACvDQ,EAAOv9C,EAAQ,EAAI,IAAM,EAC7B,OAAOu9C,GAAOT,EAAYpgC,EAAO2gC,EAAK55C,MAAMxE,GAAGyC,QAAQ86C,GAAU,OAASc,GAgB5EE,UAAW,SAAmBx9C,GAC5B,GAAIuD,GAAOwX,EAAQrY,UAAW,EAC9B,OAAOa,GAAK/D,OAAS,EAAI+D,EAAKvD,EAAQ,GAAK,IAAMuD,EAAKA,EAAK/D,OAAS,GAAK+D,EAAK,IAAgB,IAAVvD,EAAc,GAAK,MAWzGmtC,SAAU,SAAkB5lC,EAASk2C,GACnC,GAAKl2C,EAIL,MAHKk2C,KACHA,EAAQ,KAEH/hC,EAAUnU,EAASk2C,IAwM9B,OAhBApV,IAAiBznC,IAEjBA,GAAI88C,QAAU,SAId7xC,WAAW,WACL9K,GAAO+tB,WACLA,GACFA,GAASC,KAAK,OAAQnuB,IACqBwoC,IAAa,cAAcliC,KAAK4D,OAAOy+B,UAAUC,YAC5FroC,QAAQuR,IAAI,2GAGf,GAEI9R,OVw9DNrB,KAAKM,KAAuB,mBAAX0Y,QAAyBA,OAAyB,mBAATlR,MAAuBA,KAAyB,mBAAXyD,QAAyBA,qBAEhH","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*!\n * vue-resource v0.9.3\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$2(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$2.reject = function (r) {\n    return new Promise$2(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$2.resolve = function (x) {\n    return new Promise$2(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$2.all = function all(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$2.race = function race(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$2.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$2(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nvar PromiseObj = window.Promise || Promise$2;\n\nfunction Promise$1(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise$1.all = function (iterable, context) {\n    return new Promise$1(PromiseObj.all(iterable), context);\n};\n\nPromise$1.resolve = function (value, context) {\n    return new Promise$1(PromiseObj.resolve(value), context);\n};\n\nPromise$1.reject = function (reason, context) {\n    return new Promise$1(PromiseObj.reject(reason), context);\n};\n\nPromise$1.race = function (iterable, context) {\n    return new Promise$1(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise$1.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return PromiseObj.reject(reason);\n    });\n};\n\nvar debug = false;\nvar util = {};\nvar array = [];\nfunction Util (Vue) {\n    util = Vue.util;\n    debug = Vue.config.debug || !Vue.config.silent;\n}\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isBoolean(val) {\n    return val === true || val === false;\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise$1.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nfunction xdrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith(xdr.responseText, {\n                status: xdr.status,\n                statusText: xdr.statusText\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xdr.abort();\n        };\n\n        xdr.open(request.method, request.getUrl(), true);\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n}\n\nvar ORIGIN_URL = Url.parse(location.href);\nvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\nfunction cors (request, next) {\n\n    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n        request.crossOrigin = true;\n    }\n\n    if (request.crossOrigin) {\n\n        if (!SUPPORTS_CORS) {\n            request.client = xdrClient;\n        }\n\n        delete request.emulateHTTP;\n    }\n\n    next();\n}\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n}\n\nfunction body (request, next) {\n\n    if (request.emulateJSON && isPlainObject(request.body)) {\n        request.body = Url.params(request.body);\n        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n\n    if (isFormData(request.body)) {\n        delete request.headers['Content-Type'];\n    }\n\n    if (isPlainObject(request.body)) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        var contentType = response.headers['Content-Type'];\n\n        if (isString(contentType) && contentType.indexOf('application/json') === 0) {\n\n            try {\n                response.data = response.json();\n            } catch (e) {\n                response.data = null;\n            }\n        } else {\n            response.data = response.text();\n        }\n    });\n}\n\nfunction jsonpClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var name = request.jsonp || 'callback',\n            callback = '_jsonp' + Math.random().toString(36).substr(2),\n            body = null,\n            handler,\n            script;\n\n        handler = function (event) {\n\n            var status = 0;\n\n            if (event.type === 'load' && body !== null) {\n                status = 200;\n            } else if (event.type === 'error') {\n                status = 404;\n            }\n\n            resolve(request.respondWith(body, { status: status }));\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        request.params[name] = callback;\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\nfunction jsonp (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next(function (response) {\n\n        if (request.method == 'JSONP') {\n            response.data = response.json();\n        }\n    });\n}\n\nfunction before (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n}\n\n/**\n * HTTP method override Interceptor.\n */\n\nfunction method (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers['X-HTTP-Method-Override'] = request.method;\n        request.method = 'POST';\n    }\n\n    next();\n}\n\nfunction header (request, next) {\n\n    request.method = request.method.toUpperCase();\n    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\n    next();\n}\n\n/**\n * Timeout Interceptor.\n */\n\nfunction timeout (request, next) {\n\n    var timeout;\n\n    if (request.timeout) {\n        timeout = setTimeout(function () {\n            request.abort();\n        }, request.timeout);\n    }\n\n    next(function (response) {\n\n        clearTimeout(timeout);\n    });\n}\n\nfunction xhrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),\n                headers: parseHeaders(xhr.getAllResponseHeaders())\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xhr.abort();\n        };\n\n        xhr.open(request.method, request.getUrl(), true);\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onerror = handler;\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        if (request.credentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.getBody());\n    });\n}\n\nfunction parseHeaders(str) {\n\n    var headers = {},\n        value,\n        name,\n        i;\n\n    each(trim(str).split('\\n'), function (row) {\n\n        i = row.indexOf(':');\n        name = trim(row.slice(0, i));\n        value = trim(row.slice(i + 1));\n\n        if (headers[name]) {\n\n            if (isArray(headers[name])) {\n                headers[name].push(value);\n            } else {\n                headers[name] = [headers[name], value];\n            }\n        } else {\n\n            headers[name] = value;\n        }\n    });\n\n    return headers;\n}\n\nfunction Client (context) {\n\n    var reqHandlers = [sendRequest],\n        resHandlers = [],\n        handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new Promise$1(function (resolve) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        });\n                    });\n\n                    when(response, resolve);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n}\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || xhrClient;\n\n    resolve(client(request));\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/**\n * HTTP Response.\n */\n\nvar Response = function () {\n    function Response(body, _ref) {\n        var url = _ref.url;\n        var headers = _ref.headers;\n        var status = _ref.status;\n        var statusText = _ref.statusText;\n        classCallCheck(this, Response);\n\n\n        this.url = url;\n        this.body = body;\n        this.headers = headers || {};\n        this.status = status || 0;\n        this.statusText = statusText || '';\n        this.ok = status >= 200 && status < 300;\n    }\n\n    Response.prototype.text = function text() {\n        return this.body;\n    };\n\n    Response.prototype.blob = function blob() {\n        return new Blob([this.body]);\n    };\n\n    Response.prototype.json = function json() {\n        return JSON.parse(this.body);\n    };\n\n    return Response;\n}();\n\nvar Request = function () {\n    function Request(options) {\n        classCallCheck(this, Request);\n\n\n        this.method = 'GET';\n        this.body = null;\n        this.params = {};\n        this.headers = {};\n\n        assign(this, options);\n    }\n\n    Request.prototype.getUrl = function getUrl() {\n        return Url(this);\n    };\n\n    Request.prototype.getBody = function getBody() {\n        return this.body;\n    };\n\n    Request.prototype.respondWith = function respondWith(body, options) {\n        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n    };\n\n    return Request;\n}();\n\n/**\n * Service for sending network requests.\n */\n\nvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\nvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\nvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\nfunction Http(options) {\n\n    var self = this || {},\n        client = Client(self.$vm);\n\n    defaults(options || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n        client.use(handler);\n    });\n\n    return client(new Request(options)).then(function (response) {\n\n        return response.ok ? response : Promise$1.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return Promise$1.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    custom: CUSTOM_HEADERS,\n    common: COMMON_HEADERS\n};\n\nHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, options) {\n        return this(assign(options || {}, { url: url, method: method }));\n    };\n});\n\n['post', 'put', 'patch'].forEach(function (method) {\n\n    Http[method] = function (url, body, options) {\n        return this(assign(options || {}, { url: url, method: method, body: body }));\n    };\n});\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = assign({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: params || {} }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = assign({}, action),\n        params = {},\n        body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options.body = body;\n    options.params = assign({}, options.params, params);\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = Promise$1;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*!\n * vue-resource v0.9.3\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$2(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$2.reject = function (r) {\n    return new Promise$2(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$2.resolve = function (x) {\n    return new Promise$2(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$2.all = function all(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$2.race = function race(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$2.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$2(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nvar PromiseObj = window.Promise || Promise$2;\n\nfunction Promise$1(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise$1.all = function (iterable, context) {\n    return new Promise$1(PromiseObj.all(iterable), context);\n};\n\nPromise$1.resolve = function (value, context) {\n    return new Promise$1(PromiseObj.resolve(value), context);\n};\n\nPromise$1.reject = function (reason, context) {\n    return new Promise$1(PromiseObj.reject(reason), context);\n};\n\nPromise$1.race = function (iterable, context) {\n    return new Promise$1(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise$1.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return PromiseObj.reject(reason);\n    });\n};\n\nvar debug = false;\nvar util = {};\nvar array = [];\nfunction Util (Vue) {\n    util = Vue.util;\n    debug = Vue.config.debug || !Vue.config.silent;\n}\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isBoolean(val) {\n    return val === true || val === false;\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise$1.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nfunction xdrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith(xdr.responseText, {\n                status: xdr.status,\n                statusText: xdr.statusText\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xdr.abort();\n        };\n\n        xdr.open(request.method, request.getUrl(), true);\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n}\n\nvar ORIGIN_URL = Url.parse(location.href);\nvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\nfunction cors (request, next) {\n\n    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n        request.crossOrigin = true;\n    }\n\n    if (request.crossOrigin) {\n\n        if (!SUPPORTS_CORS) {\n            request.client = xdrClient;\n        }\n\n        delete request.emulateHTTP;\n    }\n\n    next();\n}\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n}\n\nfunction body (request, next) {\n\n    if (request.emulateJSON && isPlainObject(request.body)) {\n        request.body = Url.params(request.body);\n        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n\n    if (isFormData(request.body)) {\n        delete request.headers['Content-Type'];\n    }\n\n    if (isPlainObject(request.body)) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        var contentType = response.headers['Content-Type'];\n\n        if (isString(contentType) && contentType.indexOf('application/json') === 0) {\n\n            try {\n                response.data = response.json();\n            } catch (e) {\n                response.data = null;\n            }\n        } else {\n            response.data = response.text();\n        }\n    });\n}\n\nfunction jsonpClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var name = request.jsonp || 'callback',\n            callback = '_jsonp' + Math.random().toString(36).substr(2),\n            body = null,\n            handler,\n            script;\n\n        handler = function (event) {\n\n            var status = 0;\n\n            if (event.type === 'load' && body !== null) {\n                status = 200;\n            } else if (event.type === 'error') {\n                status = 404;\n            }\n\n            resolve(request.respondWith(body, { status: status }));\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        request.params[name] = callback;\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\nfunction jsonp (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next(function (response) {\n\n        if (request.method == 'JSONP') {\n            response.data = response.json();\n        }\n    });\n}\n\nfunction before (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n}\n\n/**\n * HTTP method override Interceptor.\n */\n\nfunction method (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers['X-HTTP-Method-Override'] = request.method;\n        request.method = 'POST';\n    }\n\n    next();\n}\n\nfunction header (request, next) {\n\n    request.method = request.method.toUpperCase();\n    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\n    next();\n}\n\n/**\n * Timeout Interceptor.\n */\n\nfunction timeout (request, next) {\n\n    var timeout;\n\n    if (request.timeout) {\n        timeout = setTimeout(function () {\n            request.abort();\n        }, request.timeout);\n    }\n\n    next(function (response) {\n\n        clearTimeout(timeout);\n    });\n}\n\nfunction xhrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),\n                headers: parseHeaders(xhr.getAllResponseHeaders())\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xhr.abort();\n        };\n\n        xhr.open(request.method, request.getUrl(), true);\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onerror = handler;\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        if (request.credentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.getBody());\n    });\n}\n\nfunction parseHeaders(str) {\n\n    var headers = {},\n        value,\n        name,\n        i;\n\n    each(trim(str).split('\\n'), function (row) {\n\n        i = row.indexOf(':');\n        name = trim(row.slice(0, i));\n        value = trim(row.slice(i + 1));\n\n        if (headers[name]) {\n\n            if (isArray(headers[name])) {\n                headers[name].push(value);\n            } else {\n                headers[name] = [headers[name], value];\n            }\n        } else {\n\n            headers[name] = value;\n        }\n    });\n\n    return headers;\n}\n\nfunction Client (context) {\n\n    var reqHandlers = [sendRequest],\n        resHandlers = [],\n        handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new Promise$1(function (resolve) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        });\n                    });\n\n                    when(response, resolve);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n}\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || xhrClient;\n\n    resolve(client(request));\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/**\n * HTTP Response.\n */\n\nvar Response = function () {\n    function Response(body, _ref) {\n        var url = _ref.url;\n        var headers = _ref.headers;\n        var status = _ref.status;\n        var statusText = _ref.statusText;\n        classCallCheck(this, Response);\n\n\n        this.url = url;\n        this.body = body;\n        this.headers = headers || {};\n        this.status = status || 0;\n        this.statusText = statusText || '';\n        this.ok = status >= 200 && status < 300;\n    }\n\n    Response.prototype.text = function text() {\n        return this.body;\n    };\n\n    Response.prototype.blob = function blob() {\n        return new Blob([this.body]);\n    };\n\n    Response.prototype.json = function json() {\n        return JSON.parse(this.body);\n    };\n\n    return Response;\n}();\n\nvar Request = function () {\n    function Request(options) {\n        classCallCheck(this, Request);\n\n\n        this.method = 'GET';\n        this.body = null;\n        this.params = {};\n        this.headers = {};\n\n        assign(this, options);\n    }\n\n    Request.prototype.getUrl = function getUrl() {\n        return Url(this);\n    };\n\n    Request.prototype.getBody = function getBody() {\n        return this.body;\n    };\n\n    Request.prototype.respondWith = function respondWith(body, options) {\n        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n    };\n\n    return Request;\n}();\n\n/**\n * Service for sending network requests.\n */\n\nvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\nvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\nvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\nfunction Http(options) {\n\n    var self = this || {},\n        client = Client(self.$vm);\n\n    defaults(options || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n        client.use(handler);\n    });\n\n    return client(new Request(options)).then(function (response) {\n\n        return response.ok ? response : Promise$1.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return Promise$1.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    custom: CUSTOM_HEADERS,\n    common: COMMON_HEADERS\n};\n\nHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, options) {\n        return this(assign(options || {}, { url: url, method: method }));\n    };\n});\n\n['post', 'put', 'patch'].forEach(function (method) {\n\n    Http[method] = function (url, body, options) {\n        return this(assign(options || {}, { url: url, method: method, body: body }));\n    };\n});\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = assign({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: params || {} }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = assign({}, action),\n        params = {},\n        body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options.body = body;\n    options.params = assign({}, options.params, params);\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = Promise$1;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar _vue = require('./vue');\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _config = require('./config');\n\nvar _welcome = require('./components/welcome');\n\nvar _welcome2 = _interopRequireDefault(_welcome);\n\nvar _single = require('./components/single');\n\nvar _single2 = _interopRequireDefault(_single);\n\nvar _split = require('./components/split');\n\nvar _split2 = _interopRequireDefault(_split);\n\nvar _threeUp = require('./components/three-up');\n\nvar _threeUp2 = _interopRequireDefault(_threeUp);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_vue2.default.use(require('vue-resource'));\n\nvar vm = new _vue2.default({\n\n    el: '#app',\n\n    data: {\n        currentUUID: '',\n        // Current Layout\n        currentView: 'welcome',\n        returnData: {},\n        data: {},\n        currentLayoutIndex: 0,\n        currentLayoutTime: 0\n    },\n\n    computed: {\n        serial: function (_serial) {\n            function serial() {\n                return _serial.apply(this, arguments);\n            }\n\n            serial.toString = function () {\n                return _serial.toString();\n            };\n\n            return serial;\n        }(function () {\n            return serial;\n        })\n    },\n\n    ready: function ready() {\n        console.log('Vue is running');\n\n        this.updateData();\n\n        setInterval(function () {\n            this.updateData();\n        }.bind(this), 5000);\n    },\n\n\n    components: {\n        Welcome: _welcome2.default,\n        Single: _single2.default,\n        Split: _split2.default\n    },\n\n    methods: {\n        getRoutes: function getRoutes() {\n            var URL = \"//localhost:8000\";\n            var API_ENDPOINT = URL + \"/api/v1\";\n\n            return {\n                \"URL\": URL,\n                \"API_ENDPOINT\": API_ENDPOINT,\n                \"GET_CONTENT\": API_ENDPOINT + \"/getcontent\",\n                \"IMAGE_PATH\": URL + '/file/image'\n            };\n        },\n\n\n        updateData: function updateData() {\n            var _this = this;\n\n            // Let's use our config we imported.\n            this.$http.get((0, _config.getConfig)().GET_CONTENT + '/' + this.serial).then(function (response) {\n                // success callback\n                _this.returnData = response.json();\n\n                console.log(_this.returnData);\n\n                // Check the UUID from the response against the UUID saved currently\n                if (_this.returnData.uuid == _this.currentUUID) {} else {\n                    _this.currentUUID = _this.returnData.uuid;\n\n                    // If the return does not contain a display group then we must show the image \n                    if (!_this.returnData.display_group) {\n                        _this.currentView = 'Single';\n                        _this.data = {\n                            components: [{\n                                component_type_id: 1,\n                                images: [{\n                                    filename: _this.getRoutes().IMAGE_PATH + ('/' + _this.returnData.data.team_id + '/') + _this.returnData.data.image\n                                }]\n                            }]\n                        };\n                    } else if (_this.returnData.display_group.layouts && _this.returnData.display_group.layouts.length > 1) {\n\n                        _this.rotateLayouts(_this.returnData.display_group.layouts);\n                    } else {\n\n                        if (_this.returnData.display_group.layouts[0].type.name == '3-Up') {\n                            _this.currentView = _threeUp2.default;\n                        } else {\n                            _this.currentView = _this.returnData.display_group.layouts[0].type.name;\n                        }\n                        _this.data = _this.returnData.display_group.layouts[0];\n                    }\n                }\n            }, function (response) {\n                // error callback\n                console.log('failure', response);\n            });\n        },\n\n        rotateLayouts: function rotateLayouts() {\n            var _this2 = this;\n\n            // workout how many layouts there are\n            var layouts = this.returnData.display_group.layouts;\n            var layout_number = layouts.length;\n\n            layouts.forEach(function (layout) {\n                if (layout.order == _this2.currentLayoutIndex) {\n                    if (layout.type.name == '3-Up') {\n                        _this2.currentView = _threeUp2.default;\n                    } else {\n                        _this2.currentView = layout.type.name;\n                    }\n                    _this2.currentLayoutTime = layout.duration;\n                    _this2.data = layout;\n                }\n            });\n\n            setTimeout(function () {\n                if (_this2.currentLayoutIndex < layout_number) {\n                    _this2.currentLayoutIndex++;\n                } else {\n                    _this2.currentLayoutIndex = 0;\n                }\n                _this2.rotateLayouts();\n            }, this.currentLayoutTime * 1000);\n        }\n    }\n});\n\n},{\"./components/single\":5,\"./components/split\":6,\"./components/three-up\":8,\"./components/welcome\":9,\"./config\":10,\"./vue\":11,\"vue-resource\":1}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _vue = require('../vue');\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _config = require('../config');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Layout expects \n// data = {\n//      images: [\n//         'http://wallpaperlayer.com/img/2015/5/hd-space-wallpapers-5743-6005-hd-wallpapers.jpg',\n//            'http://cdn.wonderfulengineering.com/wp-content/uploads/2014/04/space-wallpaper-1.jpg',\n//            'https://wallpapersinbox.files.wordpress.com/2012/08/hd-space-6.jpg',\n//            'http://hdwallpaperbackgrounds.net/wp-content/uploads/2015/09/3D-Space-HD-Desktop-Wallpapers.jpg'\n//     ]\n// }\n\n// This directive takes the current slide object params and sets the correct\n// classes as the current slide updates\n_vue2.default.directive('show-slide', {\n    params: ['prev-slide', 'slide-id'],\n    update: function update(current) {\n        if (current == this.params.slideId) {\n            this.el.style.opacity = 1;\n            this.el.className = \"slide current-slide\";\n        } else if (this.params.slideId == this.params.prevSlide) {\n            this.el.style.opacity = 0;\n            this.el.className = \"slide previous-slide\";\n        } else {\n            this.el.style.opacity = 0;\n            this.el.className = \"slide next-slide\";\n        }\n    }\n});\n\nexports.default = _vue2.default.extend({\n    props: ['data'],\n\n    template: '\\n        <div class=\"slider-wrapper\">\\n            <div class=\"slider-overflow\">\\n                <div v-for=\"image in images\" \\n                    class=\"slide slide-transition\"\\n                    :slide-id=\"$index\"\\n                    :prev-slide=\"prevSlide\"\\n                    v-show-slide=\"currentSlide\"\\n                    v-bind:style=\"{ backgroundImage: \\'url(\\' + image.url + \\')\\' }\">\\n                </div>\\n            </div>\\n        </div>\\n    ',\n\n    data: function data() {\n        return {\n            currentSlide: 0,\n            speed: 5,\n            images: []\n        };\n    },\n\n    ready: function ready() {\n\n        this.setImagesArray();\n\n        // Once ready run a loop every X seconds and call this.changeSlideNext()\n        setInterval(function () {\n            this.changeSlideNext();\n        }.bind(this), this.speed * 1000);\n    },\n\n\n    computed: {\n        prevSlide: function prevSlide() {\n            // Calculate the next slide to be active\n            // so we can apply the transitions correctly.\n            if (this.currentSlide == 0) return this.images.length - 1;\n            return this.currentSlide - 1;\n        }\n    },\n\n    methods: {\n        setImagesArray: function setImagesArray() {\n            // Map the images data array to one that contains the index, allowing\n            // us to transition through the slides easier\n            if (this.data.images) {\n                this.images = this.data.images.map(function (image, i) {\n                    var data = {\n                        url: (0, _config.getConfig)().IMAGE_PATH + ('/' + image.team_id + '/') + image.filename,\n                        index: i\n                    };\n                    return data;\n                });\n            }\n        },\n        changeSlideNext: function changeSlideNext() {\n            // Change to the next slide in the list\n            // If this current slide is the same length as the array\n            // we know we are at the end so we set the slide to 0\n            if (this.currentSlide == this.images.length - 1) {\n                this.currentSlide = 0;\n            } else this.currentSlide++;\n        }\n    },\n\n    watch: {\n        // Watch the data prop for changes and on change\n        // run the image checkNotNull function to update\n        data: function data() {\n            this.currentSlide = 0;\n            this.setImagesArray();\n        }\n    }\n});\n\n},{\"../config\":10,\"../vue\":11}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _vue = require('../vue');\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _config = require('../config');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _vue2.default.extend({\n\n    props: ['data'],\n\n    template: '\\n        <div class=\"image\" v-bind:style=\"{ backgroundImage: \\'url(\\' + currentImage + \\')\\' }\"></div>\\n    ',\n\n    data: function data() {\n        return {\n            currentImage: \"\"\n        };\n    },\n\n    ready: function ready() {\n        this.checkNotNull();\n    },\n\n\n    methods: {\n        checkNotNull: function checkNotNull() {\n            this.currentImage = this.data.images[0].filename == null ? \"/no-default.png\" : (0, _config.getConfig)().IMAGE_PATH + ('/' + this.data.images[0].team_id + '/') + this.data.images[0].filename;\n        }\n    },\n\n    watch: {\n        data: function data() {\n            this.checkNotNull();\n        }\n    }\n\n});\n\n},{\"../config\":10,\"../vue\":11}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _vue = require('../vue');\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _image = require('./image');\n\nvar _image2 = _interopRequireDefault(_image);\n\nvar _stats = require('./stats');\n\nvar _stats2 = _interopRequireDefault(_stats);\n\nvar _carousel = require('./carousel');\n\nvar _carousel2 = _interopRequireDefault(_carousel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _vue2.default.extend({\n\n    props: ['data'],\n\n    template: '\\n        <div class=\"single\">\\n            <component :is=\"component\" :data=\\'component_data\\'></component>\\n        </div>\\n    ',\n\n    data: function data() {\n        return {\n            image_url: \"\",\n            video_url: \"\",\n            component: \"\",\n            component_data: {}\n        };\n    },\n\n    components: {\n        Image: _image2.default,\n        Stats: _stats2.default,\n        Carousel: _carousel2.default\n    },\n\n    ready: function ready() {\n\n        if (this.data.components[0].component_type_id == \"1\") {\n            this.component = \"Image\";\n            this.component_data = this.data.components[0];\n        } else {\n            // It's a carousel\n            this.component = \"Carousel\";\n            this.component_data = this.data.components[0];\n        }\n    },\n\n\n    methods: {},\n\n    watch: {}\n\n});\n\n},{\"../vue\":11,\"./carousel\":3,\"./image\":4,\"./stats\":7}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _vue = require('../vue');\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _image = require('./image');\n\nvar _image2 = _interopRequireDefault(_image);\n\nvar _stats = require('./stats');\n\nvar _stats2 = _interopRequireDefault(_stats);\n\nvar _carousel = require('./carousel');\n\nvar _carousel2 = _interopRequireDefault(_carousel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _vue2.default.extend({\n\n    props: ['data'],\n\n    template: '\\n        <div class=\"split\">\\n            <div class=\"panel\">\\n                <component :is=\"left_component\" :data=\\'left_component_data\\'></component>\\n            </div>\\n            <div class=\"panel\">\\n                <component :is=\"right_component\" :data=\\'right_component_data\\'></component>\\n            </div>\\n        </div>\\n    ',\n\n    data: function data() {\n        return {\n            image_url: \"\",\n            video_url: \"\",\n            left_component: \"\",\n            left_component_data: {},\n            right_component: \"\",\n            right_component_data: {}\n        };\n    },\n\n    components: {\n        Image: _image2.default,\n        Carousel: _carousel2.default\n    },\n\n    ready: function ready() {\n        var _this = this;\n\n        this.data.components.forEach(function (component) {\n\n            if (component.location_id == 1) {\n                // location 1\n                if (component.component_type_id == \"1\") {\n                    _this.left_component = \"Image\";\n                    _this.left_component_data = component;\n                } else {\n                    _this.left_component = \"Carousel\";\n                    _this.left_component_data = component;\n                }\n            } else {\n                // location 2\n                if (component.component_type_id == \"1\") {\n                    _this.right_component = \"Image\";\n                    _this.right_component_data = component;\n                } else {\n                    _this.right_component = \"Carousel\";\n                    _this.right_component_data = component;\n                }\n            }\n        });\n    },\n\n\n    methods: {},\n\n    watch: {}\n\n});\n\n},{\"../vue\":11,\"./carousel\":3,\"./image\":4,\"./stats\":7}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _vue = require('../vue');\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// View expects \n// data = {\n//     \"message\" : \"Message\",\n//      \"stats\": [\n//         {\n//             \"stat\" : \"21%\",\n//             \"title\": \"Title 1\"\n//         },\n//         {\n//             \"stat\" : \"28.32 hours\",\n//             \"title\": \"Title 2\"\n//         },\n//         {\n//             \"stat\" : \"12.5 minutes\",\n//             \"title\": \"Title 3\"\n//         }\n//     ]\n// }\n\nexports.default = _vue2.default.extend({\n\n    props: ['data', 'serial'],\n\n    template: '\\n        <div class=\"stats\">\\n            {{title1}}\\n        </div>\\n    ',\n\n    data: function data() {\n        return {\n            title1: \"\"\n        };\n    },\n\n    computed: {},\n\n    ready: function ready() {\n        console.log(this.data);\n\n        this.populateStats();\n    },\n\n\n    methods: {\n\n        populateStats: function populateStats() {\n\n            // Take the data object and match it up to the various placeholders in the template\n\n            this.title1 = this.data.stats[0].title;\n        }\n\n    }\n\n});\n\n},{\"../vue\":11}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _vue = require('../vue');\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _image = require('./image');\n\nvar _image2 = _interopRequireDefault(_image);\n\nvar _carousel = require('./carousel');\n\nvar _carousel2 = _interopRequireDefault(_carousel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _vue2.default.extend({\n\n    props: ['data'],\n\n    template: '\\n        <div class=\"three-up\">\\n            <div class=\"panel\">\\n                <div class=\"split-horizontal\">                \\n                   <component :is=\"top_component\" :data=\\'top_component_data\\'></component>\\n                   <component :is=\"bottom_component\" :data=\\'bottom_component_data\\'></component>\\n                </div>\\n            </div>\\n            <div class=\"panel\">\\n                <component :is=\"right_component\" :data=\\'right_component_data\\'></component>\\n            </div>\\n        </div>\\n    ',\n\n    data: function data() {\n        return {\n            image_url: \"\",\n            video_url: \"\",\n            top_component: \"\",\n            top_component_data: {},\n            bottom_component: \"\",\n            bottom_component_data: {},\n            right_component: \"\",\n            right_component_data: {}\n        };\n    },\n\n    components: {\n        Image: _image2.default,\n        Carousel: _carousel2.default\n    },\n\n    ready: function ready() {\n        var _this = this;\n\n        this.data.components.forEach(function (component) {\n\n            if (component.location_id == 1) {\n                // location 1\n                if (component.component_type_id == \"1\") {\n                    _this.top_component = \"Image\";\n                    _this.top_component_data = component;\n                } else {\n                    _this.top_component = \"Carousel\";\n                    _this.top_component_data = component;\n                }\n            } else if (component.location_id == 2) {\n                // location 2\n                if (component.component_type_id == \"1\") {\n                    _this.bottom_component = \"Image\";\n                    _this.bottom_component_data = component;\n                } else {\n                    _this.bottom_component = \"Carousel\";\n                    _this.bottom_component_data = component;\n                }\n            } else {\n                // location 3\n                if (component.component_type_id == \"1\") {\n                    _this.right_component = \"Image\";\n                    _this.right_component_data = component;\n                } else {\n                    _this.right_component = \"Carousel\";\n                    _this.right_component_data = component;\n                }\n            }\n        });\n    },\n\n\n    methods: {},\n\n    watch: {}\n\n});\n\n},{\"../vue\":11,\"./carousel\":3,\"./image\":4}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _vue = require('../vue');\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _vue2.default.extend({\n\n    props: ['data', 'serial'],\n\n    template: '\\n        <div class=\"welcome\">\\n            <div class=\"welcome__content\">\\n                <h1>Welcome to Screens Project!</h1>\\n                <p>To get this screen setup you can either download the Screens app from your app store or login to the website.</p>\\n                <p>Be sure to add the serial number below and a location description for this screen. Later you can group many screens together into areas.</p>\\n                <h2>The serial number is: {{serial}}</h2>\\n            </div>\\n        </div>\\n    ',\n\n    data: function data() {\n        return {};\n    },\n\n    computed: {},\n\n    ready: function ready() {\n        console.log('Welcome Running');\n    },\n\n\n    methods: {}\n\n});\n\n},{\"../vue\":11}],10:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getConfig = getConfig;\nfunction getConfig() {\n    // //pislice.local\n    var URL = \"//localhost:8000\";\n    var API_ENDPOINT = URL + \"/api/v1\";\n\n    return {\n        \"URL\": URL,\n        \"API_ENDPOINT\": API_ENDPOINT,\n        \"GET_CONTENT\": API_ENDPOINT + \"/getcontent\",\n        \"IMAGE_PATH\": URL + '/file/image'\n    };\n}\n\n},{}],11:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n * Vue.js v1.0.25\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  (typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Vue = factory();\n})(undefined, function () {\n  'use strict';\n\n  function set(obj, key, val) {\n    if (hasOwn(obj, key)) {\n      obj[key] = val;\n      return;\n    }\n    if (obj._isVue) {\n      set(obj._data, key, val);\n      return;\n    }\n    var ob = obj.__ob__;\n    if (!ob) {\n      obj[key] = val;\n      return;\n    }\n    ob.convert(key, val);\n    ob.dep.notify();\n    if (ob.vms) {\n      var i = ob.vms.length;\n      while (i--) {\n        var vm = ob.vms[i];\n        vm._proxy(key);\n        vm._digest();\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Delete a property and trigger change if necessary.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   */\n\n  function del(obj, key) {\n    if (!hasOwn(obj, key)) {\n      return;\n    }\n    delete obj[key];\n    var ob = obj.__ob__;\n    if (!ob) {\n      if (obj._isVue) {\n        delete obj._data[key];\n        obj._digest();\n      }\n      return;\n    }\n    ob.dep.notify();\n    if (ob.vms) {\n      var i = ob.vms.length;\n      while (i--) {\n        var vm = ob.vms[i];\n        vm._unproxy(key);\n        vm._digest();\n      }\n    }\n  }\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check whether the object has the property.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @return {Boolean}\n   */\n\n  function hasOwn(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  }\n\n  /**\n   * Check if an expression is a literal value.\n   *\n   * @param {String} exp\n   * @return {Boolean}\n   */\n\n  var literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\n  function isLiteral(exp) {\n    return literalValueRE.test(exp);\n  }\n\n  /**\n   * Check if a string starts with $ or _\n   *\n   * @param {String} str\n   * @return {Boolean}\n   */\n\n  function isReserved(str) {\n    var c = (str + '').charCodeAt(0);\n    return c === 0x24 || c === 0x5F;\n  }\n\n  /**\n   * Guard text output, make sure undefined outputs\n   * empty string\n   *\n   * @param {*} value\n   * @return {String}\n   */\n\n  function _toString(value) {\n    return value == null ? '' : value.toString();\n  }\n\n  /**\n   * Check and convert possible numeric strings to numbers\n   * before setting back to data\n   *\n   * @param {*} value\n   * @return {*|Number}\n   */\n\n  function toNumber(value) {\n    if (typeof value !== 'string') {\n      return value;\n    } else {\n      var parsed = Number(value);\n      return isNaN(parsed) ? value : parsed;\n    }\n  }\n\n  /**\n   * Convert string boolean literals into real booleans.\n   *\n   * @param {*} value\n   * @return {*|Boolean}\n   */\n\n  function toBoolean(value) {\n    return value === 'true' ? true : value === 'false' ? false : value;\n  }\n\n  /**\n   * Strip quotes from a string\n   *\n   * @param {String} str\n   * @return {String | false}\n   */\n\n  function stripQuotes(str) {\n    var a = str.charCodeAt(0);\n    var b = str.charCodeAt(str.length - 1);\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n  }\n\n  /**\n   * Camelize a hyphen-delmited string.\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var camelizeRE = /-(\\w)/g;\n\n  function camelize(str) {\n    return str.replace(camelizeRE, toUpper);\n  }\n\n  function toUpper(_, c) {\n    return c ? c.toUpperCase() : '';\n  }\n\n  /**\n   * Hyphenate a camelCase string.\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var hyphenateRE = /([a-z\\d])([A-Z])/g;\n\n  function hyphenate(str) {\n    return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n  }\n\n  /**\n   * Converts hyphen/underscore/slash delimitered names into\n   * camelized classNames.\n   *\n   * e.g. my-component => MyComponent\n   *      some_else    => SomeElse\n   *      some/comp    => SomeComp\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\n  function classify(str) {\n    return str.replace(classifyRE, toUpper);\n  }\n\n  /**\n   * Simple bind, faster than native\n   *\n   * @param {Function} fn\n   * @param {Object} ctx\n   * @return {Function}\n   */\n\n  function bind(fn, ctx) {\n    return function (a) {\n      var l = arguments.length;\n      return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n    };\n  }\n\n  /**\n   * Convert an Array-like object to a real Array.\n   *\n   * @param {Array-like} list\n   * @param {Number} [start] - start index\n   * @return {Array}\n   */\n\n  function toArray(list, start) {\n    start = start || 0;\n    var i = list.length - start;\n    var ret = new Array(i);\n    while (i--) {\n      ret[i] = list[i + start];\n    }\n    return ret;\n  }\n\n  /**\n   * Mix properties into target object.\n   *\n   * @param {Object} to\n   * @param {Object} from\n   */\n\n  function extend(to, from) {\n    var keys = Object.keys(from);\n    var i = keys.length;\n    while (i--) {\n      to[keys[i]] = from[keys[i]];\n    }\n    return to;\n  }\n\n  /**\n   * Quick object check - this is primarily used to tell\n   * Objects from primitive values when we know the value\n   * is a JSON-compliant type.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  function isObject(obj) {\n    return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n  }\n\n  /**\n   * Strict object type check. Only returns true\n   * for plain JavaScript objects.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  var toString = Object.prototype.toString;\n  var OBJECT_STRING = '[object Object]';\n\n  function isPlainObject(obj) {\n    return toString.call(obj) === OBJECT_STRING;\n  }\n\n  /**\n   * Array type check.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  var isArray = Array.isArray;\n\n  /**\n   * Define a property.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @param {*} val\n   * @param {Boolean} [enumerable]\n   */\n\n  function def(obj, key, val, enumerable) {\n    Object.defineProperty(obj, key, {\n      value: val,\n      enumerable: !!enumerable,\n      writable: true,\n      configurable: true\n    });\n  }\n\n  /**\n   * Debounce a function so it only gets called after the\n   * input stops arriving after the given wait period.\n   *\n   * @param {Function} func\n   * @param {Number} wait\n   * @return {Function} - the debounced function\n   */\n\n  function _debounce(func, wait) {\n    var timeout, args, context, timestamp, result;\n    var later = function later() {\n      var last = Date.now() - timestamp;\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    };\n    return function () {\n      context = this;\n      args = arguments;\n      timestamp = Date.now();\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Manual indexOf because it's slightly faster than\n   * native.\n   *\n   * @param {Array} arr\n   * @param {*} obj\n   */\n\n  function indexOf(arr, obj) {\n    var i = arr.length;\n    while (i--) {\n      if (arr[i] === obj) return i;\n    }\n    return -1;\n  }\n\n  /**\n   * Make a cancellable version of an async callback.\n   *\n   * @param {Function} fn\n   * @return {Function}\n   */\n\n  function cancellable(fn) {\n    var cb = function cb() {\n      if (!cb.cancelled) {\n        return fn.apply(this, arguments);\n      }\n    };\n    cb.cancel = function () {\n      cb.cancelled = true;\n    };\n    return cb;\n  }\n\n  /**\n   * Check if two values are loosely equal - that is,\n   * if they are plain objects, do they have the same shape?\n   *\n   * @param {*} a\n   * @param {*} b\n   * @return {Boolean}\n   */\n\n  function looseEqual(a, b) {\n    /* eslint-disable eqeqeq */\n    return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n    /* eslint-enable eqeqeq */\n  }\n\n  var hasProto = '__proto__' in {};\n\n  // Browser environment sniffing\n  var inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n  // detect devtools\n  var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n  // UA sniffing for working around browser-specific quirks\n  var UA = inBrowser && window.navigator.userAgent.toLowerCase();\n  var isIE = UA && UA.indexOf('trident') > 0;\n  var isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n  var isAndroid = UA && UA.indexOf('android') > 0;\n  var isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n  var iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n  var iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n  // detecting iOS UIWebView by indexedDB\n  var hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\n  var transitionProp = undefined;\n  var transitionEndEvent = undefined;\n  var animationProp = undefined;\n  var animationEndEvent = undefined;\n\n  // Transition property/event sniffing\n  if (inBrowser && !isIE9) {\n    var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n    var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n    transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n    transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n    animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n    animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n  }\n\n  /**\n   * Defer a task to execute it asynchronously. Ideally this\n   * should be executed as a microtask, so we leverage\n   * MutationObserver if it's available, and fallback to\n   * setTimeout(0).\n   *\n   * @param {Function} cb\n   * @param {Object} ctx\n   */\n\n  var nextTick = function () {\n    var callbacks = [];\n    var pending = false;\n    var timerFunc;\n    function nextTickHandler() {\n      pending = false;\n      var copies = callbacks.slice(0);\n      callbacks = [];\n      for (var i = 0; i < copies.length; i++) {\n        copies[i]();\n      }\n    }\n\n    /* istanbul ignore if */\n    if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n      var counter = 1;\n      var observer = new MutationObserver(nextTickHandler);\n      var textNode = document.createTextNode(counter);\n      observer.observe(textNode, {\n        characterData: true\n      });\n      timerFunc = function timerFunc() {\n        counter = (counter + 1) % 2;\n        textNode.data = counter;\n      };\n    } else {\n      // webpack attempts to inject a shim for setImmediate\n      // if it is used as a global, so we have to work around that to\n      // avoid bundling unnecessary code.\n      var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n      timerFunc = context.setImmediate || setTimeout;\n    }\n    return function (cb, ctx) {\n      var func = ctx ? function () {\n        cb.call(ctx);\n      } : cb;\n      callbacks.push(func);\n      if (pending) return;\n      pending = true;\n      timerFunc(nextTickHandler, 0);\n    };\n  }();\n\n  var _Set = undefined;\n  /* istanbul ignore if */\n  if (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n    // use native Set when available.\n    _Set = Set;\n  } else {\n    // a non-standard Set polyfill that only works with primitive keys.\n    _Set = function _Set() {\n      this.set = Object.create(null);\n    };\n    _Set.prototype.has = function (key) {\n      return this.set[key] !== undefined;\n    };\n    _Set.prototype.add = function (key) {\n      this.set[key] = 1;\n    };\n    _Set.prototype.clear = function () {\n      this.set = Object.create(null);\n    };\n  }\n\n  function Cache(limit) {\n    this.size = 0;\n    this.limit = limit;\n    this.head = this.tail = undefined;\n    this._keymap = Object.create(null);\n  }\n\n  var p = Cache.prototype;\n\n  /**\n   * Put <value> into the cache associated with <key>.\n   * Returns the entry which was removed to make room for\n   * the new entry. Otherwise undefined is returned.\n   * (i.e. if there was enough room already).\n   *\n   * @param {String} key\n   * @param {*} value\n   * @return {Entry|undefined}\n   */\n\n  p.put = function (key, value) {\n    var removed;\n\n    var entry = this.get(key, true);\n    if (!entry) {\n      if (this.size === this.limit) {\n        removed = this.shift();\n      }\n      entry = {\n        key: key\n      };\n      this._keymap[key] = entry;\n      if (this.tail) {\n        this.tail.newer = entry;\n        entry.older = this.tail;\n      } else {\n        this.head = entry;\n      }\n      this.tail = entry;\n      this.size++;\n    }\n    entry.value = value;\n\n    return removed;\n  };\n\n  /**\n   * Purge the least recently used (oldest) entry from the\n   * cache. Returns the removed entry or undefined if the\n   * cache was empty.\n   */\n\n  p.shift = function () {\n    var entry = this.head;\n    if (entry) {\n      this.head = this.head.newer;\n      this.head.older = undefined;\n      entry.newer = entry.older = undefined;\n      this._keymap[entry.key] = undefined;\n      this.size--;\n    }\n    return entry;\n  };\n\n  /**\n   * Get and register recent use of <key>. Returns the value\n   * associated with <key> or undefined if not in cache.\n   *\n   * @param {String} key\n   * @param {Boolean} returnEntry\n   * @return {Entry|*}\n   */\n\n  p.get = function (key, returnEntry) {\n    var entry = this._keymap[key];\n    if (entry === undefined) return;\n    if (entry === this.tail) {\n      return returnEntry ? entry : entry.value;\n    }\n    // HEAD--------------TAIL\n    //   <.older   .newer>\n    //  <--- add direction --\n    //   A  B  C  <D>  E\n    if (entry.newer) {\n      if (entry === this.head) {\n        this.head = entry.newer;\n      }\n      entry.newer.older = entry.older; // C <-- E.\n    }\n    if (entry.older) {\n      entry.older.newer = entry.newer; // C. --> E\n    }\n    entry.newer = undefined; // D --x\n    entry.older = this.tail; // D. --> E\n    if (this.tail) {\n      this.tail.newer = entry; // E. <-- D\n    }\n    this.tail = entry;\n    return returnEntry ? entry : entry.value;\n  };\n\n  var cache$1 = new Cache(1000);\n  var filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n  var reservedArgRE = /^in$|^-?\\d+/;\n\n  /**\n   * Parser state\n   */\n\n  var str;\n  var dir;\n  var c;\n  var prev;\n  var i;\n  var l;\n  var lastFilterIndex;\n  var inSingle;\n  var inDouble;\n  var curly;\n  var square;\n  var paren;\n  /**\n   * Push a filter to the current directive object\n   */\n\n  function pushFilter() {\n    var exp = str.slice(lastFilterIndex, i).trim();\n    var filter;\n    if (exp) {\n      filter = {};\n      var tokens = exp.match(filterTokenRE);\n      filter.name = tokens[0];\n      if (tokens.length > 1) {\n        filter.args = tokens.slice(1).map(processFilterArg);\n      }\n    }\n    if (filter) {\n      (dir.filters = dir.filters || []).push(filter);\n    }\n    lastFilterIndex = i + 1;\n  }\n\n  /**\n   * Check if an argument is dynamic and strip quotes.\n   *\n   * @param {String} arg\n   * @return {Object}\n   */\n\n  function processFilterArg(arg) {\n    if (reservedArgRE.test(arg)) {\n      return {\n        value: toNumber(arg),\n        dynamic: false\n      };\n    } else {\n      var stripped = stripQuotes(arg);\n      var dynamic = stripped === arg;\n      return {\n        value: dynamic ? arg : stripped,\n        dynamic: dynamic\n      };\n    }\n  }\n\n  /**\n   * Parse a directive value and extract the expression\n   * and its filters into a descriptor.\n   *\n   * Example:\n   *\n   * \"a + 1 | uppercase\" will yield:\n   * {\n   *   expression: 'a + 1',\n   *   filters: [\n   *     { name: 'uppercase', args: null }\n   *   ]\n   * }\n   *\n   * @param {String} s\n   * @return {Object}\n   */\n\n  function parseDirective(s) {\n    var hit = cache$1.get(s);\n    if (hit) {\n      return hit;\n    }\n\n    // reset parser state\n    str = s;\n    inSingle = inDouble = false;\n    curly = square = paren = 0;\n    lastFilterIndex = 0;\n    dir = {};\n\n    for (i = 0, l = str.length; i < l; i++) {\n      prev = c;\n      c = str.charCodeAt(i);\n      if (inSingle) {\n        // check single quote\n        if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n      } else if (inDouble) {\n        // check double quote\n        if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n      } else if (c === 0x7C && // pipe\n      str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n        if (dir.expression == null) {\n          // first filter, end of expression\n          lastFilterIndex = i + 1;\n          dir.expression = str.slice(0, i).trim();\n        } else {\n          // already has filter\n          pushFilter();\n        }\n      } else {\n        switch (c) {\n          case 0x22:\n            inDouble = true;break; // \"\n          case 0x27:\n            inSingle = true;break; // '\n          case 0x28:\n            paren++;break; // (\n          case 0x29:\n            paren--;break; // )\n          case 0x5B:\n            square++;break; // [\n          case 0x5D:\n            square--;break; // ]\n          case 0x7B:\n            curly++;break; // {\n          case 0x7D:\n            curly--;break; // }\n        }\n      }\n    }\n\n    if (dir.expression == null) {\n      dir.expression = str.slice(0, i).trim();\n    } else if (lastFilterIndex !== 0) {\n      pushFilter();\n    }\n\n    cache$1.put(s, dir);\n    return dir;\n  }\n\n  var directive = Object.freeze({\n    parseDirective: parseDirective\n  });\n\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var cache = undefined;\n  var tagRE = undefined;\n  var htmlRE = undefined;\n  /**\n   * Escape a string so it can be used in a RegExp\n   * constructor.\n   *\n   * @param {String} str\n   */\n\n  function escapeRegex(str) {\n    return str.replace(regexEscapeRE, '\\\\$&');\n  }\n\n  function compileRegex() {\n    var open = escapeRegex(config.delimiters[0]);\n    var close = escapeRegex(config.delimiters[1]);\n    var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n    var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n    tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n    htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n    // reset cache\n    cache = new Cache(1000);\n  }\n\n  /**\n   * Parse a template text string into an array of tokens.\n   *\n   * @param {String} text\n   * @return {Array<Object> | null}\n   *               - {String} type\n   *               - {String} value\n   *               - {Boolean} [html]\n   *               - {Boolean} [oneTime]\n   */\n\n  function parseText(text) {\n    if (!cache) {\n      compileRegex();\n    }\n    var hit = cache.get(text);\n    if (hit) {\n      return hit;\n    }\n    if (!tagRE.test(text)) {\n      return null;\n    }\n    var tokens = [];\n    var lastIndex = tagRE.lastIndex = 0;\n    var match, index, html, value, first, oneTime;\n    /* eslint-disable no-cond-assign */\n    while (match = tagRE.exec(text)) {\n      /* eslint-enable no-cond-assign */\n      index = match.index;\n      // push text token\n      if (index > lastIndex) {\n        tokens.push({\n          value: text.slice(lastIndex, index)\n        });\n      }\n      // tag token\n      html = htmlRE.test(match[0]);\n      value = html ? match[1] : match[2];\n      first = value.charCodeAt(0);\n      oneTime = first === 42; // *\n      value = oneTime ? value.slice(1) : value;\n      tokens.push({\n        tag: true,\n        value: value.trim(),\n        html: html,\n        oneTime: oneTime\n      });\n      lastIndex = index + match[0].length;\n    }\n    if (lastIndex < text.length) {\n      tokens.push({\n        value: text.slice(lastIndex)\n      });\n    }\n    cache.put(text, tokens);\n    return tokens;\n  }\n\n  /**\n   * Format a list of tokens into an expression.\n   * e.g. tokens parsed from 'a {{b}} c' can be serialized\n   * into one single expression as '\"a \" + b + \" c\"'.\n   *\n   * @param {Array} tokens\n   * @param {Vue} [vm]\n   * @return {String}\n   */\n\n  function tokensToExp(tokens, vm) {\n    if (tokens.length > 1) {\n      return tokens.map(function (token) {\n        return formatToken(token, vm);\n      }).join('+');\n    } else {\n      return formatToken(tokens[0], vm, true);\n    }\n  }\n\n  /**\n   * Format a single token.\n   *\n   * @param {Object} token\n   * @param {Vue} [vm]\n   * @param {Boolean} [single]\n   * @return {String}\n   */\n\n  function formatToken(token, vm, single) {\n    return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n  }\n\n  /**\n   * For an attribute with multiple interpolation tags,\n   * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n   * the whole thing into a single watchable expression, we\n   * have to inline those filters. This function does exactly\n   * that. This is a bit hacky but it avoids heavy changes\n   * to directive parser and watcher mechanism.\n   *\n   * @param {String} exp\n   * @param {Boolean} single\n   * @return {String}\n   */\n\n  var filterRE = /[^|]\\|[^|]/;\n  function inlineFilters(exp, single) {\n    if (!filterRE.test(exp)) {\n      return single ? exp : '(' + exp + ')';\n    } else {\n      var dir = parseDirective(exp);\n      if (!dir.filters) {\n        return '(' + exp + ')';\n      } else {\n        return 'this._applyFilters(' + dir.expression + // value\n        ',null,' + // oldValue (null for read)\n        JSON.stringify(dir.filters) + // filter descriptors\n        ',false)'; // write?\n      }\n    }\n  }\n\n  var text = Object.freeze({\n    compileRegex: compileRegex,\n    parseText: parseText,\n    tokensToExp: tokensToExp\n  });\n\n  var delimiters = ['{{', '}}'];\n  var unsafeDelimiters = ['{{{', '}}}'];\n\n  var config = Object.defineProperties({\n\n    /**\n     * Whether to print debug messages.\n     * Also enables stack trace for warnings.\n     *\n     * @type {Boolean}\n     */\n\n    debug: false,\n\n    /**\n     * Whether to suppress warnings.\n     *\n     * @type {Boolean}\n     */\n\n    silent: false,\n\n    /**\n     * Whether to use async rendering.\n     */\n\n    async: true,\n\n    /**\n     * Whether to warn against errors caught when evaluating\n     * expressions.\n     */\n\n    warnExpressionErrors: true,\n\n    /**\n     * Whether to allow devtools inspection.\n     * Disabled by default in production builds.\n     */\n\n    devtools: 'development' !== 'production',\n\n    /**\n     * Internal flag to indicate the delimiters have been\n     * changed.\n     *\n     * @type {Boolean}\n     */\n\n    _delimitersChanged: true,\n\n    /**\n     * List of asset types that a component can own.\n     *\n     * @type {Array}\n     */\n\n    _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n    /**\n     * prop binding modes\n     */\n\n    _propBindingModes: {\n      ONE_WAY: 0,\n      TWO_WAY: 1,\n      ONE_TIME: 2\n    },\n\n    /**\n     * Max circular updates allowed in a batcher flush cycle.\n     */\n\n    _maxUpdateCount: 100\n\n  }, {\n    delimiters: { /**\n                   * Interpolation delimiters. Changing these would trigger\n                   * the text parser to re-compile the regular expressions.\n                   *\n                   * @type {Array<String>}\n                   */\n\n      get: function get() {\n        return delimiters;\n      },\n      set: function set(val) {\n        delimiters = val;\n        compileRegex();\n      },\n      configurable: true,\n      enumerable: true\n    },\n    unsafeDelimiters: {\n      get: function get() {\n        return unsafeDelimiters;\n      },\n      set: function set(val) {\n        unsafeDelimiters = val;\n        compileRegex();\n      },\n      configurable: true,\n      enumerable: true\n    }\n  });\n\n  var warn = undefined;\n  var formatComponentName = undefined;\n\n  if ('development' !== 'production') {\n    (function () {\n      var hasConsole = typeof console !== 'undefined';\n\n      warn = function warn(msg, vm) {\n        if (hasConsole && !config.silent) {\n          console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n        }\n      };\n\n      formatComponentName = function formatComponentName(vm) {\n        var name = vm._isVue ? vm.$options.name : vm.name;\n        return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n      };\n    })();\n  }\n\n  /**\n   * Append with transition.\n   *\n   * @param {Element} el\n   * @param {Element} target\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function appendWithTransition(el, target, vm, cb) {\n    applyTransition(el, 1, function () {\n      target.appendChild(el);\n    }, vm, cb);\n  }\n\n  /**\n   * InsertBefore with transition.\n   *\n   * @param {Element} el\n   * @param {Element} target\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function beforeWithTransition(el, target, vm, cb) {\n    applyTransition(el, 1, function () {\n      before(el, target);\n    }, vm, cb);\n  }\n\n  /**\n   * Remove with transition.\n   *\n   * @param {Element} el\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function removeWithTransition(el, vm, cb) {\n    applyTransition(el, -1, function () {\n      remove(el);\n    }, vm, cb);\n  }\n\n  /**\n   * Apply transitions with an operation callback.\n   *\n   * @param {Element} el\n   * @param {Number} direction\n   *                  1: enter\n   *                 -1: leave\n   * @param {Function} op - the actual DOM operation\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function applyTransition(el, direction, op, vm, cb) {\n    var transition = el.__v_trans;\n    if (!transition ||\n    // skip if there are no js hooks and CSS transition is\n    // not supported\n    !transition.hooks && !transitionEndEvent ||\n    // skip transitions for initial compile\n    !vm._isCompiled ||\n    // if the vm is being manipulated by a parent directive\n    // during the parent's compilation phase, skip the\n    // animation.\n    vm.$parent && !vm.$parent._isCompiled) {\n      op();\n      if (cb) cb();\n      return;\n    }\n    var action = direction > 0 ? 'enter' : 'leave';\n    transition[action](op, cb);\n  }\n\n  var transition = Object.freeze({\n    appendWithTransition: appendWithTransition,\n    beforeWithTransition: beforeWithTransition,\n    removeWithTransition: removeWithTransition,\n    applyTransition: applyTransition\n  });\n\n  /**\n   * Query an element selector if it's not an element already.\n   *\n   * @param {String|Element} el\n   * @return {Element}\n   */\n\n  function query(el) {\n    if (typeof el === 'string') {\n      var selector = el;\n      el = document.querySelector(el);\n      if (!el) {\n        'development' !== 'production' && warn('Cannot find element: ' + selector);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Check if a node is in the document.\n   * Note: document.documentElement.contains should work here\n   * but always returns false for comment nodes in phantomjs,\n   * making unit tests difficult. This is fixed by doing the\n   * contains() check on the node's parentNode instead of\n   * the node itself.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function inDoc(node) {\n    if (!node) return false;\n    var doc = node.ownerDocument.documentElement;\n    var parent = node.parentNode;\n    return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n  }\n\n  /**\n   * Get and remove an attribute from a node.\n   *\n   * @param {Node} node\n   * @param {String} _attr\n   */\n\n  function getAttr(node, _attr) {\n    var val = node.getAttribute(_attr);\n    if (val !== null) {\n      node.removeAttribute(_attr);\n    }\n    return val;\n  }\n\n  /**\n   * Get an attribute with colon or v-bind: prefix.\n   *\n   * @param {Node} node\n   * @param {String} name\n   * @return {String|null}\n   */\n\n  function getBindAttr(node, name) {\n    var val = getAttr(node, ':' + name);\n    if (val === null) {\n      val = getAttr(node, 'v-bind:' + name);\n    }\n    return val;\n  }\n\n  /**\n   * Check the presence of a bind attribute.\n   *\n   * @param {Node} node\n   * @param {String} name\n   * @return {Boolean}\n   */\n\n  function hasBindAttr(node, name) {\n    return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n  }\n\n  /**\n   * Insert el before target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function before(el, target) {\n    target.parentNode.insertBefore(el, target);\n  }\n\n  /**\n   * Insert el after target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function after(el, target) {\n    if (target.nextSibling) {\n      before(el, target.nextSibling);\n    } else {\n      target.parentNode.appendChild(el);\n    }\n  }\n\n  /**\n   * Remove el from DOM\n   *\n   * @param {Element} el\n   */\n\n  function remove(el) {\n    el.parentNode.removeChild(el);\n  }\n\n  /**\n   * Prepend el to target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function prepend(el, target) {\n    if (target.firstChild) {\n      before(el, target.firstChild);\n    } else {\n      target.appendChild(el);\n    }\n  }\n\n  /**\n   * Replace target with el\n   *\n   * @param {Element} target\n   * @param {Element} el\n   */\n\n  function replace(target, el) {\n    var parent = target.parentNode;\n    if (parent) {\n      parent.replaceChild(el, target);\n    }\n  }\n\n  /**\n   * Add event listener shorthand.\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Function} cb\n   * @param {Boolean} [useCapture]\n   */\n\n  function on(el, event, cb, useCapture) {\n    el.addEventListener(event, cb, useCapture);\n  }\n\n  /**\n   * Remove event listener shorthand.\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Function} cb\n   */\n\n  function off(el, event, cb) {\n    el.removeEventListener(event, cb);\n  }\n\n  /**\n   * For IE9 compat: when both class and :class are present\n   * getAttribute('class') returns wrong value...\n   *\n   * @param {Element} el\n   * @return {String}\n   */\n\n  function getClass(el) {\n    var classname = el.className;\n    if ((typeof classname === 'undefined' ? 'undefined' : _typeof(classname)) === 'object') {\n      classname = classname.baseVal || '';\n    }\n    return classname;\n  }\n\n  /**\n   * In IE9, setAttribute('class') will result in empty class\n   * if the element also has the :class attribute; However in\n   * PhantomJS, setting `className` does not work on SVG elements...\n   * So we have to do a conditional check here.\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function setClass(el, cls) {\n    /* istanbul ignore if */\n    if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n      el.className = cls;\n    } else {\n      el.setAttribute('class', cls);\n    }\n  }\n\n  /**\n   * Add class with compatibility for IE & SVG\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function addClass(el, cls) {\n    if (el.classList) {\n      el.classList.add(cls);\n    } else {\n      var cur = ' ' + getClass(el) + ' ';\n      if (cur.indexOf(' ' + cls + ' ') < 0) {\n        setClass(el, (cur + cls).trim());\n      }\n    }\n  }\n\n  /**\n   * Remove class with compatibility for IE & SVG\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function removeClass(el, cls) {\n    if (el.classList) {\n      el.classList.remove(cls);\n    } else {\n      var cur = ' ' + getClass(el) + ' ';\n      var tar = ' ' + cls + ' ';\n      while (cur.indexOf(tar) >= 0) {\n        cur = cur.replace(tar, ' ');\n      }\n      setClass(el, cur.trim());\n    }\n    if (!el.className) {\n      el.removeAttribute('class');\n    }\n  }\n\n  /**\n   * Extract raw content inside an element into a temporary\n   * container div\n   *\n   * @param {Element} el\n   * @param {Boolean} asFragment\n   * @return {Element|DocumentFragment}\n   */\n\n  function extractContent(el, asFragment) {\n    var child;\n    var rawContent;\n    /* istanbul ignore if */\n    if (isTemplate(el) && isFragment(el.content)) {\n      el = el.content;\n    }\n    if (el.hasChildNodes()) {\n      trimNode(el);\n      rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n      /* eslint-disable no-cond-assign */\n      while (child = el.firstChild) {\n        /* eslint-enable no-cond-assign */\n        rawContent.appendChild(child);\n      }\n    }\n    return rawContent;\n  }\n\n  /**\n   * Trim possible empty head/tail text and comment\n   * nodes inside a parent.\n   *\n   * @param {Node} node\n   */\n\n  function trimNode(node) {\n    var child;\n    /* eslint-disable no-sequences */\n    while (child = node.firstChild, isTrimmable(child)) {\n      node.removeChild(child);\n    }\n    while (child = node.lastChild, isTrimmable(child)) {\n      node.removeChild(child);\n    }\n    /* eslint-enable no-sequences */\n  }\n\n  function isTrimmable(node) {\n    return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n  }\n\n  /**\n   * Check if an element is a template tag.\n   * Note if the template appears inside an SVG its tagName\n   * will be in lowercase.\n   *\n   * @param {Element} el\n   */\n\n  function isTemplate(el) {\n    return el.tagName && el.tagName.toLowerCase() === 'template';\n  }\n\n  /**\n   * Create an \"anchor\" for performing dom insertion/removals.\n   * This is used in a number of scenarios:\n   * - fragment instance\n   * - v-html\n   * - v-if\n   * - v-for\n   * - component\n   *\n   * @param {String} content\n   * @param {Boolean} persist - IE trashes empty textNodes on\n   *                            cloneNode(true), so in certain\n   *                            cases the anchor needs to be\n   *                            non-empty to be persisted in\n   *                            templates.\n   * @return {Comment|Text}\n   */\n\n  function createAnchor(content, persist) {\n    var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n    anchor.__v_anchor = true;\n    return anchor;\n  }\n\n  /**\n   * Find a component ref attribute that starts with $.\n   *\n   * @param {Element} node\n   * @return {String|undefined}\n   */\n\n  var refRE = /^v-ref:/;\n\n  function findRef(node) {\n    if (node.hasAttributes()) {\n      var attrs = node.attributes;\n      for (var i = 0, l = attrs.length; i < l; i++) {\n        var name = attrs[i].name;\n        if (refRE.test(name)) {\n          return camelize(name.replace(refRE, ''));\n        }\n      }\n    }\n  }\n\n  /**\n   * Map a function to a range of nodes .\n   *\n   * @param {Node} node\n   * @param {Node} end\n   * @param {Function} op\n   */\n\n  function mapNodeRange(node, end, op) {\n    var next;\n    while (node !== end) {\n      next = node.nextSibling;\n      op(node);\n      node = next;\n    }\n    op(end);\n  }\n\n  /**\n   * Remove a range of nodes with transition, store\n   * the nodes in a fragment with correct ordering,\n   * and call callback when done.\n   *\n   * @param {Node} start\n   * @param {Node} end\n   * @param {Vue} vm\n   * @param {DocumentFragment} frag\n   * @param {Function} cb\n   */\n\n  function removeNodeRange(start, end, vm, frag, cb) {\n    var done = false;\n    var removed = 0;\n    var nodes = [];\n    mapNodeRange(start, end, function (node) {\n      if (node === end) done = true;\n      nodes.push(node);\n      removeWithTransition(node, vm, onRemoved);\n    });\n    function onRemoved() {\n      removed++;\n      if (done && removed >= nodes.length) {\n        for (var i = 0; i < nodes.length; i++) {\n          frag.appendChild(nodes[i]);\n        }\n        cb && cb();\n      }\n    }\n  }\n\n  /**\n   * Check if a node is a DocumentFragment.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function isFragment(node) {\n    return node && node.nodeType === 11;\n  }\n\n  /**\n   * Get outerHTML of elements, taking care\n   * of SVG elements in IE as well.\n   *\n   * @param {Element} el\n   * @return {String}\n   */\n\n  function getOuterHTML(el) {\n    if (el.outerHTML) {\n      return el.outerHTML;\n    } else {\n      var container = document.createElement('div');\n      container.appendChild(el.cloneNode(true));\n      return container.innerHTML;\n    }\n  }\n\n  var commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n  var reservedTagRE = /^(slot|partial|component)$/i;\n\n  var isUnknownElement = undefined;\n  if ('development' !== 'production') {\n    isUnknownElement = function isUnknownElement(el, tag) {\n      if (tag.indexOf('-') > -1) {\n        // http://stackoverflow.com/a/28210364/1070244\n        return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n      } else {\n        return (/HTMLUnknownElement/.test(el.toString()) &&\n          // Chrome returns unknown for several HTML5 elements.\n          // https://code.google.com/p/chromium/issues/detail?id=540526\n          // Firefox returns unknown for some \"Interactive elements.\"\n          !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n        );\n      }\n    };\n  }\n\n  /**\n   * Check if an element is a component, if yes return its\n   * component id.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Object|undefined}\n   */\n\n  function checkComponentAttr(el, options) {\n    var tag = el.tagName.toLowerCase();\n    var hasAttrs = el.hasAttributes();\n    if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n      if (resolveAsset(options, 'components', tag)) {\n        return { id: tag };\n      } else {\n        var is = hasAttrs && getIsBinding(el, options);\n        if (is) {\n          return is;\n        } else if ('development' !== 'production') {\n          var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n          if (expectedTag) {\n            warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n          } else if (isUnknownElement(el, tag)) {\n            warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n          }\n        }\n      }\n    } else if (hasAttrs) {\n      return getIsBinding(el, options);\n    }\n  }\n\n  /**\n   * Get \"is\" binding from an element.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Object|undefined}\n   */\n\n  function getIsBinding(el, options) {\n    // dynamic syntax\n    var exp = el.getAttribute('is');\n    if (exp != null) {\n      if (resolveAsset(options, 'components', exp)) {\n        el.removeAttribute('is');\n        return { id: exp };\n      }\n    } else {\n      exp = getBindAttr(el, 'is');\n      if (exp != null) {\n        return { id: exp, dynamic: true };\n      }\n    }\n  }\n\n  /**\n   * Option overwriting strategies are functions that handle\n   * how to merge a parent option value and a child option\n   * value into the final value.\n   *\n   * All strategy functions follow the same signature:\n   *\n   * @param {*} parentVal\n   * @param {*} childVal\n   * @param {Vue} [vm]\n   */\n\n  var strats = config.optionMergeStrategies = Object.create(null);\n\n  /**\n   * Helper that recursively merges two data objects together.\n   */\n\n  function mergeData(to, from) {\n    var key, toVal, fromVal;\n    for (key in from) {\n      toVal = to[key];\n      fromVal = from[key];\n      if (!hasOwn(to, key)) {\n        set(to, key, fromVal);\n      } else if (isObject(toVal) && isObject(fromVal)) {\n        mergeData(toVal, fromVal);\n      }\n    }\n    return to;\n  }\n\n  /**\n   * Data\n   */\n\n  strats.data = function (parentVal, childVal, vm) {\n    if (!vm) {\n      // in a Vue.extend merge, both should be functions\n      if (!childVal) {\n        return parentVal;\n      }\n      if (typeof childVal !== 'function') {\n        'development' !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n        return parentVal;\n      }\n      if (!parentVal) {\n        return childVal;\n      }\n      // when parentVal & childVal are both present,\n      // we need to return a function that returns the\n      // merged result of both functions... no need to\n      // check if parentVal is a function here because\n      // it has to be a function to pass previous merges.\n      return function mergedDataFn() {\n        return mergeData(childVal.call(this), parentVal.call(this));\n      };\n    } else if (parentVal || childVal) {\n      return function mergedInstanceDataFn() {\n        // instance merge\n        var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n        var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n        if (instanceData) {\n          return mergeData(instanceData, defaultData);\n        } else {\n          return defaultData;\n        }\n      };\n    }\n  };\n\n  /**\n   * El\n   */\n\n  strats.el = function (parentVal, childVal, vm) {\n    if (!vm && childVal && typeof childVal !== 'function') {\n      'development' !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return;\n    }\n    var ret = childVal || parentVal;\n    // invoke the element factory if this is instance merge\n    return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n  };\n\n  /**\n   * Hooks and param attributes are merged as arrays.\n   */\n\n  strats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n    return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n  };\n\n  /**\n   * Assets\n   *\n   * When a vm is present (instance creation), we need to do\n   * a three-way merge between constructor options, instance\n   * options and parent options.\n   */\n\n  function mergeAssets(parentVal, childVal) {\n    var res = Object.create(parentVal || null);\n    return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n  }\n\n  config._assetTypes.forEach(function (type) {\n    strats[type + 's'] = mergeAssets;\n  });\n\n  /**\n   * Events & Watchers.\n   *\n   * Events & watchers hashes should not overwrite one\n   * another, so we merge them as arrays.\n   */\n\n  strats.watch = strats.events = function (parentVal, childVal) {\n    if (!childVal) return parentVal;\n    if (!parentVal) return childVal;\n    var ret = {};\n    extend(ret, parentVal);\n    for (var key in childVal) {\n      var parent = ret[key];\n      var child = childVal[key];\n      if (parent && !isArray(parent)) {\n        parent = [parent];\n      }\n      ret[key] = parent ? parent.concat(child) : [child];\n    }\n    return ret;\n  };\n\n  /**\n   * Other object hashes.\n   */\n\n  strats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n    if (!childVal) return parentVal;\n    if (!parentVal) return childVal;\n    var ret = Object.create(null);\n    extend(ret, parentVal);\n    extend(ret, childVal);\n    return ret;\n  };\n\n  /**\n   * Default strategy.\n   */\n\n  var defaultStrat = function defaultStrat(parentVal, childVal) {\n    return childVal === undefined ? parentVal : childVal;\n  };\n\n  /**\n   * Make sure component options get converted to actual\n   * constructors.\n   *\n   * @param {Object} options\n   */\n\n  function guardComponents(options) {\n    if (options.components) {\n      var components = options.components = guardArrayAssets(options.components);\n      var ids = Object.keys(components);\n      var def;\n      if ('development' !== 'production') {\n        var map = options._componentNameMap = {};\n      }\n      for (var i = 0, l = ids.length; i < l; i++) {\n        var key = ids[i];\n        if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n          'development' !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n          continue;\n        }\n        // record a all lowercase <-> kebab-case mapping for\n        // possible custom element case error warning\n        if ('development' !== 'production') {\n          map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n        }\n        def = components[key];\n        if (isPlainObject(def)) {\n          components[key] = Vue.extend(def);\n        }\n      }\n    }\n  }\n\n  /**\n   * Ensure all props option syntax are normalized into the\n   * Object-based format.\n   *\n   * @param {Object} options\n   */\n\n  function guardProps(options) {\n    var props = options.props;\n    var i, val;\n    if (isArray(props)) {\n      options.props = {};\n      i = props.length;\n      while (i--) {\n        val = props[i];\n        if (typeof val === 'string') {\n          options.props[val] = null;\n        } else if (val.name) {\n          options.props[val.name] = val;\n        }\n      }\n    } else if (isPlainObject(props)) {\n      var keys = Object.keys(props);\n      i = keys.length;\n      while (i--) {\n        val = props[keys[i]];\n        if (typeof val === 'function') {\n          props[keys[i]] = { type: val };\n        }\n      }\n    }\n  }\n\n  /**\n   * Guard an Array-format assets option and converted it\n   * into the key-value Object format.\n   *\n   * @param {Object|Array} assets\n   * @return {Object}\n   */\n\n  function guardArrayAssets(assets) {\n    if (isArray(assets)) {\n      var res = {};\n      var i = assets.length;\n      var asset;\n      while (i--) {\n        asset = assets[i];\n        var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n        if (!id) {\n          'development' !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n        } else {\n          res[id] = asset;\n        }\n      }\n      return res;\n    }\n    return assets;\n  }\n\n  /**\n   * Merge two option objects into a new one.\n   * Core utility used in both instantiation and inheritance.\n   *\n   * @param {Object} parent\n   * @param {Object} child\n   * @param {Vue} [vm] - if vm is present, indicates this is\n   *                     an instantiation merge.\n   */\n\n  function mergeOptions(parent, child, vm) {\n    guardComponents(child);\n    guardProps(child);\n    if ('development' !== 'production') {\n      if (child.propsData && !vm) {\n        warn('propsData can only be used as an instantiation option.');\n      }\n    }\n    var options = {};\n    var key;\n    if (child['extends']) {\n      parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        var mixin = child.mixins[i];\n        var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n        parent = mergeOptions(parent, mixinOptions, vm);\n      }\n    }\n    for (key in parent) {\n      mergeField(key);\n    }\n    for (key in child) {\n      if (!hasOwn(parent, key)) {\n        mergeField(key);\n      }\n    }\n    function mergeField(key) {\n      var strat = strats[key] || defaultStrat;\n      options[key] = strat(parent[key], child[key], vm, key);\n    }\n    return options;\n  }\n\n  /**\n   * Resolve an asset.\n   * This function is used because child instances need access\n   * to assets defined in its ancestor chain.\n   *\n   * @param {Object} options\n   * @param {String} type\n   * @param {String} id\n   * @param {Boolean} warnMissing\n   * @return {Object|Function}\n   */\n\n  function resolveAsset(options, type, id, warnMissing) {\n    /* istanbul ignore if */\n    if (typeof id !== 'string') {\n      return;\n    }\n    var assets = options[type];\n    var camelizedId;\n    var res = assets[id] ||\n    // camelCase ID\n    assets[camelizedId = camelize(id)] ||\n    // Pascal Case ID\n    assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n    if ('development' !== 'production' && warnMissing && !res) {\n      warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n    }\n    return res;\n  }\n\n  var uid$1 = 0;\n\n  /**\n   * A dep is an observable that can have multiple\n   * directives subscribing to it.\n   *\n   * @constructor\n   */\n  function Dep() {\n    this.id = uid$1++;\n    this.subs = [];\n  }\n\n  // the current target watcher being evaluated.\n  // this is globally unique because there could be only one\n  // watcher being evaluated at any time.\n  Dep.target = null;\n\n  /**\n   * Add a directive subscriber.\n   *\n   * @param {Directive} sub\n   */\n\n  Dep.prototype.addSub = function (sub) {\n    this.subs.push(sub);\n  };\n\n  /**\n   * Remove a directive subscriber.\n   *\n   * @param {Directive} sub\n   */\n\n  Dep.prototype.removeSub = function (sub) {\n    this.subs.$remove(sub);\n  };\n\n  /**\n   * Add self as a dependency to the target watcher.\n   */\n\n  Dep.prototype.depend = function () {\n    Dep.target.addDep(this);\n  };\n\n  /**\n   * Notify all subscribers of a new value.\n   */\n\n  Dep.prototype.notify = function () {\n    // stablize the subscriber list first\n    var subs = toArray(this.subs);\n    for (var i = 0, l = subs.length; i < l; i++) {\n      subs[i].update();\n    }\n  };\n\n  var arrayProto = Array.prototype;\n  var arrayMethods = Object.create(arrayProto)\n\n  /**\n   * Intercept mutating methods and emit events\n   */\n\n  ;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n    // cache original method\n    var original = arrayProto[method];\n    def(arrayMethods, method, function mutator() {\n      // avoid leaking arguments:\n      // http://jsperf.com/closure-with-arguments\n      var i = arguments.length;\n      var args = new Array(i);\n      while (i--) {\n        args[i] = arguments[i];\n      }\n      var result = original.apply(this, args);\n      var ob = this.__ob__;\n      var inserted;\n      switch (method) {\n        case 'push':\n          inserted = args;\n          break;\n        case 'unshift':\n          inserted = args;\n          break;\n        case 'splice':\n          inserted = args.slice(2);\n          break;\n      }\n      if (inserted) ob.observeArray(inserted);\n      // notify change\n      ob.dep.notify();\n      return result;\n    });\n  });\n\n  /**\n   * Swap the element at the given index with a new value\n   * and emits corresponding event.\n   *\n   * @param {Number} index\n   * @param {*} val\n   * @return {*} - replaced element\n   */\n\n  def(arrayProto, '$set', function $set(index, val) {\n    if (index >= this.length) {\n      this.length = Number(index) + 1;\n    }\n    return this.splice(index, 1, val)[0];\n  });\n\n  /**\n   * Convenience method to remove the element at given index or target element reference.\n   *\n   * @param {*} item\n   */\n\n  def(arrayProto, '$remove', function $remove(item) {\n    /* istanbul ignore if */\n    if (!this.length) return;\n    var index = indexOf(this, item);\n    if (index > -1) {\n      return this.splice(index, 1);\n    }\n  });\n\n  var arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n  /**\n   * By default, when a reactive property is set, the new value is\n   * also converted to become reactive. However in certain cases, e.g.\n   * v-for scope alias and props, we don't want to force conversion\n   * because the value may be a nested value under a frozen data structure.\n   *\n   * So whenever we want to set a reactive property without forcing\n   * conversion on the new value, we wrap that call inside this function.\n   */\n\n  var shouldConvert = true;\n\n  function withoutConversion(fn) {\n    shouldConvert = false;\n    fn();\n    shouldConvert = true;\n  }\n\n  /**\n   * Observer class that are attached to each observed\n   * object. Once attached, the observer converts target\n   * object's property keys into getter/setters that\n   * collect dependencies and dispatches updates.\n   *\n   * @param {Array|Object} value\n   * @constructor\n   */\n\n  function Observer(value) {\n    this.value = value;\n    this.dep = new Dep();\n    def(value, '__ob__', this);\n    if (isArray(value)) {\n      var augment = hasProto ? protoAugment : copyAugment;\n      augment(value, arrayMethods, arrayKeys);\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n\n  // Instance methods\n\n  /**\n   * Walk through each property and convert them into\n   * getter/setters. This method should only be called when\n   * value type is Object.\n   *\n   * @param {Object} obj\n   */\n\n  Observer.prototype.walk = function (obj) {\n    var keys = Object.keys(obj);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      this.convert(keys[i], obj[keys[i]]);\n    }\n  };\n\n  /**\n   * Observe a list of Array items.\n   *\n   * @param {Array} items\n   */\n\n  Observer.prototype.observeArray = function (items) {\n    for (var i = 0, l = items.length; i < l; i++) {\n      observe(items[i]);\n    }\n  };\n\n  /**\n   * Convert a property into getter/setter so we can emit\n   * the events when the property is accessed/changed.\n   *\n   * @param {String} key\n   * @param {*} val\n   */\n\n  Observer.prototype.convert = function (key, val) {\n    defineReactive(this.value, key, val);\n  };\n\n  /**\n   * Add an owner vm, so that when $set/$delete mutations\n   * happen we can notify owner vms to proxy the keys and\n   * digest the watchers. This is only called when the object\n   * is observed as an instance's root $data.\n   *\n   * @param {Vue} vm\n   */\n\n  Observer.prototype.addVm = function (vm) {\n    (this.vms || (this.vms = [])).push(vm);\n  };\n\n  /**\n   * Remove an owner vm. This is called when the object is\n   * swapped out as an instance's $data object.\n   *\n   * @param {Vue} vm\n   */\n\n  Observer.prototype.removeVm = function (vm) {\n    this.vms.$remove(vm);\n  };\n\n  // helpers\n\n  /**\n   * Augment an target Object or Array by intercepting\n   * the prototype chain using __proto__\n   *\n   * @param {Object|Array} target\n   * @param {Object} src\n   */\n\n  function protoAugment(target, src) {\n    /* eslint-disable no-proto */\n    target.__proto__ = src;\n    /* eslint-enable no-proto */\n  }\n\n  /**\n   * Augment an target Object or Array by defining\n   * hidden properties.\n   *\n   * @param {Object|Array} target\n   * @param {Object} proto\n   */\n\n  function copyAugment(target, src, keys) {\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      def(target, key, src[key]);\n    }\n  }\n\n  /**\n   * Attempt to create an observer instance for a value,\n   * returns the new observer if successfully observed,\n   * or the existing observer if the value already has one.\n   *\n   * @param {*} value\n   * @param {Vue} [vm]\n   * @return {Observer|undefined}\n   * @static\n   */\n\n  function observe(value, vm) {\n    if (!value || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n      return;\n    }\n    var ob;\n    if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n      ob = value.__ob__;\n    } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n      ob = new Observer(value);\n    }\n    if (ob && vm) {\n      ob.addVm(vm);\n    }\n    return ob;\n  }\n\n  /**\n   * Define a reactive property on an Object.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @param {*} val\n   */\n\n  function defineReactive(obj, key, val) {\n    var dep = new Dep();\n\n    var property = Object.getOwnPropertyDescriptor(obj, key);\n    if (property && property.configurable === false) {\n      return;\n    }\n\n    // cater for pre-defined getter/setters\n    var getter = property && property.get;\n    var setter = property && property.set;\n\n    var childOb = observe(val);\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      configurable: true,\n      get: function reactiveGetter() {\n        var value = getter ? getter.call(obj) : val;\n        if (Dep.target) {\n          dep.depend();\n          if (childOb) {\n            childOb.dep.depend();\n          }\n          if (isArray(value)) {\n            for (var e, i = 0, l = value.length; i < l; i++) {\n              e = value[i];\n              e && e.__ob__ && e.__ob__.dep.depend();\n            }\n          }\n        }\n        return value;\n      },\n      set: function reactiveSetter(newVal) {\n        var value = getter ? getter.call(obj) : val;\n        if (newVal === value) {\n          return;\n        }\n        if (setter) {\n          setter.call(obj, newVal);\n        } else {\n          val = newVal;\n        }\n        childOb = observe(newVal);\n        dep.notify();\n      }\n    });\n  }\n\n  var util = Object.freeze({\n    defineReactive: defineReactive,\n    set: set,\n    del: del,\n    hasOwn: hasOwn,\n    isLiteral: isLiteral,\n    isReserved: isReserved,\n    _toString: _toString,\n    toNumber: toNumber,\n    toBoolean: toBoolean,\n    stripQuotes: stripQuotes,\n    camelize: camelize,\n    hyphenate: hyphenate,\n    classify: classify,\n    bind: bind,\n    toArray: toArray,\n    extend: extend,\n    isObject: isObject,\n    isPlainObject: isPlainObject,\n    def: def,\n    debounce: _debounce,\n    indexOf: indexOf,\n    cancellable: cancellable,\n    looseEqual: looseEqual,\n    isArray: isArray,\n    hasProto: hasProto,\n    inBrowser: inBrowser,\n    devtools: devtools,\n    isIE: isIE,\n    isIE9: isIE9,\n    isAndroid: isAndroid,\n    isIos: isIos,\n    iosVersionMatch: iosVersionMatch,\n    iosVersion: iosVersion,\n    hasMutationObserverBug: hasMutationObserverBug,\n    get transitionProp() {\n      return transitionProp;\n    },\n    get transitionEndEvent() {\n      return transitionEndEvent;\n    },\n    get animationProp() {\n      return animationProp;\n    },\n    get animationEndEvent() {\n      return animationEndEvent;\n    },\n    nextTick: nextTick,\n    get _Set() {\n      return _Set;\n    },\n    query: query,\n    inDoc: inDoc,\n    getAttr: getAttr,\n    getBindAttr: getBindAttr,\n    hasBindAttr: hasBindAttr,\n    before: before,\n    after: after,\n    remove: remove,\n    prepend: prepend,\n    replace: replace,\n    on: on,\n    off: off,\n    setClass: setClass,\n    addClass: addClass,\n    removeClass: removeClass,\n    extractContent: extractContent,\n    trimNode: trimNode,\n    isTemplate: isTemplate,\n    createAnchor: createAnchor,\n    findRef: findRef,\n    mapNodeRange: mapNodeRange,\n    removeNodeRange: removeNodeRange,\n    isFragment: isFragment,\n    getOuterHTML: getOuterHTML,\n    mergeOptions: mergeOptions,\n    resolveAsset: resolveAsset,\n    checkComponentAttr: checkComponentAttr,\n    commonTagRE: commonTagRE,\n    reservedTagRE: reservedTagRE,\n    get warn() {\n      return warn;\n    }\n  });\n\n  var uid = 0;\n\n  function initMixin(Vue) {\n    /**\n     * The main init sequence. This is called for every\n     * instance, including ones that are created from extended\n     * constructors.\n     *\n     * @param {Object} options - this options object should be\n     *                           the result of merging class\n     *                           options and the options passed\n     *                           in to the constructor.\n     */\n\n    Vue.prototype._init = function (options) {\n      options = options || {};\n\n      this.$el = null;\n      this.$parent = options.parent;\n      this.$root = this.$parent ? this.$parent.$root : this;\n      this.$children = [];\n      this.$refs = {}; // child vm references\n      this.$els = {}; // element references\n      this._watchers = []; // all watchers as an array\n      this._directives = []; // all directives\n\n      // a uid\n      this._uid = uid++;\n\n      // a flag to avoid this being observed\n      this._isVue = true;\n\n      // events bookkeeping\n      this._events = {}; // registered callbacks\n      this._eventsCount = {}; // for $broadcast optimization\n\n      // fragment instance properties\n      this._isFragment = false;\n      this._fragment = // @type {DocumentFragment}\n      this._fragmentStart = // @type {Text|Comment}\n      this._fragmentEnd = null; // @type {Text|Comment}\n\n      // lifecycle state\n      this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n      this._unlinkFn = null;\n\n      // context:\n      // if this is a transcluded component, context\n      // will be the common parent vm of this instance\n      // and its host.\n      this._context = options._context || this.$parent;\n\n      // scope:\n      // if this is inside an inline v-for, the scope\n      // will be the intermediate scope created for this\n      // repeat fragment. this is used for linking props\n      // and container directives.\n      this._scope = options._scope;\n\n      // fragment:\n      // if this instance is compiled inside a Fragment, it\n      // needs to reigster itself as a child of that fragment\n      // for attach/detach to work properly.\n      this._frag = options._frag;\n      if (this._frag) {\n        this._frag.children.push(this);\n      }\n\n      // push self into parent / transclusion host\n      if (this.$parent) {\n        this.$parent.$children.push(this);\n      }\n\n      // merge options.\n      options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n      // set ref\n      this._updateRef();\n\n      // initialize data as empty object.\n      // it will be filled up in _initData().\n      this._data = {};\n\n      // call init hook\n      this._callHook('init');\n\n      // initialize data observation and scope inheritance.\n      this._initState();\n\n      // setup event system and option events.\n      this._initEvents();\n\n      // call created hook\n      this._callHook('created');\n\n      // if `el` option is passed, start compilation.\n      if (options.el) {\n        this.$mount(options.el);\n      }\n    };\n  }\n\n  var pathCache = new Cache(1000);\n\n  // actions\n  var APPEND = 0;\n  var PUSH = 1;\n  var INC_SUB_PATH_DEPTH = 2;\n  var PUSH_SUB_PATH = 3;\n\n  // states\n  var BEFORE_PATH = 0;\n  var IN_PATH = 1;\n  var BEFORE_IDENT = 2;\n  var IN_IDENT = 3;\n  var IN_SUB_PATH = 4;\n  var IN_SINGLE_QUOTE = 5;\n  var IN_DOUBLE_QUOTE = 6;\n  var AFTER_PATH = 7;\n  var ERROR = 8;\n\n  var pathStateMachine = [];\n\n  pathStateMachine[BEFORE_PATH] = {\n    'ws': [BEFORE_PATH],\n    'ident': [IN_IDENT, APPEND],\n    '[': [IN_SUB_PATH],\n    'eof': [AFTER_PATH]\n  };\n\n  pathStateMachine[IN_PATH] = {\n    'ws': [IN_PATH],\n    '.': [BEFORE_IDENT],\n    '[': [IN_SUB_PATH],\n    'eof': [AFTER_PATH]\n  };\n\n  pathStateMachine[BEFORE_IDENT] = {\n    'ws': [BEFORE_IDENT],\n    'ident': [IN_IDENT, APPEND]\n  };\n\n  pathStateMachine[IN_IDENT] = {\n    'ident': [IN_IDENT, APPEND],\n    '0': [IN_IDENT, APPEND],\n    'number': [IN_IDENT, APPEND],\n    'ws': [IN_PATH, PUSH],\n    '.': [BEFORE_IDENT, PUSH],\n    '[': [IN_SUB_PATH, PUSH],\n    'eof': [AFTER_PATH, PUSH]\n  };\n\n  pathStateMachine[IN_SUB_PATH] = {\n    \"'\": [IN_SINGLE_QUOTE, APPEND],\n    '\"': [IN_DOUBLE_QUOTE, APPEND],\n    '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n    ']': [IN_PATH, PUSH_SUB_PATH],\n    'eof': ERROR,\n    'else': [IN_SUB_PATH, APPEND]\n  };\n\n  pathStateMachine[IN_SINGLE_QUOTE] = {\n    \"'\": [IN_SUB_PATH, APPEND],\n    'eof': ERROR,\n    'else': [IN_SINGLE_QUOTE, APPEND]\n  };\n\n  pathStateMachine[IN_DOUBLE_QUOTE] = {\n    '\"': [IN_SUB_PATH, APPEND],\n    'eof': ERROR,\n    'else': [IN_DOUBLE_QUOTE, APPEND]\n  };\n\n  /**\n   * Determine the type of a character in a keypath.\n   *\n   * @param {Char} ch\n   * @return {String} type\n   */\n\n  function getPathCharType(ch) {\n    if (ch === undefined) {\n      return 'eof';\n    }\n\n    var code = ch.charCodeAt(0);\n\n    switch (code) {\n      case 0x5B: // [\n      case 0x5D: // ]\n      case 0x2E: // .\n      case 0x22: // \"\n      case 0x27: // '\n      case 0x30:\n        // 0\n        return ch;\n\n      case 0x5F: // _\n      case 0x24:\n        // $\n        return 'ident';\n\n      case 0x20: // Space\n      case 0x09: // Tab\n      case 0x0A: // Newline\n      case 0x0D: // Return\n      case 0xA0: // No-break space\n      case 0xFEFF: // Byte Order Mark\n      case 0x2028: // Line Separator\n      case 0x2029:\n        // Paragraph Separator\n        return 'ws';\n    }\n\n    // a-z, A-Z\n    if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n      return 'ident';\n    }\n\n    // 1-9\n    if (code >= 0x31 && code <= 0x39) {\n      return 'number';\n    }\n\n    return 'else';\n  }\n\n  /**\n   * Format a subPath, return its plain form if it is\n   * a literal string or number. Otherwise prepend the\n   * dynamic indicator (*).\n   *\n   * @param {String} path\n   * @return {String}\n   */\n\n  function formatSubPath(path) {\n    var trimmed = path.trim();\n    // invalid leading 0\n    if (path.charAt(0) === '0' && isNaN(path)) {\n      return false;\n    }\n    return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n  }\n\n  /**\n   * Parse a string path into an array of segments\n   *\n   * @param {String} path\n   * @return {Array|undefined}\n   */\n\n  function parse(path) {\n    var keys = [];\n    var index = -1;\n    var mode = BEFORE_PATH;\n    var subPathDepth = 0;\n    var c, newChar, key, type, transition, action, typeMap;\n\n    var actions = [];\n\n    actions[PUSH] = function () {\n      if (key !== undefined) {\n        keys.push(key);\n        key = undefined;\n      }\n    };\n\n    actions[APPEND] = function () {\n      if (key === undefined) {\n        key = newChar;\n      } else {\n        key += newChar;\n      }\n    };\n\n    actions[INC_SUB_PATH_DEPTH] = function () {\n      actions[APPEND]();\n      subPathDepth++;\n    };\n\n    actions[PUSH_SUB_PATH] = function () {\n      if (subPathDepth > 0) {\n        subPathDepth--;\n        mode = IN_SUB_PATH;\n        actions[APPEND]();\n      } else {\n        subPathDepth = 0;\n        key = formatSubPath(key);\n        if (key === false) {\n          return false;\n        } else {\n          actions[PUSH]();\n        }\n      }\n    };\n\n    function maybeUnescapeQuote() {\n      var nextChar = path[index + 1];\n      if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n        index++;\n        newChar = '\\\\' + nextChar;\n        actions[APPEND]();\n        return true;\n      }\n    }\n\n    while (mode != null) {\n      index++;\n      c = path[index];\n\n      if (c === '\\\\' && maybeUnescapeQuote()) {\n        continue;\n      }\n\n      type = getPathCharType(c);\n      typeMap = pathStateMachine[mode];\n      transition = typeMap[type] || typeMap['else'] || ERROR;\n\n      if (transition === ERROR) {\n        return; // parse error\n      }\n\n      mode = transition[0];\n      action = actions[transition[1]];\n      if (action) {\n        newChar = transition[2];\n        newChar = newChar === undefined ? c : newChar;\n        if (action() === false) {\n          return;\n        }\n      }\n\n      if (mode === AFTER_PATH) {\n        keys.raw = path;\n        return keys;\n      }\n    }\n  }\n\n  /**\n   * External parse that check for a cache hit first\n   *\n   * @param {String} path\n   * @return {Array|undefined}\n   */\n\n  function parsePath(path) {\n    var hit = pathCache.get(path);\n    if (!hit) {\n      hit = parse(path);\n      if (hit) {\n        pathCache.put(path, hit);\n      }\n    }\n    return hit;\n  }\n\n  /**\n   * Get from an object from a path string\n   *\n   * @param {Object} obj\n   * @param {String} path\n   */\n\n  function getPath(obj, path) {\n    return parseExpression(path).get(obj);\n  }\n\n  /**\n   * Warn against setting non-existent root path on a vm.\n   */\n\n  var warnNonExistent;\n  if ('development' !== 'production') {\n    warnNonExistent = function warnNonExistent(path, vm) {\n      warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n    };\n  }\n\n  /**\n   * Set on an object from a path\n   *\n   * @param {Object} obj\n   * @param {String | Array} path\n   * @param {*} val\n   */\n\n  function setPath(obj, path, val) {\n    var original = obj;\n    if (typeof path === 'string') {\n      path = parse(path);\n    }\n    if (!path || !isObject(obj)) {\n      return false;\n    }\n    var last, key;\n    for (var i = 0, l = path.length; i < l; i++) {\n      last = obj;\n      key = path[i];\n      if (key.charAt(0) === '*') {\n        key = parseExpression(key.slice(1)).get.call(original, original);\n      }\n      if (i < l - 1) {\n        obj = obj[key];\n        if (!isObject(obj)) {\n          obj = {};\n          if ('development' !== 'production' && last._isVue) {\n            warnNonExistent(path, last);\n          }\n          set(last, key, obj);\n        }\n      } else {\n        if (isArray(obj)) {\n          obj.$set(key, val);\n        } else if (key in obj) {\n          obj[key] = val;\n        } else {\n          if ('development' !== 'production' && obj._isVue) {\n            warnNonExistent(path, obj);\n          }\n          set(obj, key, val);\n        }\n      }\n    }\n    return true;\n  }\n\n  var path = Object.freeze({\n    parsePath: parsePath,\n    getPath: getPath,\n    setPath: setPath\n  });\n\n  var expressionCache = new Cache(1000);\n\n  var allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n  var allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n  // keywords that don't make sense inside expressions\n  var improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n  var improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n  var wsRE = /\\s/g;\n  var newlineRE = /\\n/g;\n  var saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n  var restoreRE = /\"(\\d+)\"/g;\n  var pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n  var identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n  var literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\n  function noop() {}\n\n  /**\n   * Save / Rewrite / Restore\n   *\n   * When rewriting paths found in an expression, it is\n   * possible for the same letter sequences to be found in\n   * strings and Object literal property keys. Therefore we\n   * remove and store these parts in a temporary array, and\n   * restore them after the path rewrite.\n   */\n\n  var saved = [];\n\n  /**\n   * Save replacer\n   *\n   * The save regex can match two possible cases:\n   * 1. An opening object literal\n   * 2. A string\n   * If matched as a plain string, we need to escape its\n   * newlines, since the string needs to be preserved when\n   * generating the function body.\n   *\n   * @param {String} str\n   * @param {String} isString - str if matched as a string\n   * @return {String} - placeholder with index\n   */\n\n  function save(str, isString) {\n    var i = saved.length;\n    saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n    return '\"' + i + '\"';\n  }\n\n  /**\n   * Path rewrite replacer\n   *\n   * @param {String} raw\n   * @return {String}\n   */\n\n  function rewrite(raw) {\n    var c = raw.charAt(0);\n    var path = raw.slice(1);\n    if (allowedKeywordsRE.test(path)) {\n      return raw;\n    } else {\n      path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n      return c + 'scope.' + path;\n    }\n  }\n\n  /**\n   * Restore replacer\n   *\n   * @param {String} str\n   * @param {String} i - matched save index\n   * @return {String}\n   */\n\n  function restore(str, i) {\n    return saved[i];\n  }\n\n  /**\n   * Rewrite an expression, prefixing all path accessors with\n   * `scope.` and generate getter/setter functions.\n   *\n   * @param {String} exp\n   * @return {Function}\n   */\n\n  function compileGetter(exp) {\n    if (improperKeywordsRE.test(exp)) {\n      'development' !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n    }\n    // reset state\n    saved.length = 0;\n    // save strings and object literal keys\n    var body = exp.replace(saveRE, save).replace(wsRE, '');\n    // rewrite all paths\n    // pad 1 space here because the regex matches 1 extra char\n    body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n    return makeGetterFn(body);\n  }\n\n  /**\n   * Build a getter function. Requires eval.\n   *\n   * We isolate the try/catch so it doesn't affect the\n   * optimization of the parse function when it is not called.\n   *\n   * @param {String} body\n   * @return {Function|undefined}\n   */\n\n  function makeGetterFn(body) {\n    try {\n      /* eslint-disable no-new-func */\n      return new Function('scope', 'return ' + body + ';');\n      /* eslint-enable no-new-func */\n    } catch (e) {\n      if ('development' !== 'production') {\n        /* istanbul ignore if */\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n        } else {\n          warn('Invalid expression. ' + 'Generated function body: ' + body);\n        }\n      }\n      return noop;\n    }\n  }\n\n  /**\n   * Compile a setter function for the expression.\n   *\n   * @param {String} exp\n   * @return {Function|undefined}\n   */\n\n  function compileSetter(exp) {\n    var path = parsePath(exp);\n    if (path) {\n      return function (scope, val) {\n        setPath(scope, path, val);\n      };\n    } else {\n      'development' !== 'production' && warn('Invalid setter expression: ' + exp);\n    }\n  }\n\n  /**\n   * Parse an expression into re-written getter/setters.\n   *\n   * @param {String} exp\n   * @param {Boolean} needSet\n   * @return {Function}\n   */\n\n  function parseExpression(exp, needSet) {\n    exp = exp.trim();\n    // try cache\n    var hit = expressionCache.get(exp);\n    if (hit) {\n      if (needSet && !hit.set) {\n        hit.set = compileSetter(hit.exp);\n      }\n      return hit;\n    }\n    var res = { exp: exp };\n    res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n    // optimized super simple getter\n    ? makeGetterFn('scope.' + exp)\n    // dynamic getter\n    : compileGetter(exp);\n    if (needSet) {\n      res.set = compileSetter(exp);\n    }\n    expressionCache.put(exp, res);\n    return res;\n  }\n\n  /**\n   * Check if an expression is a simple path.\n   *\n   * @param {String} exp\n   * @return {Boolean}\n   */\n\n  function isSimplePath(exp) {\n    return pathTestRE.test(exp) &&\n    // don't treat literal values as paths\n    !literalValueRE$1.test(exp) &&\n    // Math constants e.g. Math.PI, Math.E etc.\n    exp.slice(0, 5) !== 'Math.';\n  }\n\n  var expression = Object.freeze({\n    parseExpression: parseExpression,\n    isSimplePath: isSimplePath\n  });\n\n  // we have two separate queues: one for directive updates\n  // and one for user watcher registered via $watch().\n  // we want to guarantee directive updates to be called\n  // before user watchers so that when user watchers are\n  // triggered, the DOM would have already been in updated\n  // state.\n\n  var queue = [];\n  var userQueue = [];\n  var has = {};\n  var circular = {};\n  var waiting = false;\n\n  /**\n   * Reset the batcher's state.\n   */\n\n  function resetBatcherState() {\n    queue.length = 0;\n    userQueue.length = 0;\n    has = {};\n    circular = {};\n    waiting = false;\n  }\n\n  /**\n   * Flush both queues and run the watchers.\n   */\n\n  function flushBatcherQueue() {\n    var _again = true;\n\n    _function: while (_again) {\n      _again = false;\n\n      runBatcherQueue(queue);\n      runBatcherQueue(userQueue);\n      // user watchers triggered more watchers,\n      // keep flushing until it depletes\n      if (queue.length) {\n        _again = true;\n        continue _function;\n      }\n      // dev tool hook\n      /* istanbul ignore if */\n      if (devtools && config.devtools) {\n        devtools.emit('flush');\n      }\n      resetBatcherState();\n    }\n  }\n\n  /**\n   * Run the watchers in a single queue.\n   *\n   * @param {Array} queue\n   */\n\n  function runBatcherQueue(queue) {\n    // do not cache length because more watchers might be pushed\n    // as we run existing watchers\n    for (var i = 0; i < queue.length; i++) {\n      var watcher = queue[i];\n      var id = watcher.id;\n      has[id] = null;\n      watcher.run();\n      // in dev build, check and stop circular updates.\n      if ('development' !== 'production' && has[id] != null) {\n        circular[id] = (circular[id] || 0) + 1;\n        if (circular[id] > config._maxUpdateCount) {\n          warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n          break;\n        }\n      }\n    }\n    queue.length = 0;\n  }\n\n  /**\n   * Push a watcher into the watcher queue.\n   * Jobs with duplicate IDs will be skipped unless it's\n   * pushed when the queue is being flushed.\n   *\n   * @param {Watcher} watcher\n   *   properties:\n   *   - {Number} id\n   *   - {Function} run\n   */\n\n  function pushWatcher(watcher) {\n    var id = watcher.id;\n    if (has[id] == null) {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n\n  var uid$2 = 0;\n\n  /**\n   * A watcher parses an expression, collects dependencies,\n   * and fires callback when the expression value changes.\n   * This is used for both the $watch() api and directives.\n   *\n   * @param {Vue} vm\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} options\n   *                 - {Array} filters\n   *                 - {Boolean} twoWay\n   *                 - {Boolean} deep\n   *                 - {Boolean} user\n   *                 - {Boolean} sync\n   *                 - {Boolean} lazy\n   *                 - {Function} [preProcess]\n   *                 - {Function} [postProcess]\n   * @constructor\n   */\n  function Watcher(vm, expOrFn, cb, options) {\n    // mix in options\n    if (options) {\n      extend(this, options);\n    }\n    var isFn = typeof expOrFn === 'function';\n    this.vm = vm;\n    vm._watchers.push(this);\n    this.expression = expOrFn;\n    this.cb = cb;\n    this.id = ++uid$2; // uid for batching\n    this.active = true;\n    this.dirty = this.lazy; // for lazy watchers\n    this.deps = [];\n    this.newDeps = [];\n    this.depIds = new _Set();\n    this.newDepIds = new _Set();\n    this.prevError = null; // for async error stacks\n    // parse expression for getter/setter\n    if (isFn) {\n      this.getter = expOrFn;\n      this.setter = undefined;\n    } else {\n      var res = parseExpression(expOrFn, this.twoWay);\n      this.getter = res.get;\n      this.setter = res.set;\n    }\n    this.value = this.lazy ? undefined : this.get();\n    // state for avoiding false triggers for deep and Array\n    // watchers during vm._digest()\n    this.queued = this.shallow = false;\n  }\n\n  /**\n   * Evaluate the getter, and re-collect dependencies.\n   */\n\n  Watcher.prototype.get = function () {\n    this.beforeGet();\n    var scope = this.scope || this.vm;\n    var value;\n    try {\n      value = this.getter.call(scope, scope);\n    } catch (e) {\n      if ('development' !== 'production' && config.warnExpressionErrors) {\n        warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n      }\n    }\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    if (this.preProcess) {\n      value = this.preProcess(value);\n    }\n    if (this.filters) {\n      value = scope._applyFilters(value, null, this.filters, false);\n    }\n    if (this.postProcess) {\n      value = this.postProcess(value);\n    }\n    this.afterGet();\n    return value;\n  };\n\n  /**\n   * Set the corresponding value with the setter.\n   *\n   * @param {*} value\n   */\n\n  Watcher.prototype.set = function (value) {\n    var scope = this.scope || this.vm;\n    if (this.filters) {\n      value = scope._applyFilters(value, this.value, this.filters, true);\n    }\n    try {\n      this.setter.call(scope, scope, value);\n    } catch (e) {\n      if ('development' !== 'production' && config.warnExpressionErrors) {\n        warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n      }\n    }\n    // two-way sync for v-for alias\n    var forContext = scope.$forContext;\n    if (forContext && forContext.alias === this.expression) {\n      if (forContext.filters) {\n        'development' !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n        return;\n      }\n      forContext._withLock(function () {\n        if (scope.$key) {\n          // original is an object\n          forContext.rawValue[scope.$key] = value;\n        } else {\n          forContext.rawValue.$set(scope.$index, value);\n        }\n      });\n    }\n  };\n\n  /**\n   * Prepare for dependency collection.\n   */\n\n  Watcher.prototype.beforeGet = function () {\n    Dep.target = this;\n  };\n\n  /**\n   * Add a dependency to this directive.\n   *\n   * @param {Dep} dep\n   */\n\n  Watcher.prototype.addDep = function (dep) {\n    var id = dep.id;\n    if (!this.newDepIds.has(id)) {\n      this.newDepIds.add(id);\n      this.newDeps.push(dep);\n      if (!this.depIds.has(id)) {\n        dep.addSub(this);\n      }\n    }\n  };\n\n  /**\n   * Clean up for dependency collection.\n   */\n\n  Watcher.prototype.afterGet = function () {\n    Dep.target = null;\n    var i = this.deps.length;\n    while (i--) {\n      var dep = this.deps[i];\n      if (!this.newDepIds.has(dep.id)) {\n        dep.removeSub(this);\n      }\n    }\n    var tmp = this.depIds;\n    this.depIds = this.newDepIds;\n    this.newDepIds = tmp;\n    this.newDepIds.clear();\n    tmp = this.deps;\n    this.deps = this.newDeps;\n    this.newDeps = tmp;\n    this.newDeps.length = 0;\n  };\n\n  /**\n   * Subscriber interface.\n   * Will be called when a dependency changes.\n   *\n   * @param {Boolean} shallow\n   */\n\n  Watcher.prototype.update = function (shallow) {\n    if (this.lazy) {\n      this.dirty = true;\n    } else if (this.sync || !config.async) {\n      this.run();\n    } else {\n      // if queued, only overwrite shallow with non-shallow,\n      // but not the other way around.\n      this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n      this.queued = true;\n      // record before-push error stack in debug mode\n      /* istanbul ignore if */\n      if ('development' !== 'production' && config.debug) {\n        this.prevError = new Error('[vue] async stack trace');\n      }\n      pushWatcher(this);\n    }\n  };\n\n  /**\n   * Batcher job interface.\n   * Will be called by the batcher.\n   */\n\n  Watcher.prototype.run = function () {\n    if (this.active) {\n      var value = this.get();\n      if (value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated; but only do so if this is a\n      // non-shallow update (caused by a vm digest).\n      (isObject(value) || this.deep) && !this.shallow) {\n        // set new value\n        var oldValue = this.value;\n        this.value = value;\n        // in debug + async mode, when a watcher callbacks\n        // throws, we also throw the saved before-push error\n        // so the full cross-tick stack trace is available.\n        var prevError = this.prevError;\n        /* istanbul ignore if */\n        if ('development' !== 'production' && config.debug && prevError) {\n          this.prevError = null;\n          try {\n            this.cb.call(this.vm, value, oldValue);\n          } catch (e) {\n            nextTick(function () {\n              throw prevError;\n            }, 0);\n            throw e;\n          }\n        } else {\n          this.cb.call(this.vm, value, oldValue);\n        }\n      }\n      this.queued = this.shallow = false;\n    }\n  };\n\n  /**\n   * Evaluate the value of the watcher.\n   * This only gets called for lazy watchers.\n   */\n\n  Watcher.prototype.evaluate = function () {\n    // avoid overwriting another watcher that is being\n    // collected.\n    var current = Dep.target;\n    this.value = this.get();\n    this.dirty = false;\n    Dep.target = current;\n  };\n\n  /**\n   * Depend on all deps collected by this watcher.\n   */\n\n  Watcher.prototype.depend = function () {\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].depend();\n    }\n  };\n\n  /**\n   * Remove self from all dependencies' subcriber list.\n   */\n\n  Watcher.prototype.teardown = function () {\n    if (this.active) {\n      // remove self from vm's watcher list\n      // this is a somewhat expensive operation so we skip it\n      // if the vm is being destroyed or is performing a v-for\n      // re-render (the watcher list is then filtered by v-for).\n      if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n        this.vm._watchers.$remove(this);\n      }\n      var i = this.deps.length;\n      while (i--) {\n        this.deps[i].removeSub(this);\n      }\n      this.active = false;\n      this.vm = this.cb = this.value = null;\n    }\n  };\n\n  /**\n   * Recrusively traverse an object to evoke all converted\n   * getters, so that every nested property inside the object\n   * is collected as a \"deep\" dependency.\n   *\n   * @param {*} val\n   */\n\n  var seenObjects = new _Set();\n  function traverse(val, seen) {\n    var i = undefined,\n        keys = undefined;\n    if (!seen) {\n      seen = seenObjects;\n      seen.clear();\n    }\n    var isA = isArray(val);\n    var isO = isObject(val);\n    if (isA || isO) {\n      if (val.__ob__) {\n        var depId = val.__ob__.dep.id;\n        if (seen.has(depId)) {\n          return;\n        } else {\n          seen.add(depId);\n        }\n      }\n      if (isA) {\n        i = val.length;\n        while (i--) {\n          traverse(val[i], seen);\n        }\n      } else if (isO) {\n        keys = Object.keys(val);\n        i = keys.length;\n        while (i--) {\n          traverse(val[keys[i]], seen);\n        }\n      }\n    }\n  }\n\n  var text$1 = {\n\n    bind: function bind() {\n      this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n    },\n\n    update: function update(value) {\n      this.el[this.attr] = _toString(value);\n    }\n  };\n\n  var templateCache = new Cache(1000);\n  var idSelectorCache = new Cache(1000);\n\n  var map = {\n    efault: [0, '', ''],\n    legend: [1, '<fieldset>', '</fieldset>'],\n    tr: [2, '<table><tbody>', '</tbody></table>'],\n    col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n  };\n\n  map.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\n  map.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\n  map.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\n  map.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n  /**\n   * Check if a node is a supported template node with a\n   * DocumentFragment content.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function isRealTemplate(node) {\n    return isTemplate(node) && isFragment(node.content);\n  }\n\n  var tagRE$1 = /<([\\w:-]+)/;\n  var entityRE = /&#?\\w+?;/;\n  var commentRE = /<!--/;\n\n  /**\n   * Convert a string template to a DocumentFragment.\n   * Determines correct wrapping by tag types. Wrapping\n   * strategy found in jQuery & component/domify.\n   *\n   * @param {String} templateString\n   * @param {Boolean} raw\n   * @return {DocumentFragment}\n   */\n\n  function stringToFragment(templateString, raw) {\n    // try a cache hit first\n    var cacheKey = raw ? templateString : templateString.trim();\n    var hit = templateCache.get(cacheKey);\n    if (hit) {\n      return hit;\n    }\n\n    var frag = document.createDocumentFragment();\n    var tagMatch = templateString.match(tagRE$1);\n    var entityMatch = entityRE.test(templateString);\n    var commentMatch = commentRE.test(templateString);\n\n    if (!tagMatch && !entityMatch && !commentMatch) {\n      // text only, return a single text node.\n      frag.appendChild(document.createTextNode(templateString));\n    } else {\n      var tag = tagMatch && tagMatch[1];\n      var wrap = map[tag] || map.efault;\n      var depth = wrap[0];\n      var prefix = wrap[1];\n      var suffix = wrap[2];\n      var node = document.createElement('div');\n\n      node.innerHTML = prefix + templateString + suffix;\n      while (depth--) {\n        node = node.lastChild;\n      }\n\n      var child;\n      /* eslint-disable no-cond-assign */\n      while (child = node.firstChild) {\n        /* eslint-enable no-cond-assign */\n        frag.appendChild(child);\n      }\n    }\n    if (!raw) {\n      trimNode(frag);\n    }\n    templateCache.put(cacheKey, frag);\n    return frag;\n  }\n\n  /**\n   * Convert a template node to a DocumentFragment.\n   *\n   * @param {Node} node\n   * @return {DocumentFragment}\n   */\n\n  function nodeToFragment(node) {\n    // if its a template tag and the browser supports it,\n    // its content is already a document fragment. However, iOS Safari has\n    // bug when using directly cloned template content with touch\n    // events and can cause crashes when the nodes are removed from DOM, so we\n    // have to treat template elements as string templates. (#2805)\n    /* istanbul ignore if */\n    if (isRealTemplate(node)) {\n      return stringToFragment(node.innerHTML);\n    }\n    // script template\n    if (node.tagName === 'SCRIPT') {\n      return stringToFragment(node.textContent);\n    }\n    // normal node, clone it to avoid mutating the original\n    var clonedNode = cloneNode(node);\n    var frag = document.createDocumentFragment();\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = clonedNode.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n    trimNode(frag);\n    return frag;\n  }\n\n  // Test for the presence of the Safari template cloning bug\n  // https://bugs.webkit.org/showug.cgi?id=137755\n  var hasBrokenTemplate = function () {\n    /* istanbul ignore else */\n    if (inBrowser) {\n      var a = document.createElement('div');\n      a.innerHTML = '<template>1</template>';\n      return !a.cloneNode(true).firstChild.innerHTML;\n    } else {\n      return false;\n    }\n  }();\n\n  // Test for IE10/11 textarea placeholder clone bug\n  var hasTextareaCloneBug = function () {\n    /* istanbul ignore else */\n    if (inBrowser) {\n      var t = document.createElement('textarea');\n      t.placeholder = 't';\n      return t.cloneNode(true).value === 't';\n    } else {\n      return false;\n    }\n  }();\n\n  /**\n   * 1. Deal with Safari cloning nested <template> bug by\n   *    manually cloning all template instances.\n   * 2. Deal with IE10/11 textarea placeholder bug by setting\n   *    the correct value after cloning.\n   *\n   * @param {Element|DocumentFragment} node\n   * @return {Element|DocumentFragment}\n   */\n\n  function cloneNode(node) {\n    /* istanbul ignore if */\n    if (!node.querySelectorAll) {\n      return node.cloneNode();\n    }\n    var res = node.cloneNode(true);\n    var i, original, cloned;\n    /* istanbul ignore if */\n    if (hasBrokenTemplate) {\n      var tempClone = res;\n      if (isRealTemplate(node)) {\n        node = node.content;\n        tempClone = res.content;\n      }\n      original = node.querySelectorAll('template');\n      if (original.length) {\n        cloned = tempClone.querySelectorAll('template');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n        }\n      }\n    }\n    /* istanbul ignore if */\n    if (hasTextareaCloneBug) {\n      if (node.tagName === 'TEXTAREA') {\n        res.value = node.value;\n      } else {\n        original = node.querySelectorAll('textarea');\n        if (original.length) {\n          cloned = res.querySelectorAll('textarea');\n          i = cloned.length;\n          while (i--) {\n            cloned[i].value = original[i].value;\n          }\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Process the template option and normalizes it into a\n   * a DocumentFragment that can be used as a partial or a\n   * instance template.\n   *\n   * @param {*} template\n   *        Possible values include:\n   *        - DocumentFragment object\n   *        - Node object of type Template\n   *        - id selector: '#some-template-id'\n   *        - template string: '<div><span>{{msg}}</span></div>'\n   * @param {Boolean} shouldClone\n   * @param {Boolean} raw\n   *        inline HTML interpolation. Do not check for id\n   *        selector and keep whitespace in the string.\n   * @return {DocumentFragment|undefined}\n   */\n\n  function parseTemplate(template, shouldClone, raw) {\n    var node, frag;\n\n    // if the template is already a document fragment,\n    // do nothing\n    if (isFragment(template)) {\n      trimNode(template);\n      return shouldClone ? cloneNode(template) : template;\n    }\n\n    if (typeof template === 'string') {\n      // id selector\n      if (!raw && template.charAt(0) === '#') {\n        // id selector can be cached too\n        frag = idSelectorCache.get(template);\n        if (!frag) {\n          node = document.getElementById(template.slice(1));\n          if (node) {\n            frag = nodeToFragment(node);\n            // save selector to cache\n            idSelectorCache.put(template, frag);\n          }\n        }\n      } else {\n        // normal string template\n        frag = stringToFragment(template, raw);\n      }\n    } else if (template.nodeType) {\n      // a direct node\n      frag = nodeToFragment(template);\n    }\n\n    return frag && shouldClone ? cloneNode(frag) : frag;\n  }\n\n  var template = Object.freeze({\n    cloneNode: cloneNode,\n    parseTemplate: parseTemplate\n  });\n\n  var html = {\n\n    bind: function bind() {\n      // a comment node means this is a binding for\n      // {{{ inline unescaped html }}}\n      if (this.el.nodeType === 8) {\n        // hold nodes\n        this.nodes = [];\n        // replace the placeholder with proper anchor\n        this.anchor = createAnchor('v-html');\n        replace(this.el, this.anchor);\n      }\n    },\n\n    update: function update(value) {\n      value = _toString(value);\n      if (this.nodes) {\n        this.swap(value);\n      } else {\n        this.el.innerHTML = value;\n      }\n    },\n\n    swap: function swap(value) {\n      // remove old nodes\n      var i = this.nodes.length;\n      while (i--) {\n        remove(this.nodes[i]);\n      }\n      // convert new value to a fragment\n      // do not attempt to retrieve from id selector\n      var frag = parseTemplate(value, true, true);\n      // save a reference to these nodes so we can remove later\n      this.nodes = toArray(frag.childNodes);\n      before(frag, this.anchor);\n    }\n  };\n\n  /**\n   * Abstraction for a partially-compiled fragment.\n   * Can optionally compile content with a child scope.\n   *\n   * @param {Function} linker\n   * @param {Vue} vm\n   * @param {DocumentFragment} frag\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [parentFrag]\n   */\n  function Fragment(linker, vm, frag, host, scope, parentFrag) {\n    this.children = [];\n    this.childFrags = [];\n    this.vm = vm;\n    this.scope = scope;\n    this.inserted = false;\n    this.parentFrag = parentFrag;\n    if (parentFrag) {\n      parentFrag.childFrags.push(this);\n    }\n    this.unlink = linker(vm, frag, host, scope, this);\n    var single = this.single = frag.childNodes.length === 1 &&\n    // do not go single mode if the only node is an anchor\n    !frag.childNodes[0].__v_anchor;\n    if (single) {\n      this.node = frag.childNodes[0];\n      this.before = singleBefore;\n      this.remove = singleRemove;\n    } else {\n      this.node = createAnchor('fragment-start');\n      this.end = createAnchor('fragment-end');\n      this.frag = frag;\n      prepend(this.node, frag);\n      frag.appendChild(this.end);\n      this.before = multiBefore;\n      this.remove = multiRemove;\n    }\n    this.node.__v_frag = this;\n  }\n\n  /**\n   * Call attach/detach for all components contained within\n   * this fragment. Also do so recursively for all child\n   * fragments.\n   *\n   * @param {Function} hook\n   */\n\n  Fragment.prototype.callHook = function (hook) {\n    var i, l;\n    for (i = 0, l = this.childFrags.length; i < l; i++) {\n      this.childFrags[i].callHook(hook);\n    }\n    for (i = 0, l = this.children.length; i < l; i++) {\n      hook(this.children[i]);\n    }\n  };\n\n  /**\n   * Insert fragment before target, single node version\n   *\n   * @param {Node} target\n   * @param {Boolean} withTransition\n   */\n\n  function singleBefore(target, withTransition) {\n    this.inserted = true;\n    var method = withTransition !== false ? beforeWithTransition : before;\n    method(this.node, target, this.vm);\n    if (inDoc(this.node)) {\n      this.callHook(attach);\n    }\n  }\n\n  /**\n   * Remove fragment, single node version\n   */\n\n  function singleRemove() {\n    this.inserted = false;\n    var shouldCallRemove = inDoc(this.node);\n    var self = this;\n    this.beforeRemove();\n    removeWithTransition(this.node, this.vm, function () {\n      if (shouldCallRemove) {\n        self.callHook(detach);\n      }\n      self.destroy();\n    });\n  }\n\n  /**\n   * Insert fragment before target, multi-nodes version\n   *\n   * @param {Node} target\n   * @param {Boolean} withTransition\n   */\n\n  function multiBefore(target, withTransition) {\n    this.inserted = true;\n    var vm = this.vm;\n    var method = withTransition !== false ? beforeWithTransition : before;\n    mapNodeRange(this.node, this.end, function (node) {\n      method(node, target, vm);\n    });\n    if (inDoc(this.node)) {\n      this.callHook(attach);\n    }\n  }\n\n  /**\n   * Remove fragment, multi-nodes version\n   */\n\n  function multiRemove() {\n    this.inserted = false;\n    var self = this;\n    var shouldCallRemove = inDoc(this.node);\n    this.beforeRemove();\n    removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n      if (shouldCallRemove) {\n        self.callHook(detach);\n      }\n      self.destroy();\n    });\n  }\n\n  /**\n   * Prepare the fragment for removal.\n   */\n\n  Fragment.prototype.beforeRemove = function () {\n    var i, l;\n    for (i = 0, l = this.childFrags.length; i < l; i++) {\n      // call the same method recursively on child\n      // fragments, depth-first\n      this.childFrags[i].beforeRemove(false);\n    }\n    for (i = 0, l = this.children.length; i < l; i++) {\n      // Call destroy for all contained instances,\n      // with remove:false and defer:true.\n      // Defer is necessary because we need to\n      // keep the children to call detach hooks\n      // on them.\n      this.children[i].$destroy(false, true);\n    }\n    var dirs = this.unlink.dirs;\n    for (i = 0, l = dirs.length; i < l; i++) {\n      // disable the watchers on all the directives\n      // so that the rendered content stays the same\n      // during removal.\n      dirs[i]._watcher && dirs[i]._watcher.teardown();\n    }\n  };\n\n  /**\n   * Destroy the fragment.\n   */\n\n  Fragment.prototype.destroy = function () {\n    if (this.parentFrag) {\n      this.parentFrag.childFrags.$remove(this);\n    }\n    this.node.__v_frag = null;\n    this.unlink();\n  };\n\n  /**\n   * Call attach hook for a Vue instance.\n   *\n   * @param {Vue} child\n   */\n\n  function attach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Call detach hook for a Vue instance.\n   *\n   * @param {Vue} child\n   */\n\n  function detach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  var linkerCache = new Cache(5000);\n\n  /**\n   * A factory that can be used to create instances of a\n   * fragment. Caches the compiled linker if possible.\n   *\n   * @param {Vue} vm\n   * @param {Element|String} el\n   */\n  function FragmentFactory(vm, el) {\n    this.vm = vm;\n    var template;\n    var isString = typeof el === 'string';\n    if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n      template = parseTemplate(el, true);\n    } else {\n      template = document.createDocumentFragment();\n      template.appendChild(el);\n    }\n    this.template = template;\n    // linker can be cached, but only for components\n    var linker;\n    var cid = vm.constructor.cid;\n    if (cid > 0) {\n      var cacheId = cid + (isString ? el : getOuterHTML(el));\n      linker = linkerCache.get(cacheId);\n      if (!linker) {\n        linker = compile(template, vm.$options, true);\n        linkerCache.put(cacheId, linker);\n      }\n    } else {\n      linker = compile(template, vm.$options, true);\n    }\n    this.linker = linker;\n  }\n\n  /**\n   * Create a fragment instance with given host and scope.\n   *\n   * @param {Vue} host\n   * @param {Object} scope\n   * @param {Fragment} parentFrag\n   */\n\n  FragmentFactory.prototype.create = function (host, scope, parentFrag) {\n    var frag = cloneNode(this.template);\n    return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n  };\n\n  var ON = 700;\n  var MODEL = 800;\n  var BIND = 850;\n  var TRANSITION = 1100;\n  var EL = 1500;\n  var COMPONENT = 1500;\n  var PARTIAL = 1750;\n  var IF = 2100;\n  var FOR = 2200;\n  var SLOT = 2300;\n\n  var uid$3 = 0;\n\n  var vFor = {\n\n    priority: FOR,\n    terminal: true,\n\n    params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n    bind: function bind() {\n      // support \"item in/of items\" syntax\n      var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n      if (inMatch) {\n        var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n        if (itMatch) {\n          this.iterator = itMatch[1].trim();\n          this.alias = itMatch[2].trim();\n        } else {\n          this.alias = inMatch[1].trim();\n        }\n        this.expression = inMatch[2];\n      }\n\n      if (!this.alias) {\n        'development' !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n        return;\n      }\n\n      // uid as a cache identifier\n      this.id = '__v-for__' + ++uid$3;\n\n      // check if this is an option list,\n      // so that we know if we need to update the <select>'s\n      // v-model when the option list has changed.\n      // because v-model has a lower priority than v-for,\n      // the v-model is not bound here yet, so we have to\n      // retrive it in the actual updateModel() function.\n      var tag = this.el.tagName;\n      this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n      // setup anchor nodes\n      this.start = createAnchor('v-for-start');\n      this.end = createAnchor('v-for-end');\n      replace(this.el, this.end);\n      before(this.start, this.end);\n\n      // cache\n      this.cache = Object.create(null);\n\n      // fragment factory\n      this.factory = new FragmentFactory(this.vm, this.el);\n    },\n\n    update: function update(data) {\n      this.diff(data);\n      this.updateRef();\n      this.updateModel();\n    },\n\n    /**\n     * Diff, based on new data and old data, determine the\n     * minimum amount of DOM manipulations needed to make the\n     * DOM reflect the new data Array.\n     *\n     * The algorithm diffs the new data Array by storing a\n     * hidden reference to an owner vm instance on previously\n     * seen data. This allows us to achieve O(n) which is\n     * better than a levenshtein distance based algorithm,\n     * which is O(m * n).\n     *\n     * @param {Array} data\n     */\n\n    diff: function diff(data) {\n      // check if the Array was converted from an Object\n      var item = data[0];\n      var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n      var trackByKey = this.params.trackBy;\n      var oldFrags = this.frags;\n      var frags = this.frags = new Array(data.length);\n      var alias = this.alias;\n      var iterator = this.iterator;\n      var start = this.start;\n      var end = this.end;\n      var inDocument = inDoc(start);\n      var init = !oldFrags;\n      var i, l, frag, key, value, primitive;\n\n      // First pass, go through the new Array and fill up\n      // the new frags array. If a piece of data has a cached\n      // instance for it, we reuse it. Otherwise build a new\n      // instance.\n      for (i = 0, l = data.length; i < l; i++) {\n        item = data[i];\n        key = convertedFromObject ? item.$key : null;\n        value = convertedFromObject ? item.$value : item;\n        primitive = !isObject(value);\n        frag = !init && this.getCachedFrag(value, i, key);\n        if (frag) {\n          // reusable fragment\n          frag.reused = true;\n          // update $index\n          frag.scope.$index = i;\n          // update $key\n          if (key) {\n            frag.scope.$key = key;\n          }\n          // update iterator\n          if (iterator) {\n            frag.scope[iterator] = key !== null ? key : i;\n          }\n          // update data for track-by, object repeat &\n          // primitive values.\n          if (trackByKey || convertedFromObject || primitive) {\n            withoutConversion(function () {\n              frag.scope[alias] = value;\n            });\n          }\n        } else {\n          // new isntance\n          frag = this.create(value, alias, i, key);\n          frag.fresh = !init;\n        }\n        frags[i] = frag;\n        if (init) {\n          frag.before(end);\n        }\n      }\n\n      // we're done for the initial render.\n      if (init) {\n        return;\n      }\n\n      // Second pass, go through the old fragments and\n      // destroy those who are not reused (and remove them\n      // from cache)\n      var removalIndex = 0;\n      var totalRemoved = oldFrags.length - frags.length;\n      // when removing a large number of fragments, watcher removal\n      // turns out to be a perf bottleneck, so we batch the watcher\n      // removals into a single filter call!\n      this.vm._vForRemoving = true;\n      for (i = 0, l = oldFrags.length; i < l; i++) {\n        frag = oldFrags[i];\n        if (!frag.reused) {\n          this.deleteCachedFrag(frag);\n          this.remove(frag, removalIndex++, totalRemoved, inDocument);\n        }\n      }\n      this.vm._vForRemoving = false;\n      if (removalIndex) {\n        this.vm._watchers = this.vm._watchers.filter(function (w) {\n          return w.active;\n        });\n      }\n\n      // Final pass, move/insert new fragments into the\n      // right place.\n      var targetPrev, prevEl, currentPrev;\n      var insertionIndex = 0;\n      for (i = 0, l = frags.length; i < l; i++) {\n        frag = frags[i];\n        // this is the frag that we should be after\n        targetPrev = frags[i - 1];\n        prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n        if (frag.reused && !frag.staggerCb) {\n          currentPrev = findPrevFrag(frag, start, this.id);\n          if (currentPrev !== targetPrev && (!currentPrev ||\n          // optimization for moving a single item.\n          // thanks to suggestions by @livoras in #1807\n          findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n            this.move(frag, prevEl);\n          }\n        } else {\n          // new instance, or still in stagger.\n          // insert with updated stagger index.\n          this.insert(frag, insertionIndex++, prevEl, inDocument);\n        }\n        frag.reused = frag.fresh = false;\n      }\n    },\n\n    /**\n     * Create a new fragment instance.\n     *\n     * @param {*} value\n     * @param {String} alias\n     * @param {Number} index\n     * @param {String} [key]\n     * @return {Fragment}\n     */\n\n    create: function create(value, alias, index, key) {\n      var host = this._host;\n      // create iteration scope\n      var parentScope = this._scope || this.vm;\n      var scope = Object.create(parentScope);\n      // ref holder for the scope\n      scope.$refs = Object.create(parentScope.$refs);\n      scope.$els = Object.create(parentScope.$els);\n      // make sure point $parent to parent scope\n      scope.$parent = parentScope;\n      // for two-way binding on alias\n      scope.$forContext = this;\n      // define scope properties\n      // important: define the scope alias without forced conversion\n      // so that frozen data structures remain non-reactive.\n      withoutConversion(function () {\n        defineReactive(scope, alias, value);\n      });\n      defineReactive(scope, '$index', index);\n      if (key) {\n        defineReactive(scope, '$key', key);\n      } else if (scope.$key) {\n        // avoid accidental fallback\n        def(scope, '$key', null);\n      }\n      if (this.iterator) {\n        defineReactive(scope, this.iterator, key !== null ? key : index);\n      }\n      var frag = this.factory.create(host, scope, this._frag);\n      frag.forId = this.id;\n      this.cacheFrag(value, frag, index, key);\n      return frag;\n    },\n\n    /**\n     * Update the v-ref on owner vm.\n     */\n\n    updateRef: function updateRef() {\n      var ref = this.descriptor.ref;\n      if (!ref) return;\n      var hash = (this._scope || this.vm).$refs;\n      var refs;\n      if (!this.fromObject) {\n        refs = this.frags.map(findVmFromFrag);\n      } else {\n        refs = {};\n        this.frags.forEach(function (frag) {\n          refs[frag.scope.$key] = findVmFromFrag(frag);\n        });\n      }\n      hash[ref] = refs;\n    },\n\n    /**\n     * For option lists, update the containing v-model on\n     * parent <select>.\n     */\n\n    updateModel: function updateModel() {\n      if (this.isOption) {\n        var parent = this.start.parentNode;\n        var model = parent && parent.__v_model;\n        if (model) {\n          model.forceUpdate();\n        }\n      }\n    },\n\n    /**\n     * Insert a fragment. Handles staggering.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Node} prevEl\n     * @param {Boolean} inDocument\n     */\n\n    insert: function insert(frag, index, prevEl, inDocument) {\n      if (frag.staggerCb) {\n        frag.staggerCb.cancel();\n        frag.staggerCb = null;\n      }\n      var staggerAmount = this.getStagger(frag, index, null, 'enter');\n      if (inDocument && staggerAmount) {\n        // create an anchor and insert it synchronously,\n        // so that we can resolve the correct order without\n        // worrying about some elements not inserted yet\n        var anchor = frag.staggerAnchor;\n        if (!anchor) {\n          anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n          anchor.__v_frag = frag;\n        }\n        after(anchor, prevEl);\n        var op = frag.staggerCb = cancellable(function () {\n          frag.staggerCb = null;\n          frag.before(anchor);\n          remove(anchor);\n        });\n        setTimeout(op, staggerAmount);\n      } else {\n        var target = prevEl.nextSibling;\n        /* istanbul ignore if */\n        if (!target) {\n          // reset end anchor position in case the position was messed up\n          // by an external drag-n-drop library.\n          after(this.end, prevEl);\n          target = this.end;\n        }\n        frag.before(target);\n      }\n    },\n\n    /**\n     * Remove a fragment. Handles staggering.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Number} total\n     * @param {Boolean} inDocument\n     */\n\n    remove: function remove(frag, index, total, inDocument) {\n      if (frag.staggerCb) {\n        frag.staggerCb.cancel();\n        frag.staggerCb = null;\n        // it's not possible for the same frag to be removed\n        // twice, so if we have a pending stagger callback,\n        // it means this frag is queued for enter but removed\n        // before its transition started. Since it is already\n        // destroyed, we can just leave it in detached state.\n        return;\n      }\n      var staggerAmount = this.getStagger(frag, index, total, 'leave');\n      if (inDocument && staggerAmount) {\n        var op = frag.staggerCb = cancellable(function () {\n          frag.staggerCb = null;\n          frag.remove();\n        });\n        setTimeout(op, staggerAmount);\n      } else {\n        frag.remove();\n      }\n    },\n\n    /**\n     * Move a fragment to a new position.\n     * Force no transition.\n     *\n     * @param {Fragment} frag\n     * @param {Node} prevEl\n     */\n\n    move: function move(frag, prevEl) {\n      // fix a common issue with Sortable:\n      // if prevEl doesn't have nextSibling, this means it's\n      // been dragged after the end anchor. Just re-position\n      // the end anchor to the end of the container.\n      /* istanbul ignore if */\n      if (!prevEl.nextSibling) {\n        this.end.parentNode.appendChild(this.end);\n      }\n      frag.before(prevEl.nextSibling, false);\n    },\n\n    /**\n     * Cache a fragment using track-by or the object key.\n     *\n     * @param {*} value\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {String} [key]\n     */\n\n    cacheFrag: function cacheFrag(value, frag, index, key) {\n      var trackByKey = this.params.trackBy;\n      var cache = this.cache;\n      var primitive = !isObject(value);\n      var id;\n      if (key || trackByKey || primitive) {\n        id = getTrackByKey(index, key, value, trackByKey);\n        if (!cache[id]) {\n          cache[id] = frag;\n        } else if (trackByKey !== '$index') {\n          'development' !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        id = this.id;\n        if (hasOwn(value, id)) {\n          if (value[id] === null) {\n            value[id] = frag;\n          } else {\n            'development' !== 'production' && this.warnDuplicate(value);\n          }\n        } else if (Object.isExtensible(value)) {\n          def(value, id, frag);\n        } else if ('development' !== 'production') {\n          warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n        }\n      }\n      frag.raw = value;\n    },\n\n    /**\n     * Get a cached fragment from the value/index/key\n     *\n     * @param {*} value\n     * @param {Number} index\n     * @param {String} key\n     * @return {Fragment}\n     */\n\n    getCachedFrag: function getCachedFrag(value, index, key) {\n      var trackByKey = this.params.trackBy;\n      var primitive = !isObject(value);\n      var frag;\n      if (key || trackByKey || primitive) {\n        var id = getTrackByKey(index, key, value, trackByKey);\n        frag = this.cache[id];\n      } else {\n        frag = value[this.id];\n      }\n      if (frag && (frag.reused || frag.fresh)) {\n        'development' !== 'production' && this.warnDuplicate(value);\n      }\n      return frag;\n    },\n\n    /**\n     * Delete a fragment from cache.\n     *\n     * @param {Fragment} frag\n     */\n\n    deleteCachedFrag: function deleteCachedFrag(frag) {\n      var value = frag.raw;\n      var trackByKey = this.params.trackBy;\n      var scope = frag.scope;\n      var index = scope.$index;\n      // fix #948: avoid accidentally fall through to\n      // a parent repeater which happens to have $key.\n      var key = hasOwn(scope, '$key') && scope.$key;\n      var primitive = !isObject(value);\n      if (trackByKey || key || primitive) {\n        var id = getTrackByKey(index, key, value, trackByKey);\n        this.cache[id] = null;\n      } else {\n        value[this.id] = null;\n        frag.raw = null;\n      }\n    },\n\n    /**\n     * Get the stagger amount for an insertion/removal.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Number} total\n     * @param {String} type\n     */\n\n    getStagger: function getStagger(frag, index, total, type) {\n      type = type + 'Stagger';\n      var trans = frag.node.__v_trans;\n      var hooks = trans && trans.hooks;\n      var hook = hooks && (hooks[type] || hooks.stagger);\n      return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n    },\n\n    /**\n     * Pre-process the value before piping it through the\n     * filters. This is passed to and called by the watcher.\n     */\n\n    _preProcess: function _preProcess(value) {\n      // regardless of type, store the un-filtered raw value.\n      this.rawValue = value;\n      return value;\n    },\n\n    /**\n     * Post-process the value after it has been piped through\n     * the filters. This is passed to and called by the watcher.\n     *\n     * It is necessary for this to be called during the\n     * watcher's dependency collection phase because we want\n     * the v-for to update when the source Object is mutated.\n     */\n\n    _postProcess: function _postProcess(value) {\n      if (isArray(value)) {\n        return value;\n      } else if (isPlainObject(value)) {\n        // convert plain object to array.\n        var keys = Object.keys(value);\n        var i = keys.length;\n        var res = new Array(i);\n        var key;\n        while (i--) {\n          key = keys[i];\n          res[i] = {\n            $key: key,\n            $value: value[key]\n          };\n        }\n        return res;\n      } else {\n        if (typeof value === 'number' && !isNaN(value)) {\n          value = range(value);\n        }\n        return value || [];\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.descriptor.ref) {\n        (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n      }\n      if (this.frags) {\n        var i = this.frags.length;\n        var frag;\n        while (i--) {\n          frag = this.frags[i];\n          this.deleteCachedFrag(frag);\n          frag.destroy();\n        }\n      }\n    }\n  };\n\n  /**\n   * Helper to find the previous element that is a fragment\n   * anchor. This is necessary because a destroyed frag's\n   * element could still be lingering in the DOM before its\n   * leaving transition finishes, but its inserted flag\n   * should have been set to false so we can skip them.\n   *\n   * If this is a block repeat, we want to make sure we only\n   * return frag that is bound to this v-for. (see #929)\n   *\n   * @param {Fragment} frag\n   * @param {Comment|Text} anchor\n   * @param {String} id\n   * @return {Fragment}\n   */\n\n  function findPrevFrag(frag, anchor, id) {\n    var el = frag.node.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n    while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n      el = el.previousSibling;\n      /* istanbul ignore if */\n      if (!el) return;\n      frag = el.__v_frag;\n    }\n    return frag;\n  }\n\n  /**\n   * Find a vm from a fragment.\n   *\n   * @param {Fragment} frag\n   * @return {Vue|undefined}\n   */\n\n  function findVmFromFrag(frag) {\n    var node = frag.node;\n    // handle multi-node frag\n    if (frag.end) {\n      while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n        node = node.nextSibling;\n      }\n    }\n    return node.__vue__;\n  }\n\n  /**\n   * Create a range array from given number.\n   *\n   * @param {Number} n\n   * @return {Array}\n   */\n\n  function range(n) {\n    var i = -1;\n    var ret = new Array(Math.floor(n));\n    while (++i < n) {\n      ret[i] = i;\n    }\n    return ret;\n  }\n\n  /**\n   * Get the track by key for an item.\n   *\n   * @param {Number} index\n   * @param {String} key\n   * @param {*} value\n   * @param {String} [trackByKey]\n   */\n\n  function getTrackByKey(index, key, value, trackByKey) {\n    return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n  }\n\n  if ('development' !== 'production') {\n    vFor.warnDuplicate = function (value) {\n      warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n    };\n  }\n\n  var vIf = {\n\n    priority: IF,\n    terminal: true,\n\n    bind: function bind() {\n      var el = this.el;\n      if (!el.__vue__) {\n        // check else block\n        var next = el.nextElementSibling;\n        if (next && getAttr(next, 'v-else') !== null) {\n          remove(next);\n          this.elseEl = next;\n        }\n        // check main block\n        this.anchor = createAnchor('v-if');\n        replace(el, this.anchor);\n      } else {\n        'development' !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n        this.invalid = true;\n      }\n    },\n\n    update: function update(value) {\n      if (this.invalid) return;\n      if (value) {\n        if (!this.frag) {\n          this.insert();\n        }\n      } else {\n        this.remove();\n      }\n    },\n\n    insert: function insert() {\n      if (this.elseFrag) {\n        this.elseFrag.remove();\n        this.elseFrag = null;\n      }\n      // lazy init factory\n      if (!this.factory) {\n        this.factory = new FragmentFactory(this.vm, this.el);\n      }\n      this.frag = this.factory.create(this._host, this._scope, this._frag);\n      this.frag.before(this.anchor);\n    },\n\n    remove: function remove() {\n      if (this.frag) {\n        this.frag.remove();\n        this.frag = null;\n      }\n      if (this.elseEl && !this.elseFrag) {\n        if (!this.elseFactory) {\n          this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n        }\n        this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n        this.elseFrag.before(this.anchor);\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.frag) {\n        this.frag.destroy();\n      }\n      if (this.elseFrag) {\n        this.elseFrag.destroy();\n      }\n    }\n  };\n\n  var show = {\n\n    bind: function bind() {\n      // check else block\n      var next = this.el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        this.elseEl = next;\n      }\n    },\n\n    update: function update(value) {\n      this.apply(this.el, value);\n      if (this.elseEl) {\n        this.apply(this.elseEl, !value);\n      }\n    },\n\n    apply: function apply(el, value) {\n      if (inDoc(el)) {\n        applyTransition(el, value ? 1 : -1, toggle, this.vm);\n      } else {\n        toggle();\n      }\n      function toggle() {\n        el.style.display = value ? '' : 'none';\n      }\n    }\n  };\n\n  var text$2 = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n      var isRange = el.type === 'range';\n      var lazy = this.params.lazy;\n      var number = this.params.number;\n      var debounce = this.params.debounce;\n\n      // handle composition events.\n      //   http://blog.evanyou.me/2014/01/03/composition-event/\n      // skip this for Android because it handles composition\n      // events quite differently. Android doesn't trigger\n      // composition events for language input methods e.g.\n      // Chinese, but instead triggers them for spelling\n      // suggestions... (see Discussion/#162)\n      var composing = false;\n      if (!isAndroid && !isRange) {\n        this.on('compositionstart', function () {\n          composing = true;\n        });\n        this.on('compositionend', function () {\n          composing = false;\n          // in IE11 the \"compositionend\" event fires AFTER\n          // the \"input\" event, so the input handler is blocked\n          // at the end... have to call it here.\n          //\n          // #1327: in lazy mode this is unecessary.\n          if (!lazy) {\n            self.listener();\n          }\n        });\n      }\n\n      // prevent messing with the input when user is typing,\n      // and force update on blur.\n      this.focused = false;\n      if (!isRange && !lazy) {\n        this.on('focus', function () {\n          self.focused = true;\n        });\n        this.on('blur', function () {\n          self.focused = false;\n          // do not sync value after fragment removal (#2017)\n          if (!self._frag || self._frag.inserted) {\n            self.rawListener();\n          }\n        });\n      }\n\n      // Now attach the main listener\n      this.listener = this.rawListener = function () {\n        if (composing || !self._bound) {\n          return;\n        }\n        var val = number || isRange ? toNumber(el.value) : el.value;\n        self.set(val);\n        // force update on next tick to avoid lock & same value\n        // also only update when user is not typing\n        nextTick(function () {\n          if (self._bound && !self.focused) {\n            self.update(self._watcher.value);\n          }\n        });\n      };\n\n      // apply debounce\n      if (debounce) {\n        this.listener = _debounce(this.listener, debounce);\n      }\n\n      // Support jQuery events, since jQuery.trigger() doesn't\n      // trigger native events in some cases and some plugins\n      // rely on $.trigger()\n      //\n      // We want to make sure if a listener is attached using\n      // jQuery, it is also removed with jQuery, that's why\n      // we do the check for each directive instance and\n      // store that check result on itself. This also allows\n      // easier test coverage control by unsetting the global\n      // jQuery variable in tests.\n      this.hasjQuery = typeof jQuery === 'function';\n      if (this.hasjQuery) {\n        var method = jQuery.fn.on ? 'on' : 'bind';\n        jQuery(el)[method]('change', this.rawListener);\n        if (!lazy) {\n          jQuery(el)[method]('input', this.listener);\n        }\n      } else {\n        this.on('change', this.rawListener);\n        if (!lazy) {\n          this.on('input', this.listener);\n        }\n      }\n\n      // IE9 doesn't fire input event on backspace/del/cut\n      if (!lazy && isIE9) {\n        this.on('cut', function () {\n          nextTick(self.listener);\n        });\n        this.on('keyup', function (e) {\n          if (e.keyCode === 46 || e.keyCode === 8) {\n            self.listener();\n          }\n        });\n      }\n\n      // set initial value if present\n      if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      // #3029 only update when the value changes. This prevent\n      // browsers from overwriting values like selectionStart\n      value = _toString(value);\n      if (value !== this.el.value) this.el.value = value;\n    },\n\n    unbind: function unbind() {\n      var el = this.el;\n      if (this.hasjQuery) {\n        var method = jQuery.fn.off ? 'off' : 'unbind';\n        jQuery(el)[method]('change', this.listener);\n        jQuery(el)[method]('input', this.listener);\n      }\n    }\n  };\n\n  var radio = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n\n      this.getValue = function () {\n        // value overwrite via v-bind:value\n        if (el.hasOwnProperty('_value')) {\n          return el._value;\n        }\n        var val = el.value;\n        if (self.params.number) {\n          val = toNumber(val);\n        }\n        return val;\n      };\n\n      this.listener = function () {\n        self.set(self.getValue());\n      };\n      this.on('change', this.listener);\n\n      if (el.hasAttribute('checked')) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      this.el.checked = looseEqual(value, this.getValue());\n    }\n  };\n\n  var select = {\n\n    bind: function bind() {\n      var _this = this;\n\n      var self = this;\n      var el = this.el;\n\n      // method to force update DOM using latest value.\n      this.forceUpdate = function () {\n        if (self._watcher) {\n          self.update(self._watcher.get());\n        }\n      };\n\n      // check if this is a multiple select\n      var multiple = this.multiple = el.hasAttribute('multiple');\n\n      // attach listener\n      this.listener = function () {\n        var value = getValue(el, multiple);\n        value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n        self.set(value);\n      };\n      this.on('change', this.listener);\n\n      // if has initial value, set afterBind\n      var initValue = getValue(el, multiple, true);\n      if (multiple && initValue.length || !multiple && initValue !== null) {\n        this.afterBind = this.listener;\n      }\n\n      // All major browsers except Firefox resets\n      // selectedIndex with value -1 to 0 when the element\n      // is appended to a new parent, therefore we have to\n      // force a DOM update whenever that happens...\n      this.vm.$on('hook:attached', function () {\n        nextTick(_this.forceUpdate);\n      });\n    },\n\n    update: function update(value) {\n      var el = this.el;\n      if (!inDoc(el)) {\n        return nextTick(this.forceUpdate);\n      }\n      el.selectedIndex = -1;\n      var multi = this.multiple && isArray(value);\n      var options = el.options;\n      var i = options.length;\n      var op, val;\n      while (i--) {\n        op = options[i];\n        val = op.hasOwnProperty('_value') ? op._value : op.value;\n        /* eslint-disable eqeqeq */\n        op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n        /* eslint-enable eqeqeq */\n      }\n    },\n\n    unbind: function unbind() {\n      /* istanbul ignore next */\n      this.vm.$off('hook:attached', this.forceUpdate);\n    }\n  };\n\n  /**\n   * Get select value\n   *\n   * @param {SelectElement} el\n   * @param {Boolean} multi\n   * @param {Boolean} init\n   * @return {Array|*}\n   */\n\n  function getValue(el, multi, init) {\n    var res = multi ? [] : null;\n    var op, val, selected;\n    for (var i = 0, l = el.options.length; i < l; i++) {\n      op = el.options[i];\n      selected = init ? op.hasAttribute('selected') : op.selected;\n      if (selected) {\n        val = op.hasOwnProperty('_value') ? op._value : op.value;\n        if (multi) {\n          res.push(val);\n        } else {\n          return val;\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Native Array.indexOf uses strict equal, but in this\n   * case we need to match string/numbers with custom equal.\n   *\n   * @param {Array} arr\n   * @param {*} val\n   */\n\n  function indexOf$1(arr, val) {\n    var i = arr.length;\n    while (i--) {\n      if (looseEqual(arr[i], val)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  var checkbox = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n\n      this.getValue = function () {\n        return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n      };\n\n      function getBooleanValue() {\n        var val = el.checked;\n        if (val && el.hasOwnProperty('_trueValue')) {\n          return el._trueValue;\n        }\n        if (!val && el.hasOwnProperty('_falseValue')) {\n          return el._falseValue;\n        }\n        return val;\n      }\n\n      this.listener = function () {\n        var model = self._watcher.value;\n        if (isArray(model)) {\n          var val = self.getValue();\n          if (el.checked) {\n            if (indexOf(model, val) < 0) {\n              model.push(val);\n            }\n          } else {\n            model.$remove(val);\n          }\n        } else {\n          self.set(getBooleanValue());\n        }\n      };\n\n      this.on('change', this.listener);\n      if (el.hasAttribute('checked')) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      var el = this.el;\n      if (isArray(value)) {\n        el.checked = indexOf(value, this.getValue()) > -1;\n      } else {\n        if (el.hasOwnProperty('_trueValue')) {\n          el.checked = looseEqual(value, el._trueValue);\n        } else {\n          el.checked = !!value;\n        }\n      }\n    }\n  };\n\n  var handlers = {\n    text: text$2,\n    radio: radio,\n    select: select,\n    checkbox: checkbox\n  };\n\n  var model = {\n\n    priority: MODEL,\n    twoWay: true,\n    handlers: handlers,\n    params: ['lazy', 'number', 'debounce'],\n\n    /**\n     * Possible elements:\n     *   <select>\n     *   <textarea>\n     *   <input type=\"*\">\n     *     - text\n     *     - checkbox\n     *     - radio\n     *     - number\n     */\n\n    bind: function bind() {\n      // friendly warning...\n      this.checkFilters();\n      if (this.hasRead && !this.hasWrite) {\n        'development' !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n      }\n      var el = this.el;\n      var tag = el.tagName;\n      var handler;\n      if (tag === 'INPUT') {\n        handler = handlers[el.type] || handlers.text;\n      } else if (tag === 'SELECT') {\n        handler = handlers.select;\n      } else if (tag === 'TEXTAREA') {\n        handler = handlers.text;\n      } else {\n        'development' !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n        return;\n      }\n      el.__v_model = this;\n      handler.bind.call(this);\n      this.update = handler.update;\n      this._unbind = handler.unbind;\n    },\n\n    /**\n     * Check read/write filter stats.\n     */\n\n    checkFilters: function checkFilters() {\n      var filters = this.filters;\n      if (!filters) return;\n      var i = filters.length;\n      while (i--) {\n        var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n        if (typeof filter === 'function' || filter.read) {\n          this.hasRead = true;\n        }\n        if (filter.write) {\n          this.hasWrite = true;\n        }\n      }\n    },\n\n    unbind: function unbind() {\n      this.el.__v_model = null;\n      this._unbind && this._unbind();\n    }\n  };\n\n  // keyCode aliases\n  var keyCodes = {\n    esc: 27,\n    tab: 9,\n    enter: 13,\n    space: 32,\n    'delete': [8, 46],\n    up: 38,\n    left: 37,\n    right: 39,\n    down: 40\n  };\n\n  function keyFilter(handler, keys) {\n    var codes = keys.map(function (key) {\n      var charCode = key.charCodeAt(0);\n      if (charCode > 47 && charCode < 58) {\n        return parseInt(key, 10);\n      }\n      if (key.length === 1) {\n        charCode = key.toUpperCase().charCodeAt(0);\n        if (charCode > 64 && charCode < 91) {\n          return charCode;\n        }\n      }\n      return keyCodes[key];\n    });\n    codes = [].concat.apply([], codes);\n    return function keyHandler(e) {\n      if (codes.indexOf(e.keyCode) > -1) {\n        return handler.call(this, e);\n      }\n    };\n  }\n\n  function stopFilter(handler) {\n    return function stopHandler(e) {\n      e.stopPropagation();\n      return handler.call(this, e);\n    };\n  }\n\n  function preventFilter(handler) {\n    return function preventHandler(e) {\n      e.preventDefault();\n      return handler.call(this, e);\n    };\n  }\n\n  function selfFilter(handler) {\n    return function selfHandler(e) {\n      if (e.target === e.currentTarget) {\n        return handler.call(this, e);\n      }\n    };\n  }\n\n  var on$1 = {\n\n    priority: ON,\n    acceptStatement: true,\n    keyCodes: keyCodes,\n\n    bind: function bind() {\n      // deal with iframes\n      if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n        var self = this;\n        this.iframeBind = function () {\n          on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n        };\n        this.on('load', this.iframeBind);\n      }\n    },\n\n    update: function update(handler) {\n      // stub a noop for v-on with no value,\n      // e.g. @mousedown.prevent\n      if (!this.descriptor.raw) {\n        handler = function handler() {};\n      }\n\n      if (typeof handler !== 'function') {\n        'development' !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n        return;\n      }\n\n      // apply modifiers\n      if (this.modifiers.stop) {\n        handler = stopFilter(handler);\n      }\n      if (this.modifiers.prevent) {\n        handler = preventFilter(handler);\n      }\n      if (this.modifiers.self) {\n        handler = selfFilter(handler);\n      }\n      // key filter\n      var keys = Object.keys(this.modifiers).filter(function (key) {\n        return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n      });\n      if (keys.length) {\n        handler = keyFilter(handler, keys);\n      }\n\n      this.reset();\n      this.handler = handler;\n\n      if (this.iframeBind) {\n        this.iframeBind();\n      } else {\n        on(this.el, this.arg, this.handler, this.modifiers.capture);\n      }\n    },\n\n    reset: function reset() {\n      var el = this.iframeBind ? this.el.contentWindow : this.el;\n      if (this.handler) {\n        off(el, this.arg, this.handler);\n      }\n    },\n\n    unbind: function unbind() {\n      this.reset();\n    }\n  };\n\n  var prefixes = ['-webkit-', '-moz-', '-ms-'];\n  var camelPrefixes = ['Webkit', 'Moz', 'ms'];\n  var importantRE = /!important;?$/;\n  var propCache = Object.create(null);\n\n  var testEl = null;\n\n  var style = {\n\n    deep: true,\n\n    update: function update(value) {\n      if (typeof value === 'string') {\n        this.el.style.cssText = value;\n      } else if (isArray(value)) {\n        this.handleObject(value.reduce(extend, {}));\n      } else {\n        this.handleObject(value || {});\n      }\n    },\n\n    handleObject: function handleObject(value) {\n      // cache object styles so that only changed props\n      // are actually updated.\n      var cache = this.cache || (this.cache = {});\n      var name, val;\n      for (name in cache) {\n        if (!(name in value)) {\n          this.handleSingle(name, null);\n          delete cache[name];\n        }\n      }\n      for (name in value) {\n        val = value[name];\n        if (val !== cache[name]) {\n          cache[name] = val;\n          this.handleSingle(name, val);\n        }\n      }\n    },\n\n    handleSingle: function handleSingle(prop, value) {\n      prop = normalize(prop);\n      if (!prop) return; // unsupported prop\n      // cast possible numbers/booleans into strings\n      if (value != null) value += '';\n      if (value) {\n        var isImportant = importantRE.test(value) ? 'important' : '';\n        if (isImportant) {\n          /* istanbul ignore if */\n          if ('development' !== 'production') {\n            warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n          }\n          value = value.replace(importantRE, '').trim();\n          this.el.style.setProperty(prop.kebab, value, isImportant);\n        } else {\n          this.el.style[prop.camel] = value;\n        }\n      } else {\n        this.el.style[prop.camel] = '';\n      }\n    }\n\n  };\n\n  /**\n   * Normalize a CSS property name.\n   * - cache result\n   * - auto prefix\n   * - camelCase -> dash-case\n   *\n   * @param {String} prop\n   * @return {String}\n   */\n\n  function normalize(prop) {\n    if (propCache[prop]) {\n      return propCache[prop];\n    }\n    var res = prefix(prop);\n    propCache[prop] = propCache[res] = res;\n    return res;\n  }\n\n  /**\n   * Auto detect the appropriate prefix for a CSS property.\n   * https://gist.github.com/paulirish/523692\n   *\n   * @param {String} prop\n   * @return {String}\n   */\n\n  function prefix(prop) {\n    prop = hyphenate(prop);\n    var camel = camelize(prop);\n    var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n    if (!testEl) {\n      testEl = document.createElement('div');\n    }\n    var i = prefixes.length;\n    var prefixed;\n    if (camel !== 'filter' && camel in testEl.style) {\n      return {\n        kebab: prop,\n        camel: camel\n      };\n    }\n    while (i--) {\n      prefixed = camelPrefixes[i] + upper;\n      if (prefixed in testEl.style) {\n        return {\n          kebab: prefixes[i] + prop,\n          camel: prefixed\n        };\n      }\n    }\n  }\n\n  // xlink\n  var xlinkNS = 'http://www.w3.org/1999/xlink';\n  var xlinkRE = /^xlink:/;\n\n  // check for attributes that prohibit interpolations\n  var disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n  // these attributes should also set their corresponding properties\n  // because they only affect the initial state of the element\n  var attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n  // these attributes expect enumrated values of \"true\" or \"false\"\n  // but are not boolean attributes\n  var enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n  // these attributes should set a hidden property for\n  // binding v-model to object values\n  var modelProps = {\n    value: '_value',\n    'true-value': '_trueValue',\n    'false-value': '_falseValue'\n  };\n\n  var bind$1 = {\n\n    priority: BIND,\n\n    bind: function bind() {\n      var attr = this.arg;\n      var tag = this.el.tagName;\n      // should be deep watch on object mode\n      if (!attr) {\n        this.deep = true;\n      }\n      // handle interpolation bindings\n      var descriptor = this.descriptor;\n      var tokens = descriptor.interp;\n      if (tokens) {\n        // handle interpolations with one-time tokens\n        if (descriptor.hasOneTime) {\n          this.expression = tokensToExp(tokens, this._scope || this.vm);\n        }\n\n        // only allow binding on native attributes\n        if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n          'development' !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n          this.el.removeAttribute(attr);\n          this.invalid = true;\n        }\n\n        /* istanbul ignore if */\n        if ('development' !== 'production') {\n          var raw = attr + '=\"' + descriptor.raw + '\": ';\n          // warn src\n          if (attr === 'src') {\n            warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n          }\n\n          // warn style\n          if (attr === 'style') {\n            warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n          }\n        }\n      }\n    },\n\n    update: function update(value) {\n      if (this.invalid) {\n        return;\n      }\n      var attr = this.arg;\n      if (this.arg) {\n        this.handleSingle(attr, value);\n      } else {\n        this.handleObject(value || {});\n      }\n    },\n\n    // share object handler with v-bind:class\n    handleObject: style.handleObject,\n\n    handleSingle: function handleSingle(attr, value) {\n      var el = this.el;\n      var interp = this.descriptor.interp;\n      if (this.modifiers.camel) {\n        attr = camelize(attr);\n      }\n      if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n        var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n        ? '' : value : value;\n\n        if (el[attr] !== attrValue) {\n          el[attr] = attrValue;\n        }\n      }\n      // set model props\n      var modelProp = modelProps[attr];\n      if (!interp && modelProp) {\n        el[modelProp] = value;\n        // update v-model if present\n        var model = el.__v_model;\n        if (model) {\n          model.listener();\n        }\n      }\n      // do not set value attribute for textarea\n      if (attr === 'value' && el.tagName === 'TEXTAREA') {\n        el.removeAttribute(attr);\n        return;\n      }\n      // update attribute\n      if (enumeratedAttrRE.test(attr)) {\n        el.setAttribute(attr, value ? 'true' : 'false');\n      } else if (value != null && value !== false) {\n        if (attr === 'class') {\n          // handle edge case #1960:\n          // class interpolation should not overwrite Vue transition class\n          if (el.__v_trans) {\n            value += ' ' + el.__v_trans.id + '-transition';\n          }\n          setClass(el, value);\n        } else if (xlinkRE.test(attr)) {\n          el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n        } else {\n          el.setAttribute(attr, value === true ? '' : value);\n        }\n      } else {\n        el.removeAttribute(attr);\n      }\n    }\n  };\n\n  var el = {\n\n    priority: EL,\n\n    bind: function bind() {\n      /* istanbul ignore if */\n      if (!this.arg) {\n        return;\n      }\n      var id = this.id = camelize(this.arg);\n      var refs = (this._scope || this.vm).$els;\n      if (hasOwn(refs, id)) {\n        refs[id] = this.el;\n      } else {\n        defineReactive(refs, id, this.el);\n      }\n    },\n\n    unbind: function unbind() {\n      var refs = (this._scope || this.vm).$els;\n      if (refs[this.id] === this.el) {\n        refs[this.id] = null;\n      }\n    }\n  };\n\n  var ref = {\n    bind: function bind() {\n      'development' !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n    }\n  };\n\n  var cloak = {\n    bind: function bind() {\n      var el = this.el;\n      this.vm.$once('pre-hook:compiled', function () {\n        el.removeAttribute('v-cloak');\n      });\n    }\n  };\n\n  // must export plain object\n  var directives = {\n    text: text$1,\n    html: html,\n    'for': vFor,\n    'if': vIf,\n    show: show,\n    model: model,\n    on: on$1,\n    bind: bind$1,\n    el: el,\n    ref: ref,\n    cloak: cloak\n  };\n\n  var vClass = {\n\n    deep: true,\n\n    update: function update(value) {\n      if (!value) {\n        this.cleanup();\n      } else if (typeof value === 'string') {\n        this.setClass(value.trim().split(/\\s+/));\n      } else {\n        this.setClass(normalize$1(value));\n      }\n    },\n\n    setClass: function setClass(value) {\n      this.cleanup(value);\n      for (var i = 0, l = value.length; i < l; i++) {\n        var val = value[i];\n        if (val) {\n          apply(this.el, val, addClass);\n        }\n      }\n      this.prevKeys = value;\n    },\n\n    cleanup: function cleanup(value) {\n      var prevKeys = this.prevKeys;\n      if (!prevKeys) return;\n      var i = prevKeys.length;\n      while (i--) {\n        var key = prevKeys[i];\n        if (!value || value.indexOf(key) < 0) {\n          apply(this.el, key, removeClass);\n        }\n      }\n    }\n  };\n\n  /**\n   * Normalize objects and arrays (potentially containing objects)\n   * into array of strings.\n   *\n   * @param {Object|Array<String|Object>} value\n   * @return {Array<String>}\n   */\n\n  function normalize$1(value) {\n    var res = [];\n    if (isArray(value)) {\n      for (var i = 0, l = value.length; i < l; i++) {\n        var _key = value[i];\n        if (_key) {\n          if (typeof _key === 'string') {\n            res.push(_key);\n          } else {\n            for (var k in _key) {\n              if (_key[k]) res.push(k);\n            }\n          }\n        }\n      }\n    } else if (isObject(value)) {\n      for (var key in value) {\n        if (value[key]) res.push(key);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Add or remove a class/classes on an element\n   *\n   * @param {Element} el\n   * @param {String} key The class name. This may or may not\n   *                     contain a space character, in such a\n   *                     case we'll deal with multiple class\n   *                     names at once.\n   * @param {Function} fn\n   */\n\n  function apply(el, key, fn) {\n    key = key.trim();\n    if (key.indexOf(' ') === -1) {\n      fn(el, key);\n      return;\n    }\n    // The key contains one or more space characters.\n    // Since a class name doesn't accept such characters, we\n    // treat it as multiple classes.\n    var keys = key.split(/\\s+/);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      fn(el, keys[i]);\n    }\n  }\n\n  var component = {\n\n    priority: COMPONENT,\n\n    params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n    /**\n     * Setup. Two possible usages:\n     *\n     * - static:\n     *   <comp> or <div v-component=\"comp\">\n     *\n     * - dynamic:\n     *   <component :is=\"view\">\n     */\n\n    bind: function bind() {\n      if (!this.el.__vue__) {\n        // keep-alive cache\n        this.keepAlive = this.params.keepAlive;\n        if (this.keepAlive) {\n          this.cache = {};\n        }\n        // check inline-template\n        if (this.params.inlineTemplate) {\n          // extract inline template as a DocumentFragment\n          this.inlineTemplate = extractContent(this.el, true);\n        }\n        // component resolution related state\n        this.pendingComponentCb = this.Component = null;\n        // transition related state\n        this.pendingRemovals = 0;\n        this.pendingRemovalCb = null;\n        // create a ref anchor\n        this.anchor = createAnchor('v-component');\n        replace(this.el, this.anchor);\n        // remove is attribute.\n        // this is removed during compilation, but because compilation is\n        // cached, when the component is used elsewhere this attribute\n        // will remain at link time.\n        this.el.removeAttribute('is');\n        this.el.removeAttribute(':is');\n        // remove ref, same as above\n        if (this.descriptor.ref) {\n          this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n        }\n        // if static, build right now.\n        if (this.literal) {\n          this.setComponent(this.expression);\n        }\n      } else {\n        'development' !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n      }\n    },\n\n    /**\n     * Public update, called by the watcher in the dynamic\n     * literal scenario, e.g. <component :is=\"view\">\n     */\n\n    update: function update(value) {\n      if (!this.literal) {\n        this.setComponent(value);\n      }\n    },\n\n    /**\n     * Switch dynamic components. May resolve the component\n     * asynchronously, and perform transition based on\n     * specified transition mode. Accepts a few additional\n     * arguments specifically for vue-router.\n     *\n     * The callback is called when the full transition is\n     * finished.\n     *\n     * @param {String} value\n     * @param {Function} [cb]\n     */\n\n    setComponent: function setComponent(value, cb) {\n      this.invalidatePending();\n      if (!value) {\n        // just remove current\n        this.unbuild(true);\n        this.remove(this.childVM, cb);\n        this.childVM = null;\n      } else {\n        var self = this;\n        this.resolveComponent(value, function () {\n          self.mountComponent(cb);\n        });\n      }\n    },\n\n    /**\n     * Resolve the component constructor to use when creating\n     * the child vm.\n     *\n     * @param {String|Function} value\n     * @param {Function} cb\n     */\n\n    resolveComponent: function resolveComponent(value, cb) {\n      var self = this;\n      this.pendingComponentCb = cancellable(function (Component) {\n        self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n        self.Component = Component;\n        cb();\n      });\n      this.vm._resolveComponent(value, this.pendingComponentCb);\n    },\n\n    /**\n     * Create a new instance using the current constructor and\n     * replace the existing instance. This method doesn't care\n     * whether the new component and the old one are actually\n     * the same.\n     *\n     * @param {Function} [cb]\n     */\n\n    mountComponent: function mountComponent(cb) {\n      // actual mount\n      this.unbuild(true);\n      var self = this;\n      var activateHooks = this.Component.options.activate;\n      var cached = this.getCached();\n      var newComponent = this.build();\n      if (activateHooks && !cached) {\n        this.waitingFor = newComponent;\n        callActivateHooks(activateHooks, newComponent, function () {\n          if (self.waitingFor !== newComponent) {\n            return;\n          }\n          self.waitingFor = null;\n          self.transition(newComponent, cb);\n        });\n      } else {\n        // update ref for kept-alive component\n        if (cached) {\n          newComponent._updateRef();\n        }\n        this.transition(newComponent, cb);\n      }\n    },\n\n    /**\n     * When the component changes or unbinds before an async\n     * constructor is resolved, we need to invalidate its\n     * pending callback.\n     */\n\n    invalidatePending: function invalidatePending() {\n      if (this.pendingComponentCb) {\n        this.pendingComponentCb.cancel();\n        this.pendingComponentCb = null;\n      }\n    },\n\n    /**\n     * Instantiate/insert a new child vm.\n     * If keep alive and has cached instance, insert that\n     * instance; otherwise build a new one and cache it.\n     *\n     * @param {Object} [extraOptions]\n     * @return {Vue} - the created instance\n     */\n\n    build: function build(extraOptions) {\n      var cached = this.getCached();\n      if (cached) {\n        return cached;\n      }\n      if (this.Component) {\n        // default options\n        var options = {\n          name: this.ComponentName,\n          el: cloneNode(this.el),\n          template: this.inlineTemplate,\n          // make sure to add the child with correct parent\n          // if this is a transcluded component, its parent\n          // should be the transclusion host.\n          parent: this._host || this.vm,\n          // if no inline-template, then the compiled\n          // linker can be cached for better performance.\n          _linkerCachable: !this.inlineTemplate,\n          _ref: this.descriptor.ref,\n          _asComponent: true,\n          _isRouterView: this._isRouterView,\n          // if this is a transcluded component, context\n          // will be the common parent vm of this instance\n          // and its host.\n          _context: this.vm,\n          // if this is inside an inline v-for, the scope\n          // will be the intermediate scope created for this\n          // repeat fragment. this is used for linking props\n          // and container directives.\n          _scope: this._scope,\n          // pass in the owner fragment of this component.\n          // this is necessary so that the fragment can keep\n          // track of its contained components in order to\n          // call attach/detach hooks for them.\n          _frag: this._frag\n        };\n        // extra options\n        // in 1.0.0 this is used by vue-router only\n        /* istanbul ignore if */\n        if (extraOptions) {\n          extend(options, extraOptions);\n        }\n        var child = new this.Component(options);\n        if (this.keepAlive) {\n          this.cache[this.Component.cid] = child;\n        }\n        /* istanbul ignore if */\n        if ('development' !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n          warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n        }\n        return child;\n      }\n    },\n\n    /**\n     * Try to get a cached instance of the current component.\n     *\n     * @return {Vue|undefined}\n     */\n\n    getCached: function getCached() {\n      return this.keepAlive && this.cache[this.Component.cid];\n    },\n\n    /**\n     * Teardown the current child, but defers cleanup so\n     * that we can separate the destroy and removal steps.\n     *\n     * @param {Boolean} defer\n     */\n\n    unbuild: function unbuild(defer) {\n      if (this.waitingFor) {\n        if (!this.keepAlive) {\n          this.waitingFor.$destroy();\n        }\n        this.waitingFor = null;\n      }\n      var child = this.childVM;\n      if (!child || this.keepAlive) {\n        if (child) {\n          // remove ref\n          child._inactive = true;\n          child._updateRef(true);\n        }\n        return;\n      }\n      // the sole purpose of `deferCleanup` is so that we can\n      // \"deactivate\" the vm right now and perform DOM removal\n      // later.\n      child.$destroy(false, defer);\n    },\n\n    /**\n     * Remove current destroyed child and manually do\n     * the cleanup after removal.\n     *\n     * @param {Function} cb\n     */\n\n    remove: function remove(child, cb) {\n      var keepAlive = this.keepAlive;\n      if (child) {\n        // we may have a component switch when a previous\n        // component is still being transitioned out.\n        // we want to trigger only one lastest insertion cb\n        // when the existing transition finishes. (#1119)\n        this.pendingRemovals++;\n        this.pendingRemovalCb = cb;\n        var self = this;\n        child.$remove(function () {\n          self.pendingRemovals--;\n          if (!keepAlive) child._cleanup();\n          if (!self.pendingRemovals && self.pendingRemovalCb) {\n            self.pendingRemovalCb();\n            self.pendingRemovalCb = null;\n          }\n        });\n      } else if (cb) {\n        cb();\n      }\n    },\n\n    /**\n     * Actually swap the components, depending on the\n     * transition mode. Defaults to simultaneous.\n     *\n     * @param {Vue} target\n     * @param {Function} [cb]\n     */\n\n    transition: function transition(target, cb) {\n      var self = this;\n      var current = this.childVM;\n      // for devtool inspection\n      if (current) current._inactive = true;\n      target._inactive = false;\n      this.childVM = target;\n      switch (self.params.transitionMode) {\n        case 'in-out':\n          target.$before(self.anchor, function () {\n            self.remove(current, cb);\n          });\n          break;\n        case 'out-in':\n          self.remove(current, function () {\n            target.$before(self.anchor, cb);\n          });\n          break;\n        default:\n          self.remove(current);\n          target.$before(self.anchor, cb);\n      }\n    },\n\n    /**\n     * Unbind.\n     */\n\n    unbind: function unbind() {\n      this.invalidatePending();\n      // Do not defer cleanup when unbinding\n      this.unbuild();\n      // destroy all keep-alive cached instances\n      if (this.cache) {\n        for (var key in this.cache) {\n          this.cache[key].$destroy();\n        }\n        this.cache = null;\n      }\n    }\n  };\n\n  /**\n   * Call activate hooks in order (asynchronous)\n   *\n   * @param {Array} hooks\n   * @param {Vue} vm\n   * @param {Function} cb\n   */\n\n  function callActivateHooks(hooks, vm, cb) {\n    var total = hooks.length;\n    var called = 0;\n    hooks[0].call(vm, next);\n    function next() {\n      if (++called >= total) {\n        cb();\n      } else {\n        hooks[called].call(vm, next);\n      }\n    }\n  }\n\n  var propBindingModes = config._propBindingModes;\n  var empty = {};\n\n  // regexes\n  var identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n  var settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n  /**\n   * Compile props on a root element and return\n   * a props link function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Array} propOptions\n   * @param {Vue} vm\n   * @return {Function} propsLinkFn\n   */\n\n  function compileProps(el, propOptions, vm) {\n    var props = [];\n    var names = Object.keys(propOptions);\n    var i = names.length;\n    var options, name, attr, value, path, parsed, prop;\n    while (i--) {\n      name = names[i];\n      options = propOptions[name] || empty;\n\n      if ('development' !== 'production' && name === '$data') {\n        warn('Do not use $data as prop.', vm);\n        continue;\n      }\n\n      // props could contain dashes, which will be\n      // interpreted as minus calculations by the parser\n      // so we need to camelize the path here\n      path = camelize(name);\n      if (!identRE$1.test(path)) {\n        'development' !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n        continue;\n      }\n\n      prop = {\n        name: name,\n        path: path,\n        options: options,\n        mode: propBindingModes.ONE_WAY,\n        raw: null\n      };\n\n      attr = hyphenate(name);\n      // first check dynamic version\n      if ((value = getBindAttr(el, attr)) === null) {\n        if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n          prop.mode = propBindingModes.TWO_WAY;\n        } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n          prop.mode = propBindingModes.ONE_TIME;\n        }\n      }\n      if (value !== null) {\n        // has dynamic binding!\n        prop.raw = value;\n        parsed = parseDirective(value);\n        value = parsed.expression;\n        prop.filters = parsed.filters;\n        // check binding type\n        if (isLiteral(value) && !parsed.filters) {\n          // for expressions containing literal numbers and\n          // booleans, there's no need to setup a prop binding,\n          // so we can optimize them as a one-time set.\n          prop.optimizedLiteral = true;\n        } else {\n          prop.dynamic = true;\n          // check non-settable path for two-way bindings\n          if ('development' !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n            prop.mode = propBindingModes.ONE_WAY;\n            warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n          }\n        }\n        prop.parentPath = value;\n\n        // warn required two-way\n        if ('development' !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n          warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n        }\n      } else if ((value = getAttr(el, attr)) !== null) {\n        // has literal binding!\n        prop.raw = value;\n      } else if ('development' !== 'production') {\n        // check possible camelCase prop usage\n        var lowerCaseName = path.toLowerCase();\n        value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n        if (value) {\n          warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n        } else if (options.required) {\n          // warn missing required\n          warn('Missing required prop: ' + name, vm);\n        }\n      }\n      // push prop\n      props.push(prop);\n    }\n    return makePropsLinkFn(props);\n  }\n\n  /**\n   * Build a function that applies props to a vm.\n   *\n   * @param {Array} props\n   * @return {Function} propsLinkFn\n   */\n\n  function makePropsLinkFn(props) {\n    return function propsLinkFn(vm, scope) {\n      // store resolved props info\n      vm._props = {};\n      var inlineProps = vm.$options.propsData;\n      var i = props.length;\n      var prop, path, options, value, raw;\n      while (i--) {\n        prop = props[i];\n        raw = prop.raw;\n        path = prop.path;\n        options = prop.options;\n        vm._props[path] = prop;\n        if (inlineProps && hasOwn(inlineProps, path)) {\n          initProp(vm, prop, inlineProps[path]);\n        }if (raw === null) {\n          // initialize absent prop\n          initProp(vm, prop, undefined);\n        } else if (prop.dynamic) {\n          // dynamic prop\n          if (prop.mode === propBindingModes.ONE_TIME) {\n            // one time binding\n            value = (scope || vm._context || vm).$get(prop.parentPath);\n            initProp(vm, prop, value);\n          } else {\n            if (vm._context) {\n              // dynamic binding\n              vm._bindDir({\n                name: 'prop',\n                def: propDef,\n                prop: prop\n              }, null, null, scope); // el, host, scope\n            } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n          }\n        } else if (prop.optimizedLiteral) {\n          // optimized literal, cast it and just set once\n          var stripped = stripQuotes(raw);\n          value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n          initProp(vm, prop, value);\n        } else {\n          // string literal, but we need to cater for\n          // Boolean props with no value, or with same\n          // literal value (e.g. disabled=\"disabled\")\n          // see https://github.com/vuejs/vue-loader/issues/182\n          value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n          initProp(vm, prop, value);\n        }\n      }\n    };\n  }\n\n  /**\n   * Process a prop with a rawValue, applying necessary coersions,\n   * default values & assertions and call the given callback with\n   * processed value.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} rawValue\n   * @param {Function} fn\n   */\n\n  function processPropValue(vm, prop, rawValue, fn) {\n    var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n    var value = rawValue;\n    if (value === undefined) {\n      value = getPropDefaultValue(vm, prop);\n    }\n    value = coerceProp(prop, value, vm);\n    var coerced = value !== rawValue;\n    if (!assertProp(prop, value, vm)) {\n      value = undefined;\n    }\n    if (isSimple && !coerced) {\n      withoutConversion(function () {\n        fn(value);\n      });\n    } else {\n      fn(value);\n    }\n  }\n\n  /**\n   * Set a prop's initial value on a vm and its data object.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} value\n   */\n\n  function initProp(vm, prop, value) {\n    processPropValue(vm, prop, value, function (value) {\n      defineReactive(vm, prop.path, value);\n    });\n  }\n\n  /**\n   * Update a prop's value on a vm.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} value\n   */\n\n  function updateProp(vm, prop, value) {\n    processPropValue(vm, prop, value, function (value) {\n      vm[prop.path] = value;\n    });\n  }\n\n  /**\n   * Get the default value of a prop.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @return {*}\n   */\n\n  function getPropDefaultValue(vm, prop) {\n    // no default, return undefined\n    var options = prop.options;\n    if (!hasOwn(options, 'default')) {\n      // absent boolean value defaults to false\n      return options.type === Boolean ? false : undefined;\n    }\n    var def = options['default'];\n    // warn against non-factory defaults for Object & Array\n    if (isObject(def)) {\n      'development' !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n    }\n    // call factory function for non-Function types\n    return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n  }\n\n  /**\n   * Assert whether a prop is valid.\n   *\n   * @param {Object} prop\n   * @param {*} value\n   * @param {Vue} vm\n   */\n\n  function assertProp(prop, value, vm) {\n    if (!prop.options.required && ( // non-required\n    prop.raw === null || // abscent\n    value == null) // null or undefined\n    ) {\n        return true;\n      }\n    var options = prop.options;\n    var type = options.type;\n    var valid = !type;\n    var expectedTypes = [];\n    if (type) {\n      if (!isArray(type)) {\n        type = [type];\n      }\n      for (var i = 0; i < type.length && !valid; i++) {\n        var assertedType = assertType(value, type[i]);\n        expectedTypes.push(assertedType.expectedType);\n        valid = assertedType.valid;\n      }\n    }\n    if (!valid) {\n      if ('development' !== 'production') {\n        warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n      }\n      return false;\n    }\n    var validator = options.validator;\n    if (validator) {\n      if (!validator(value)) {\n        'development' !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Force parsing value with coerce option.\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @return {*}\n   */\n\n  function coerceProp(prop, value, vm) {\n    var coerce = prop.options.coerce;\n    if (!coerce) {\n      return value;\n    }\n    if (typeof coerce === 'function') {\n      return coerce(value);\n    } else {\n      'development' !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + (typeof coerce === 'undefined' ? 'undefined' : _typeof(coerce)) + '.', vm);\n      return value;\n    }\n  }\n\n  /**\n   * Assert the type of a value\n   *\n   * @param {*} value\n   * @param {Function} type\n   * @return {Object}\n   */\n\n  function assertType(value, type) {\n    var valid;\n    var expectedType;\n    if (type === String) {\n      expectedType = 'string';\n      valid = (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === expectedType;\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === expectedType;\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === expectedType;\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n    return {\n      valid: valid,\n      expectedType: expectedType\n    };\n  }\n\n  /**\n   * Format type for output\n   *\n   * @param {String} type\n   * @return {String}\n   */\n\n  function formatType(type) {\n    return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n  }\n\n  /**\n   * Format value\n   *\n   * @param {*} value\n   * @return {String}\n   */\n\n  function formatValue(val) {\n    return Object.prototype.toString.call(val).slice(8, -1);\n  }\n\n  var bindingModes = config._propBindingModes;\n\n  var propDef = {\n\n    bind: function bind() {\n      var child = this.vm;\n      var parent = child._context;\n      // passed in from compiler directly\n      var prop = this.descriptor.prop;\n      var childKey = prop.path;\n      var parentKey = prop.parentPath;\n      var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n      var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n        updateProp(child, prop, val);\n      }, {\n        twoWay: twoWay,\n        filters: prop.filters,\n        // important: props need to be observed on the\n        // v-for scope if present\n        scope: this._scope\n      });\n\n      // set the child initial value.\n      initProp(child, prop, parentWatcher.value);\n\n      // setup two-way binding\n      if (twoWay) {\n        // important: defer the child watcher creation until\n        // the created hook (after data observation)\n        var self = this;\n        child.$once('pre-hook:created', function () {\n          self.childWatcher = new Watcher(child, childKey, function (val) {\n            parentWatcher.set(val);\n          }, {\n            // ensure sync upward before parent sync down.\n            // this is necessary in cases e.g. the child\n            // mutates a prop array, then replaces it. (#1683)\n            sync: true\n          });\n        });\n      }\n    },\n\n    unbind: function unbind() {\n      this.parentWatcher.teardown();\n      if (this.childWatcher) {\n        this.childWatcher.teardown();\n      }\n    }\n  };\n\n  var queue$1 = [];\n  var queued = false;\n\n  /**\n   * Push a job into the queue.\n   *\n   * @param {Function} job\n   */\n\n  function pushJob(job) {\n    queue$1.push(job);\n    if (!queued) {\n      queued = true;\n      nextTick(flush);\n    }\n  }\n\n  /**\n   * Flush the queue, and do one forced reflow before\n   * triggering transitions.\n   */\n\n  function flush() {\n    // Force layout\n    var f = document.documentElement.offsetHeight;\n    for (var i = 0; i < queue$1.length; i++) {\n      queue$1[i]();\n    }\n    queue$1 = [];\n    queued = false;\n    // dummy return, so js linters don't complain about\n    // unused variable f\n    return f;\n  }\n\n  var TYPE_TRANSITION = 'transition';\n  var TYPE_ANIMATION = 'animation';\n  var transDurationProp = transitionProp + 'Duration';\n  var animDurationProp = animationProp + 'Duration';\n\n  /**\n   * If a just-entered element is applied the\n   * leave class while its enter transition hasn't started yet,\n   * and the transitioned property has the same value for both\n   * enter/leave, then the leave transition will be skipped and\n   * the transitionend event never fires. This function ensures\n   * its callback to be called after a transition has started\n   * by waiting for double raf.\n   *\n   * It falls back to setTimeout on devices that support CSS\n   * transitions but not raf (e.g. Android 4.2 browser) - since\n   * these environments are usually slow, we are giving it a\n   * relatively large timeout.\n   */\n\n  var raf = inBrowser && window.requestAnimationFrame;\n  var waitForTransitionStart = raf\n  /* istanbul ignore next */\n  ? function (fn) {\n    raf(function () {\n      raf(fn);\n    });\n  } : function (fn) {\n    setTimeout(fn, 50);\n  };\n\n  /**\n   * A Transition object that encapsulates the state and logic\n   * of the transition.\n   *\n   * @param {Element} el\n   * @param {String} id\n   * @param {Object} hooks\n   * @param {Vue} vm\n   */\n  function Transition(el, id, hooks, vm) {\n    this.id = id;\n    this.el = el;\n    this.enterClass = hooks && hooks.enterClass || id + '-enter';\n    this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n    this.hooks = hooks;\n    this.vm = vm;\n    // async state\n    this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n    this.justEntered = false;\n    this.entered = this.left = false;\n    this.typeCache = {};\n    // check css transition type\n    this.type = hooks && hooks.type;\n    /* istanbul ignore if */\n    if ('development' !== 'production') {\n      if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n        warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n      }\n    }\n    // bind\n    var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n      self[m] = bind(self[m], self);\n    });\n  }\n\n  var p$1 = Transition.prototype;\n\n  /**\n   * Start an entering transition.\n   *\n   * 1. enter transition triggered\n   * 2. call beforeEnter hook\n   * 3. add enter class\n   * 4. insert/show element\n   * 5. call enter hook (with possible explicit js callback)\n   * 6. reflow\n   * 7. based on transition type:\n   *    - transition:\n   *        remove class now, wait for transitionend,\n   *        then done if there's no explicit js callback.\n   *    - animation:\n   *        wait for animationend, remove class,\n   *        then done if there's no explicit js callback.\n   *    - no css transition:\n   *        done now if there's no explicit js callback.\n   * 8. wait for either done or js callback, then call\n   *    afterEnter hook.\n   *\n   * @param {Function} op - insert/show the element\n   * @param {Function} [cb]\n   */\n\n  p$1.enter = function (op, cb) {\n    this.cancelPending();\n    this.callHook('beforeEnter');\n    this.cb = cb;\n    addClass(this.el, this.enterClass);\n    op();\n    this.entered = false;\n    this.callHookWithCb('enter');\n    if (this.entered) {\n      return; // user called done synchronously.\n    }\n    this.cancel = this.hooks && this.hooks.enterCancelled;\n    pushJob(this.enterNextTick);\n  };\n\n  /**\n   * The \"nextTick\" phase of an entering transition, which is\n   * to be pushed into a queue and executed after a reflow so\n   * that removing the class can trigger a CSS transition.\n   */\n\n  p$1.enterNextTick = function () {\n    var _this = this;\n\n    // prevent transition skipping\n    this.justEntered = true;\n    waitForTransitionStart(function () {\n      _this.justEntered = false;\n    });\n    var enterDone = this.enterDone;\n    var type = this.getCssTransitionType(this.enterClass);\n    if (!this.pendingJsCb) {\n      if (type === TYPE_TRANSITION) {\n        // trigger transition by removing enter class now\n        removeClass(this.el, this.enterClass);\n        this.setupCssCb(transitionEndEvent, enterDone);\n      } else if (type === TYPE_ANIMATION) {\n        this.setupCssCb(animationEndEvent, enterDone);\n      } else {\n        enterDone();\n      }\n    } else if (type === TYPE_TRANSITION) {\n      removeClass(this.el, this.enterClass);\n    }\n  };\n\n  /**\n   * The \"cleanup\" phase of an entering transition.\n   */\n\n  p$1.enterDone = function () {\n    this.entered = true;\n    this.cancel = this.pendingJsCb = null;\n    removeClass(this.el, this.enterClass);\n    this.callHook('afterEnter');\n    if (this.cb) this.cb();\n  };\n\n  /**\n   * Start a leaving transition.\n   *\n   * 1. leave transition triggered.\n   * 2. call beforeLeave hook\n   * 3. add leave class (trigger css transition)\n   * 4. call leave hook (with possible explicit js callback)\n   * 5. reflow if no explicit js callback is provided\n   * 6. based on transition type:\n   *    - transition or animation:\n   *        wait for end event, remove class, then done if\n   *        there's no explicit js callback.\n   *    - no css transition:\n   *        done if there's no explicit js callback.\n   * 7. wait for either done or js callback, then call\n   *    afterLeave hook.\n   *\n   * @param {Function} op - remove/hide the element\n   * @param {Function} [cb]\n   */\n\n  p$1.leave = function (op, cb) {\n    this.cancelPending();\n    this.callHook('beforeLeave');\n    this.op = op;\n    this.cb = cb;\n    addClass(this.el, this.leaveClass);\n    this.left = false;\n    this.callHookWithCb('leave');\n    if (this.left) {\n      return; // user called done synchronously.\n    }\n    this.cancel = this.hooks && this.hooks.leaveCancelled;\n    // only need to handle leaveDone if\n    // 1. the transition is already done (synchronously called\n    //    by the user, which causes this.op set to null)\n    // 2. there's no explicit js callback\n    if (this.op && !this.pendingJsCb) {\n      // if a CSS transition leaves immediately after enter,\n      // the transitionend event never fires. therefore we\n      // detect such cases and end the leave immediately.\n      if (this.justEntered) {\n        this.leaveDone();\n      } else {\n        pushJob(this.leaveNextTick);\n      }\n    }\n  };\n\n  /**\n   * The \"nextTick\" phase of a leaving transition.\n   */\n\n  p$1.leaveNextTick = function () {\n    var type = this.getCssTransitionType(this.leaveClass);\n    if (type) {\n      var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n      this.setupCssCb(event, this.leaveDone);\n    } else {\n      this.leaveDone();\n    }\n  };\n\n  /**\n   * The \"cleanup\" phase of a leaving transition.\n   */\n\n  p$1.leaveDone = function () {\n    this.left = true;\n    this.cancel = this.pendingJsCb = null;\n    this.op();\n    removeClass(this.el, this.leaveClass);\n    this.callHook('afterLeave');\n    if (this.cb) this.cb();\n    this.op = null;\n  };\n\n  /**\n   * Cancel any pending callbacks from a previously running\n   * but not finished transition.\n   */\n\n  p$1.cancelPending = function () {\n    this.op = this.cb = null;\n    var hasPending = false;\n    if (this.pendingCssCb) {\n      hasPending = true;\n      off(this.el, this.pendingCssEvent, this.pendingCssCb);\n      this.pendingCssEvent = this.pendingCssCb = null;\n    }\n    if (this.pendingJsCb) {\n      hasPending = true;\n      this.pendingJsCb.cancel();\n      this.pendingJsCb = null;\n    }\n    if (hasPending) {\n      removeClass(this.el, this.enterClass);\n      removeClass(this.el, this.leaveClass);\n    }\n    if (this.cancel) {\n      this.cancel.call(this.vm, this.el);\n      this.cancel = null;\n    }\n  };\n\n  /**\n   * Call a user-provided synchronous hook function.\n   *\n   * @param {String} type\n   */\n\n  p$1.callHook = function (type) {\n    if (this.hooks && this.hooks[type]) {\n      this.hooks[type].call(this.vm, this.el);\n    }\n  };\n\n  /**\n   * Call a user-provided, potentially-async hook function.\n   * We check for the length of arguments to see if the hook\n   * expects a `done` callback. If true, the transition's end\n   * will be determined by when the user calls that callback;\n   * otherwise, the end is determined by the CSS transition or\n   * animation.\n   *\n   * @param {String} type\n   */\n\n  p$1.callHookWithCb = function (type) {\n    var hook = this.hooks && this.hooks[type];\n    if (hook) {\n      if (hook.length > 1) {\n        this.pendingJsCb = cancellable(this[type + 'Done']);\n      }\n      hook.call(this.vm, this.el, this.pendingJsCb);\n    }\n  };\n\n  /**\n   * Get an element's transition type based on the\n   * calculated styles.\n   *\n   * @param {String} className\n   * @return {Number}\n   */\n\n  p$1.getCssTransitionType = function (className) {\n    /* istanbul ignore if */\n    if (!transitionEndEvent ||\n    // skip CSS transitions if page is not visible -\n    // this solves the issue of transitionend events not\n    // firing until the page is visible again.\n    // pageVisibility API is supported in IE10+, same as\n    // CSS transitions.\n    document.hidden ||\n    // explicit js-only transition\n    this.hooks && this.hooks.css === false ||\n    // element is hidden\n    isHidden(this.el)) {\n      return;\n    }\n    var type = this.type || this.typeCache[className];\n    if (type) return type;\n    var inlineStyles = this.el.style;\n    var computedStyles = window.getComputedStyle(this.el);\n    var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n    if (transDuration && transDuration !== '0s') {\n      type = TYPE_TRANSITION;\n    } else {\n      var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n      if (animDuration && animDuration !== '0s') {\n        type = TYPE_ANIMATION;\n      }\n    }\n    if (type) {\n      this.typeCache[className] = type;\n    }\n    return type;\n  };\n\n  /**\n   * Setup a CSS transitionend/animationend callback.\n   *\n   * @param {String} event\n   * @param {Function} cb\n   */\n\n  p$1.setupCssCb = function (event, cb) {\n    this.pendingCssEvent = event;\n    var self = this;\n    var el = this.el;\n    var onEnd = this.pendingCssCb = function (e) {\n      if (e.target === el) {\n        off(el, event, onEnd);\n        self.pendingCssEvent = self.pendingCssCb = null;\n        if (!self.pendingJsCb && cb) {\n          cb();\n        }\n      }\n    };\n    on(el, event, onEnd);\n  };\n\n  /**\n   * Check if an element is hidden - in that case we can just\n   * skip the transition alltogether.\n   *\n   * @param {Element} el\n   * @return {Boolean}\n   */\n\n  function isHidden(el) {\n    if (/svg$/.test(el.namespaceURI)) {\n      // SVG elements do not have offset(Width|Height)\n      // so we need to check the client rect\n      var rect = el.getBoundingClientRect();\n      return !(rect.width || rect.height);\n    } else {\n      return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n    }\n  }\n\n  var transition$1 = {\n\n    priority: TRANSITION,\n\n    update: function update(id, oldId) {\n      var el = this.el;\n      // resolve on owner vm\n      var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n      id = id || 'v';\n      oldId = oldId || 'v';\n      el.__v_trans = new Transition(el, id, hooks, this.vm);\n      removeClass(el, oldId + '-transition');\n      addClass(el, id + '-transition');\n    }\n  };\n\n  var internalDirectives = {\n    style: style,\n    'class': vClass,\n    component: component,\n    prop: propDef,\n    transition: transition$1\n  };\n\n  // special binding prefixes\n  var bindRE = /^v-bind:|^:/;\n  var onRE = /^v-on:|^@/;\n  var dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n  var modifierRE = /\\.[^\\.]+/g;\n  var transitionRE = /^(v-bind:|:)?transition$/;\n\n  // default directive priority\n  var DEFAULT_PRIORITY = 1000;\n  var DEFAULT_TERMINAL_PRIORITY = 2000;\n\n  /**\n   * Compile a template and return a reusable composite link\n   * function, which recursively contains more link functions\n   * inside. This top level compile function would normally\n   * be called on instance root nodes, but can also be used\n   * for partial compilation if the partial argument is true.\n   *\n   * The returned composite link function, when called, will\n   * return an unlink function that tearsdown all directives\n   * created during the linking phase.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Object} options\n   * @param {Boolean} partial\n   * @return {Function}\n   */\n\n  function compile(el, options, partial) {\n    // link function for the node itself.\n    var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n    // link function for the childNodes\n    var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n    /**\n     * A composite linker function to be called on a already\n     * compiled piece of DOM, which instantiates all directive\n     * instances.\n     *\n     * @param {Vue} vm\n     * @param {Element|DocumentFragment} el\n     * @param {Vue} [host] - host vm of transcluded content\n     * @param {Object} [scope] - v-for scope\n     * @param {Fragment} [frag] - link context fragment\n     * @return {Function|undefined}\n     */\n\n    return function compositeLinkFn(vm, el, host, scope, frag) {\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(el.childNodes);\n      // link\n      var dirs = linkAndCapture(function compositeLinkCapturer() {\n        if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n        if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n      }, vm);\n      return makeUnlinkFn(vm, dirs);\n    };\n  }\n\n  /**\n   * Apply a linker to a vm/element pair and capture the\n   * directives created during the process.\n   *\n   * @param {Function} linker\n   * @param {Vue} vm\n   */\n\n  function linkAndCapture(linker, vm) {\n    /* istanbul ignore if */\n    if ('development' === 'production') {}\n    var originalDirCount = vm._directives.length;\n    linker();\n    var dirs = vm._directives.slice(originalDirCount);\n    dirs.sort(directiveComparator);\n    for (var i = 0, l = dirs.length; i < l; i++) {\n      dirs[i]._bind();\n    }\n    return dirs;\n  }\n\n  /**\n   * Directive priority sort comparator\n   *\n   * @param {Object} a\n   * @param {Object} b\n   */\n\n  function directiveComparator(a, b) {\n    a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n    b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n    return a > b ? -1 : a === b ? 0 : 1;\n  }\n\n  /**\n   * Linker functions return an unlink function that\n   * tearsdown all directives instances generated during\n   * the process.\n   *\n   * We create unlink functions with only the necessary\n   * information to avoid retaining additional closures.\n   *\n   * @param {Vue} vm\n   * @param {Array} dirs\n   * @param {Vue} [context]\n   * @param {Array} [contextDirs]\n   * @return {Function}\n   */\n\n  function makeUnlinkFn(vm, dirs, context, contextDirs) {\n    function unlink(destroying) {\n      teardownDirs(vm, dirs, destroying);\n      if (context && contextDirs) {\n        teardownDirs(context, contextDirs);\n      }\n    }\n    // expose linked directives\n    unlink.dirs = dirs;\n    return unlink;\n  }\n\n  /**\n   * Teardown partial linked directives.\n   *\n   * @param {Vue} vm\n   * @param {Array} dirs\n   * @param {Boolean} destroying\n   */\n\n  function teardownDirs(vm, dirs, destroying) {\n    var i = dirs.length;\n    while (i--) {\n      dirs[i]._teardown();\n      if ('development' !== 'production' && !destroying) {\n        vm._directives.$remove(dirs[i]);\n      }\n    }\n  }\n\n  /**\n   * Compile link props on an instance.\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   * @param {Object} props\n   * @param {Object} [scope]\n   * @return {Function}\n   */\n\n  function compileAndLinkProps(vm, el, props, scope) {\n    var propsLinkFn = compileProps(el, props, vm);\n    var propDirs = linkAndCapture(function () {\n      propsLinkFn(vm, scope);\n    }, vm);\n    return makeUnlinkFn(vm, propDirs);\n  }\n\n  /**\n   * Compile the root element of an instance.\n   *\n   * 1. attrs on context container (context scope)\n   * 2. attrs on the component template root node, if\n   *    replace:true (child scope)\n   *\n   * If this is a fragment instance, we only need to compile 1.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @param {Object} contextOptions\n   * @return {Function}\n   */\n\n  function compileRoot(el, options, contextOptions) {\n    var containerAttrs = options._containerAttrs;\n    var replacerAttrs = options._replacerAttrs;\n    var contextLinkFn, replacerLinkFn;\n\n    // only need to compile other attributes for\n    // non-fragment instances\n    if (el.nodeType !== 11) {\n      // for components, container and replacer need to be\n      // compiled separately and linked in different scopes.\n      if (options._asComponent) {\n        // 2. container attributes\n        if (containerAttrs && contextOptions) {\n          contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n        }\n        if (replacerAttrs) {\n          // 3. replacer attributes\n          replacerLinkFn = compileDirectives(replacerAttrs, options);\n        }\n      } else {\n        // non-component, just compile as a normal element.\n        replacerLinkFn = compileDirectives(el.attributes, options);\n      }\n    } else if ('development' !== 'production' && containerAttrs) {\n      // warn container directives for fragment instances\n      var names = containerAttrs.filter(function (attr) {\n        // allow vue-loader/vueify scoped css attributes\n        return attr.name.indexOf('_v-') < 0 &&\n        // allow event listeners\n        !onRE.test(attr.name) &&\n        // allow slots\n        attr.name !== 'slot';\n      }).map(function (attr) {\n        return '\"' + attr.name + '\"';\n      });\n      if (names.length) {\n        var plural = names.length > 1;\n        warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n      }\n    }\n\n    options._containerAttrs = options._replacerAttrs = null;\n    return function rootLinkFn(vm, el, scope) {\n      // link context scope dirs\n      var context = vm._context;\n      var contextDirs;\n      if (context && contextLinkFn) {\n        contextDirs = linkAndCapture(function () {\n          contextLinkFn(context, el, null, scope);\n        }, context);\n      }\n\n      // link self\n      var selfDirs = linkAndCapture(function () {\n        if (replacerLinkFn) replacerLinkFn(vm, el);\n      }, vm);\n\n      // return the unlink function that tearsdown context\n      // container directives.\n      return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n    };\n  }\n\n  /**\n   * Compile a node and return a nodeLinkFn based on the\n   * node type.\n   *\n   * @param {Node} node\n   * @param {Object} options\n   * @return {Function|null}\n   */\n\n  function compileNode(node, options) {\n    var type = node.nodeType;\n    if (type === 1 && !isScript(node)) {\n      return compileElement(node, options);\n    } else if (type === 3 && node.data.trim()) {\n      return compileTextNode(node, options);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Compile an element and return a nodeLinkFn.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function|null}\n   */\n\n  function compileElement(el, options) {\n    // preprocess textareas.\n    // textarea treats its text content as the initial value.\n    // just bind it as an attr directive for value.\n    if (el.tagName === 'TEXTAREA') {\n      var tokens = parseText(el.value);\n      if (tokens) {\n        el.setAttribute(':value', tokensToExp(tokens));\n        el.value = '';\n      }\n    }\n    var linkFn;\n    var hasAttrs = el.hasAttributes();\n    var attrs = hasAttrs && toArray(el.attributes);\n    // check terminal directives (for & if)\n    if (hasAttrs) {\n      linkFn = checkTerminalDirectives(el, attrs, options);\n    }\n    // check element directives\n    if (!linkFn) {\n      linkFn = checkElementDirectives(el, options);\n    }\n    // check component\n    if (!linkFn) {\n      linkFn = checkComponent(el, options);\n    }\n    // normal directives\n    if (!linkFn && hasAttrs) {\n      linkFn = compileDirectives(attrs, options);\n    }\n    return linkFn;\n  }\n\n  /**\n   * Compile a textNode and return a nodeLinkFn.\n   *\n   * @param {TextNode} node\n   * @param {Object} options\n   * @return {Function|null} textNodeLinkFn\n   */\n\n  function compileTextNode(node, options) {\n    // skip marked text nodes\n    if (node._skip) {\n      return removeText;\n    }\n\n    var tokens = parseText(node.wholeText);\n    if (!tokens) {\n      return null;\n    }\n\n    // mark adjacent text nodes as skipped,\n    // because we are using node.wholeText to compile\n    // all adjacent text nodes together. This fixes\n    // issues in IE where sometimes it splits up a single\n    // text node into multiple ones.\n    var next = node.nextSibling;\n    while (next && next.nodeType === 3) {\n      next._skip = true;\n      next = next.nextSibling;\n    }\n\n    var frag = document.createDocumentFragment();\n    var el, token;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n      frag.appendChild(el);\n    }\n    return makeTextNodeLinkFn(tokens, frag, options);\n  }\n\n  /**\n   * Linker for an skipped text node.\n   *\n   * @param {Vue} vm\n   * @param {Text} node\n   */\n\n  function removeText(vm, node) {\n    remove(node);\n  }\n\n  /**\n   * Process a single text token.\n   *\n   * @param {Object} token\n   * @param {Object} options\n   * @return {Node}\n   */\n\n  function processTextToken(token, options) {\n    var el;\n    if (token.oneTime) {\n      el = document.createTextNode(token.value);\n    } else {\n      if (token.html) {\n        el = document.createComment('v-html');\n        setTokenType('html');\n      } else {\n        // IE will clean up empty textNodes during\n        // frag.cloneNode(true), so we have to give it\n        // something here...\n        el = document.createTextNode(' ');\n        setTokenType('text');\n      }\n    }\n    function setTokenType(type) {\n      if (token.descriptor) return;\n      var parsed = parseDirective(token.value);\n      token.descriptor = {\n        name: type,\n        def: directives[type],\n        expression: parsed.expression,\n        filters: parsed.filters\n      };\n    }\n    return el;\n  }\n\n  /**\n   * Build a function that processes a textNode.\n   *\n   * @param {Array<Object>} tokens\n   * @param {DocumentFragment} frag\n   */\n\n  function makeTextNodeLinkFn(tokens, frag) {\n    return function textNodeLinkFn(vm, el, host, scope) {\n      var fragClone = frag.cloneNode(true);\n      var childNodes = toArray(fragClone.childNodes);\n      var token, value, node;\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        token = tokens[i];\n        value = token.value;\n        if (token.tag) {\n          node = childNodes[i];\n          if (token.oneTime) {\n            value = (scope || vm).$eval(value);\n            if (token.html) {\n              replace(node, parseTemplate(value, true));\n            } else {\n              node.data = _toString(value);\n            }\n          } else {\n            vm._bindDir(token.descriptor, node, host, scope);\n          }\n        }\n      }\n      replace(el, fragClone);\n    };\n  }\n\n  /**\n   * Compile a node list and return a childLinkFn.\n   *\n   * @param {NodeList} nodeList\n   * @param {Object} options\n   * @return {Function|undefined}\n   */\n\n  function compileNodeList(nodeList, options) {\n    var linkFns = [];\n    var nodeLinkFn, childLinkFn, node;\n    for (var i = 0, l = nodeList.length; i < l; i++) {\n      node = nodeList[i];\n      nodeLinkFn = compileNode(node, options);\n      childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n      linkFns.push(nodeLinkFn, childLinkFn);\n    }\n    return linkFns.length ? makeChildLinkFn(linkFns) : null;\n  }\n\n  /**\n   * Make a child link function for a node's childNodes.\n   *\n   * @param {Array<Function>} linkFns\n   * @return {Function} childLinkFn\n   */\n\n  function makeChildLinkFn(linkFns) {\n    return function childLinkFn(vm, nodes, host, scope, frag) {\n      var node, nodeLinkFn, childrenLinkFn;\n      for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n        node = nodes[n];\n        nodeLinkFn = linkFns[i++];\n        childrenLinkFn = linkFns[i++];\n        // cache childNodes before linking parent, fix #657\n        var childNodes = toArray(node.childNodes);\n        if (nodeLinkFn) {\n          nodeLinkFn(vm, node, host, scope, frag);\n        }\n        if (childrenLinkFn) {\n          childrenLinkFn(vm, childNodes, host, scope, frag);\n        }\n      }\n    };\n  }\n\n  /**\n   * Check for element directives (custom elements that should\n   * be resovled as terminal directives).\n   *\n   * @param {Element} el\n   * @param {Object} options\n   */\n\n  function checkElementDirectives(el, options) {\n    var tag = el.tagName.toLowerCase();\n    if (commonTagRE.test(tag)) {\n      return;\n    }\n    var def = resolveAsset(options, 'elementDirectives', tag);\n    if (def) {\n      return makeTerminalNodeLinkFn(el, tag, '', options, def);\n    }\n  }\n\n  /**\n   * Check if an element is a component. If yes, return\n   * a component link function.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function|undefined}\n   */\n\n  function checkComponent(el, options) {\n    var component = checkComponentAttr(el, options);\n    if (component) {\n      var ref = findRef(el);\n      var descriptor = {\n        name: 'component',\n        ref: ref,\n        expression: component.id,\n        def: internalDirectives.component,\n        modifiers: {\n          literal: !component.dynamic\n        }\n      };\n      var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n        if (ref) {\n          defineReactive((scope || vm).$refs, ref, null);\n        }\n        vm._bindDir(descriptor, el, host, scope, frag);\n      };\n      componentLinkFn.terminal = true;\n      return componentLinkFn;\n    }\n  }\n\n  /**\n   * Check an element for terminal directives in fixed order.\n   * If it finds one, return a terminal link function.\n   *\n   * @param {Element} el\n   * @param {Array} attrs\n   * @param {Object} options\n   * @return {Function} terminalLinkFn\n   */\n\n  function checkTerminalDirectives(el, attrs, options) {\n    // skip v-pre\n    if (getAttr(el, 'v-pre') !== null) {\n      return skip;\n    }\n    // skip v-else block, but only if following v-if\n    if (el.hasAttribute('v-else')) {\n      var prev = el.previousElementSibling;\n      if (prev && prev.hasAttribute('v-if')) {\n        return skip;\n      }\n    }\n\n    var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n    for (var i = 0, j = attrs.length; i < j; i++) {\n      attr = attrs[i];\n      name = attr.name.replace(modifierRE, '');\n      if (matched = name.match(dirAttrRE)) {\n        def = resolveAsset(options, 'directives', matched[1]);\n        if (def && def.terminal) {\n          if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n            termDef = def;\n            rawName = attr.name;\n            modifiers = parseModifiers(attr.name);\n            value = attr.value;\n            dirName = matched[1];\n            arg = matched[2];\n          }\n        }\n      }\n    }\n\n    if (termDef) {\n      return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n    }\n  }\n\n  function skip() {}\n  skip.terminal = true;\n\n  /**\n   * Build a node link function for a terminal directive.\n   * A terminal link function terminates the current\n   * compilation recursion and handles compilation of the\n   * subtree in the directive.\n   *\n   * @param {Element} el\n   * @param {String} dirName\n   * @param {String} value\n   * @param {Object} options\n   * @param {Object} def\n   * @param {String} [rawName]\n   * @param {String} [arg]\n   * @param {Object} [modifiers]\n   * @return {Function} terminalLinkFn\n   */\n\n  function makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n    var parsed = parseDirective(value);\n    var descriptor = {\n      name: dirName,\n      arg: arg,\n      expression: parsed.expression,\n      filters: parsed.filters,\n      raw: value,\n      attr: rawName,\n      modifiers: modifiers,\n      def: def\n    };\n    // check ref for v-for and router-view\n    if (dirName === 'for' || dirName === 'router-view') {\n      descriptor.ref = findRef(el);\n    }\n    var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n      if (descriptor.ref) {\n        defineReactive((scope || vm).$refs, descriptor.ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    fn.terminal = true;\n    return fn;\n  }\n\n  /**\n   * Compile the directives on an element and return a linker.\n   *\n   * @param {Array|NamedNodeMap} attrs\n   * @param {Object} options\n   * @return {Function}\n   */\n\n  function compileDirectives(attrs, options) {\n    var i = attrs.length;\n    var dirs = [];\n    var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n    while (i--) {\n      attr = attrs[i];\n      name = rawName = attr.name;\n      value = rawValue = attr.value;\n      tokens = parseText(value);\n      // reset arg\n      arg = null;\n      // check modifiers\n      modifiers = parseModifiers(name);\n      name = name.replace(modifierRE, '');\n\n      // attribute interpolations\n      if (tokens) {\n        value = tokensToExp(tokens);\n        arg = name;\n        pushDir('bind', directives.bind, tokens);\n        // warn against mixing mustaches with v-bind\n        if ('development' !== 'production') {\n          if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n            return attr.name === ':class' || attr.name === 'v-bind:class';\n          })) {\n            warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n          }\n        }\n      } else\n\n        // special attribute: transition\n        if (transitionRE.test(name)) {\n          modifiers.literal = !bindRE.test(name);\n          pushDir('transition', internalDirectives.transition);\n        } else\n\n          // event handlers\n          if (onRE.test(name)) {\n            arg = name.replace(onRE, '');\n            pushDir('on', directives.on);\n          } else\n\n            // attribute bindings\n            if (bindRE.test(name)) {\n              dirName = name.replace(bindRE, '');\n              if (dirName === 'style' || dirName === 'class') {\n                pushDir(dirName, internalDirectives[dirName]);\n              } else {\n                arg = dirName;\n                pushDir('bind', directives.bind);\n              }\n            } else\n\n              // normal directives\n              if (matched = name.match(dirAttrRE)) {\n                dirName = matched[1];\n                arg = matched[2];\n\n                // skip v-else (when used with v-show)\n                if (dirName === 'else') {\n                  continue;\n                }\n\n                dirDef = resolveAsset(options, 'directives', dirName, true);\n                if (dirDef) {\n                  pushDir(dirName, dirDef);\n                }\n              }\n    }\n\n    /**\n     * Push a directive.\n     *\n     * @param {String} dirName\n     * @param {Object|Function} def\n     * @param {Array} [interpTokens]\n     */\n\n    function pushDir(dirName, def, interpTokens) {\n      var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n      var parsed = !hasOneTimeToken && parseDirective(value);\n      dirs.push({\n        name: dirName,\n        attr: rawName,\n        raw: rawValue,\n        def: def,\n        arg: arg,\n        modifiers: modifiers,\n        // conversion from interpolation strings with one-time token\n        // to expression is differed until directive bind time so that we\n        // have access to the actual vm context for one-time bindings.\n        expression: parsed && parsed.expression,\n        filters: parsed && parsed.filters,\n        interp: interpTokens,\n        hasOneTime: hasOneTimeToken\n      });\n    }\n\n    if (dirs.length) {\n      return makeNodeLinkFn(dirs);\n    }\n  }\n\n  /**\n   * Parse modifiers from directive attribute name.\n   *\n   * @param {String} name\n   * @return {Object}\n   */\n\n  function parseModifiers(name) {\n    var res = Object.create(null);\n    var match = name.match(modifierRE);\n    if (match) {\n      var i = match.length;\n      while (i--) {\n        res[match[i].slice(1)] = true;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Build a link function for all directives on a single node.\n   *\n   * @param {Array} directives\n   * @return {Function} directivesLinkFn\n   */\n\n  function makeNodeLinkFn(directives) {\n    return function nodeLinkFn(vm, el, host, scope, frag) {\n      // reverse apply because it's sorted low to high\n      var i = directives.length;\n      while (i--) {\n        vm._bindDir(directives[i], el, host, scope, frag);\n      }\n    };\n  }\n\n  /**\n   * Check if an interpolation string contains one-time tokens.\n   *\n   * @param {Array} tokens\n   * @return {Boolean}\n   */\n\n  function hasOneTime(tokens) {\n    var i = tokens.length;\n    while (i--) {\n      if (tokens[i].oneTime) return true;\n    }\n  }\n\n  function isScript(el) {\n    return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n  }\n\n  var specialCharRE = /[^\\w\\-:\\.]/;\n\n  /**\n   * Process an element or a DocumentFragment based on a\n   * instance option object. This allows us to transclude\n   * a template node/fragment before the instance is created,\n   * so the processed fragment can then be cloned and reused\n   * in v-for.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Element|DocumentFragment}\n   */\n\n  function transclude(el, options) {\n    // extract container attributes to pass them down\n    // to compiler, because they need to be compiled in\n    // parent scope. we are mutating the options object here\n    // assuming the same object will be used for compile\n    // right after this.\n    if (options) {\n      options._containerAttrs = extractAttrs(el);\n    }\n    // for template tags, what we want is its content as\n    // a documentFragment (for fragment instances)\n    if (isTemplate(el)) {\n      el = parseTemplate(el);\n    }\n    if (options) {\n      if (options._asComponent && !options.template) {\n        options.template = '<slot></slot>';\n      }\n      if (options.template) {\n        options._content = extractContent(el);\n        el = transcludeTemplate(el, options);\n      }\n    }\n    if (isFragment(el)) {\n      // anchors for fragment instance\n      // passing in `persist: true` to avoid them being\n      // discarded by IE during template cloning\n      prepend(createAnchor('v-start', true), el);\n      el.appendChild(createAnchor('v-end', true));\n    }\n    return el;\n  }\n\n  /**\n   * Process the template option.\n   * If the replace option is true this will swap the $el.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Element|DocumentFragment}\n   */\n\n  function transcludeTemplate(el, options) {\n    var template = options.template;\n    var frag = parseTemplate(template, true);\n    if (frag) {\n      var replacer = frag.firstChild;\n      var tag = replacer.tagName && replacer.tagName.toLowerCase();\n      if (options.replace) {\n        /* istanbul ignore if */\n        if (el === document.body) {\n          'development' !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n        }\n        // there are many cases where the instance must\n        // become a fragment instance: basically anything that\n        // can create more than 1 root nodes.\n        if (\n        // multi-children template\n        frag.childNodes.length > 1 ||\n        // non-element template\n        replacer.nodeType !== 1 ||\n        // single nested component\n        tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n        // element directive\n        resolveAsset(options, 'elementDirectives', tag) ||\n        // for block\n        replacer.hasAttribute('v-for') ||\n        // if block\n        replacer.hasAttribute('v-if')) {\n          return frag;\n        } else {\n          options._replacerAttrs = extractAttrs(replacer);\n          mergeAttrs(el, replacer);\n          return replacer;\n        }\n      } else {\n        el.appendChild(frag);\n        return el;\n      }\n    } else {\n      'development' !== 'production' && warn('Invalid template option: ' + template);\n    }\n  }\n\n  /**\n   * Helper to extract a component container's attributes\n   * into a plain object array.\n   *\n   * @param {Element} el\n   * @return {Array}\n   */\n\n  function extractAttrs(el) {\n    if (el.nodeType === 1 && el.hasAttributes()) {\n      return toArray(el.attributes);\n    }\n  }\n\n  /**\n   * Merge the attributes of two elements, and make sure\n   * the class names are merged properly.\n   *\n   * @param {Element} from\n   * @param {Element} to\n   */\n\n  function mergeAttrs(from, to) {\n    var attrs = from.attributes;\n    var i = attrs.length;\n    var name, value;\n    while (i--) {\n      name = attrs[i].name;\n      value = attrs[i].value;\n      if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n        to.setAttribute(name, value);\n      } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n        value.split(/\\s+/).forEach(function (cls) {\n          addClass(to, cls);\n        });\n      }\n    }\n  }\n\n  /**\n   * Scan and determine slot content distribution.\n   * We do this during transclusion instead at compile time so that\n   * the distribution is decoupled from the compilation order of\n   * the slots.\n   *\n   * @param {Element|DocumentFragment} template\n   * @param {Element} content\n   * @param {Vue} vm\n   */\n\n  function resolveSlots(vm, content) {\n    if (!content) {\n      return;\n    }\n    var contents = vm._slotContents = Object.create(null);\n    var el, name;\n    for (var i = 0, l = content.children.length; i < l; i++) {\n      el = content.children[i];\n      /* eslint-disable no-cond-assign */\n      if (name = el.getAttribute('slot')) {\n        (contents[name] || (contents[name] = [])).push(el);\n      }\n      /* eslint-enable no-cond-assign */\n      if ('development' !== 'production' && getBindAttr(el, 'slot')) {\n        warn('The \"slot\" attribute must be static.', vm.$parent);\n      }\n    }\n    for (name in contents) {\n      contents[name] = extractFragment(contents[name], content);\n    }\n    if (content.hasChildNodes()) {\n      var nodes = content.childNodes;\n      if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n        return;\n      }\n      contents['default'] = extractFragment(content.childNodes, content);\n    }\n  }\n\n  /**\n   * Extract qualified content nodes from a node list.\n   *\n   * @param {NodeList} nodes\n   * @return {DocumentFragment}\n   */\n\n  function extractFragment(nodes, parent) {\n    var frag = document.createDocumentFragment();\n    nodes = toArray(nodes);\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      var node = nodes[i];\n      if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n        parent.removeChild(node);\n        node = parseTemplate(node, true);\n      }\n      frag.appendChild(node);\n    }\n    return frag;\n  }\n\n  var compiler = Object.freeze({\n    compile: compile,\n    compileAndLinkProps: compileAndLinkProps,\n    compileRoot: compileRoot,\n    transclude: transclude,\n    resolveSlots: resolveSlots\n  });\n\n  function stateMixin(Vue) {\n    /**\n     * Accessor for `$data` property, since setting $data\n     * requires observing the new object and updating\n     * proxied properties.\n     */\n\n    Object.defineProperty(Vue.prototype, '$data', {\n      get: function get() {\n        return this._data;\n      },\n      set: function set(newData) {\n        if (newData !== this._data) {\n          this._setData(newData);\n        }\n      }\n    });\n\n    /**\n     * Setup the scope of an instance, which contains:\n     * - observed data\n     * - computed properties\n     * - user methods\n     * - meta properties\n     */\n\n    Vue.prototype._initState = function () {\n      this._initProps();\n      this._initMeta();\n      this._initMethods();\n      this._initData();\n      this._initComputed();\n    };\n\n    /**\n     * Initialize props.\n     */\n\n    Vue.prototype._initProps = function () {\n      var options = this.$options;\n      var el = options.el;\n      var props = options.props;\n      if (props && !el) {\n        'development' !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n      }\n      // make sure to convert string selectors into element now\n      el = options.el = query(el);\n      this._propsUnlinkFn = el && el.nodeType === 1 && props\n      // props must be linked in proper scope if inside v-for\n      ? compileAndLinkProps(this, el, props, this._scope) : null;\n    };\n\n    /**\n     * Initialize the data.\n     */\n\n    Vue.prototype._initData = function () {\n      var dataFn = this.$options.data;\n      var data = this._data = dataFn ? dataFn() : {};\n      if (!isPlainObject(data)) {\n        data = {};\n        'development' !== 'production' && warn('data functions should return an object.', this);\n      }\n      var props = this._props;\n      // proxy data on instance\n      var keys = Object.keys(data);\n      var i, key;\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        // there are two scenarios where we can proxy a data key:\n        // 1. it's not already defined as a prop\n        // 2. it's provided via a instantiation option AND there are no\n        //    template prop present\n        if (!props || !hasOwn(props, key)) {\n          this._proxy(key);\n        } else if ('development' !== 'production') {\n          warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n        }\n      }\n      // observe data\n      observe(data, this);\n    };\n\n    /**\n     * Swap the instance's $data. Called in $data's setter.\n     *\n     * @param {Object} newData\n     */\n\n    Vue.prototype._setData = function (newData) {\n      newData = newData || {};\n      var oldData = this._data;\n      this._data = newData;\n      var keys, key, i;\n      // unproxy keys not present in new data\n      keys = Object.keys(oldData);\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        if (!(key in newData)) {\n          this._unproxy(key);\n        }\n      }\n      // proxy keys not already proxied,\n      // and trigger change for changed values\n      keys = Object.keys(newData);\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        if (!hasOwn(this, key)) {\n          // new property\n          this._proxy(key);\n        }\n      }\n      oldData.__ob__.removeVm(this);\n      observe(newData, this);\n      this._digest();\n    };\n\n    /**\n     * Proxy a property, so that\n     * vm.prop === vm._data.prop\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype._proxy = function (key) {\n      if (!isReserved(key)) {\n        // need to store ref to self here\n        // because these getter/setters might\n        // be called by child scopes via\n        // prototype inheritance.\n        var self = this;\n        Object.defineProperty(self, key, {\n          configurable: true,\n          enumerable: true,\n          get: function proxyGetter() {\n            return self._data[key];\n          },\n          set: function proxySetter(val) {\n            self._data[key] = val;\n          }\n        });\n      }\n    };\n\n    /**\n     * Unproxy a property.\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype._unproxy = function (key) {\n      if (!isReserved(key)) {\n        delete this[key];\n      }\n    };\n\n    /**\n     * Force update on every watcher in scope.\n     */\n\n    Vue.prototype._digest = function () {\n      for (var i = 0, l = this._watchers.length; i < l; i++) {\n        this._watchers[i].update(true); // shallow updates\n      }\n    };\n\n    /**\n     * Setup computed properties. They are essentially\n     * special getter/setters\n     */\n\n    function noop() {}\n    Vue.prototype._initComputed = function () {\n      var computed = this.$options.computed;\n      if (computed) {\n        for (var key in computed) {\n          var userDef = computed[key];\n          var def = {\n            enumerable: true,\n            configurable: true\n          };\n          if (typeof userDef === 'function') {\n            def.get = makeComputedGetter(userDef, this);\n            def.set = noop;\n          } else {\n            def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n            def.set = userDef.set ? bind(userDef.set, this) : noop;\n          }\n          Object.defineProperty(this, key, def);\n        }\n      }\n    };\n\n    function makeComputedGetter(getter, owner) {\n      var watcher = new Watcher(owner, getter, null, {\n        lazy: true\n      });\n      return function computedGetter() {\n        if (watcher.dirty) {\n          watcher.evaluate();\n        }\n        if (Dep.target) {\n          watcher.depend();\n        }\n        return watcher.value;\n      };\n    }\n\n    /**\n     * Setup instance methods. Methods must be bound to the\n     * instance since they might be passed down as a prop to\n     * child components.\n     */\n\n    Vue.prototype._initMethods = function () {\n      var methods = this.$options.methods;\n      if (methods) {\n        for (var key in methods) {\n          this[key] = bind(methods[key], this);\n        }\n      }\n    };\n\n    /**\n     * Initialize meta information like $index, $key & $value.\n     */\n\n    Vue.prototype._initMeta = function () {\n      var metas = this.$options._meta;\n      if (metas) {\n        for (var key in metas) {\n          defineReactive(this, key, metas[key]);\n        }\n      }\n    };\n  }\n\n  var eventRE = /^v-on:|^@/;\n\n  function eventsMixin(Vue) {\n    /**\n     * Setup the instance's option events & watchers.\n     * If the value is a string, we pull it from the\n     * instance's methods by name.\n     */\n\n    Vue.prototype._initEvents = function () {\n      var options = this.$options;\n      if (options._asComponent) {\n        registerComponentEvents(this, options.el);\n      }\n      registerCallbacks(this, '$on', options.events);\n      registerCallbacks(this, '$watch', options.watch);\n    };\n\n    /**\n     * Register v-on events on a child component\n     *\n     * @param {Vue} vm\n     * @param {Element} el\n     */\n\n    function registerComponentEvents(vm, el) {\n      var attrs = el.attributes;\n      var name, value, handler;\n      for (var i = 0, l = attrs.length; i < l; i++) {\n        name = attrs[i].name;\n        if (eventRE.test(name)) {\n          name = name.replace(eventRE, '');\n          // force the expression into a statement so that\n          // it always dynamically resolves the method to call (#2670)\n          // kinda ugly hack, but does the job.\n          value = attrs[i].value;\n          if (isSimplePath(value)) {\n            value += '.apply(this, $arguments)';\n          }\n          handler = (vm._scope || vm._context).$eval(value, true);\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        }\n      }\n    }\n\n    /**\n     * Register callbacks for option events and watchers.\n     *\n     * @param {Vue} vm\n     * @param {String} action\n     * @param {Object} hash\n     */\n\n    function registerCallbacks(vm, action, hash) {\n      if (!hash) return;\n      var handlers, key, i, j;\n      for (key in hash) {\n        handlers = hash[key];\n        if (isArray(handlers)) {\n          for (i = 0, j = handlers.length; i < j; i++) {\n            register(vm, action, key, handlers[i]);\n          }\n        } else {\n          register(vm, action, key, handlers);\n        }\n      }\n    }\n\n    /**\n     * Helper to register an event/watch callback.\n     *\n     * @param {Vue} vm\n     * @param {String} action\n     * @param {String} key\n     * @param {Function|String|Object} handler\n     * @param {Object} [options]\n     */\n\n    function register(vm, action, key, handler, options) {\n      var type = typeof handler === 'undefined' ? 'undefined' : _typeof(handler);\n      if (type === 'function') {\n        vm[action](key, handler, options);\n      } else if (type === 'string') {\n        var methods = vm.$options.methods;\n        var method = methods && methods[handler];\n        if (method) {\n          vm[action](key, method, options);\n        } else {\n          'development' !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n        }\n      } else if (handler && type === 'object') {\n        register(vm, action, key, handler.handler, handler);\n      }\n    }\n\n    /**\n     * Setup recursive attached/detached calls\n     */\n\n    Vue.prototype._initDOMHooks = function () {\n      this.$on('hook:attached', onAttached);\n      this.$on('hook:detached', onDetached);\n    };\n\n    /**\n     * Callback to recursively call attached hook on children\n     */\n\n    function onAttached() {\n      if (!this._isAttached) {\n        this._isAttached = true;\n        this.$children.forEach(callAttach);\n      }\n    }\n\n    /**\n     * Iterator to call attached hook\n     *\n     * @param {Vue} child\n     */\n\n    function callAttach(child) {\n      if (!child._isAttached && inDoc(child.$el)) {\n        child._callHook('attached');\n      }\n    }\n\n    /**\n     * Callback to recursively call detached hook on children\n     */\n\n    function onDetached() {\n      if (this._isAttached) {\n        this._isAttached = false;\n        this.$children.forEach(callDetach);\n      }\n    }\n\n    /**\n     * Iterator to call detached hook\n     *\n     * @param {Vue} child\n     */\n\n    function callDetach(child) {\n      if (child._isAttached && !inDoc(child.$el)) {\n        child._callHook('detached');\n      }\n    }\n\n    /**\n     * Trigger all handlers for a hook\n     *\n     * @param {String} hook\n     */\n\n    Vue.prototype._callHook = function (hook) {\n      this.$emit('pre-hook:' + hook);\n      var handlers = this.$options[hook];\n      if (handlers) {\n        for (var i = 0, j = handlers.length; i < j; i++) {\n          handlers[i].call(this);\n        }\n      }\n      this.$emit('hook:' + hook);\n    };\n  }\n\n  function noop$1() {}\n\n  /**\n   * A directive links a DOM element with a piece of data,\n   * which is the result of evaluating an expression.\n   * It registers a watcher with the expression and calls\n   * the DOM update function when a change is triggered.\n   *\n   * @param {Object} descriptor\n   *                 - {String} name\n   *                 - {Object} def\n   *                 - {String} expression\n   *                 - {Array<Object>} [filters]\n   *                 - {Object} [modifiers]\n   *                 - {Boolean} literal\n   *                 - {String} attr\n   *                 - {String} arg\n   *                 - {String} raw\n   *                 - {String} [ref]\n   *                 - {Array<Object>} [interp]\n   *                 - {Boolean} [hasOneTime]\n   * @param {Vue} vm\n   * @param {Node} el\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   * @constructor\n   */\n  function Directive(descriptor, vm, el, host, scope, frag) {\n    this.vm = vm;\n    this.el = el;\n    // copy descriptor properties\n    this.descriptor = descriptor;\n    this.name = descriptor.name;\n    this.expression = descriptor.expression;\n    this.arg = descriptor.arg;\n    this.modifiers = descriptor.modifiers;\n    this.filters = descriptor.filters;\n    this.literal = this.modifiers && this.modifiers.literal;\n    // private\n    this._locked = false;\n    this._bound = false;\n    this._listeners = null;\n    // link context\n    this._host = host;\n    this._scope = scope;\n    this._frag = frag;\n    // store directives on node in dev mode\n    if ('development' !== 'production' && this.el) {\n      this.el._vue_directives = this.el._vue_directives || [];\n      this.el._vue_directives.push(this);\n    }\n  }\n\n  /**\n   * Initialize the directive, mixin definition properties,\n   * setup the watcher, call definition bind() and update()\n   * if present.\n   */\n\n  Directive.prototype._bind = function () {\n    var name = this.name;\n    var descriptor = this.descriptor;\n\n    // remove attribute\n    if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n      var attr = descriptor.attr || 'v-' + name;\n      this.el.removeAttribute(attr);\n    }\n\n    // copy def properties\n    var def = descriptor.def;\n    if (typeof def === 'function') {\n      this.update = def;\n    } else {\n      extend(this, def);\n    }\n\n    // setup directive params\n    this._setupParams();\n\n    // initial bind\n    if (this.bind) {\n      this.bind();\n    }\n    this._bound = true;\n\n    if (this.literal) {\n      this.update && this.update(descriptor.raw);\n    } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n      // wrapped updater for context\n      var dir = this;\n      if (this.update) {\n        this._update = function (val, oldVal) {\n          if (!dir._locked) {\n            dir.update(val, oldVal);\n          }\n        };\n      } else {\n        this._update = noop$1;\n      }\n      var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n      var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n      var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n      {\n        filters: this.filters,\n        twoWay: this.twoWay,\n        deep: this.deep,\n        preProcess: preProcess,\n        postProcess: postProcess,\n        scope: this._scope\n      });\n      // v-model with inital inline value need to sync back to\n      // model instead of update to DOM on init. They would\n      // set the afterBind hook to indicate that.\n      if (this.afterBind) {\n        this.afterBind();\n      } else if (this.update) {\n        this.update(watcher.value);\n      }\n    }\n  };\n\n  /**\n   * Setup all param attributes, e.g. track-by,\n   * transition-mode, etc...\n   */\n\n  Directive.prototype._setupParams = function () {\n    if (!this.params) {\n      return;\n    }\n    var params = this.params;\n    // swap the params array with a fresh object.\n    this.params = Object.create(null);\n    var i = params.length;\n    var key, val, mappedKey;\n    while (i--) {\n      key = hyphenate(params[i]);\n      mappedKey = camelize(key);\n      val = getBindAttr(this.el, key);\n      if (val != null) {\n        // dynamic\n        this._setupParamWatcher(mappedKey, val);\n      } else {\n        // static\n        val = getAttr(this.el, key);\n        if (val != null) {\n          this.params[mappedKey] = val === '' ? true : val;\n        }\n      }\n    }\n  };\n\n  /**\n   * Setup a watcher for a dynamic param.\n   *\n   * @param {String} key\n   * @param {String} expression\n   */\n\n  Directive.prototype._setupParamWatcher = function (key, expression) {\n    var self = this;\n    var called = false;\n    var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n      self.params[key] = val;\n      // since we are in immediate mode,\n      // only call the param change callbacks if this is not the first update.\n      if (called) {\n        var cb = self.paramWatchers && self.paramWatchers[key];\n        if (cb) {\n          cb.call(self, val, oldVal);\n        }\n      } else {\n        called = true;\n      }\n    }, {\n      immediate: true,\n      user: false\n    });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n  };\n\n  /**\n   * Check if the directive is a function caller\n   * and if the expression is a callable one. If both true,\n   * we wrap up the expression and use it as the event\n   * handler.\n   *\n   * e.g. on-click=\"a++\"\n   *\n   * @return {Boolean}\n   */\n\n  Directive.prototype._checkStatement = function () {\n    var expression = this.expression;\n    if (expression && this.acceptStatement && !isSimplePath(expression)) {\n      var fn = parseExpression(expression).get;\n      var scope = this._scope || this.vm;\n      var handler = function handler(e) {\n        scope.$event = e;\n        fn.call(scope, scope);\n        scope.$event = null;\n      };\n      if (this.filters) {\n        handler = scope._applyFilters(handler, null, this.filters);\n      }\n      this.update(handler);\n      return true;\n    }\n  };\n\n  /**\n   * Set the corresponding value with the setter.\n   * This should only be used in two-way directives\n   * e.g. v-model.\n   *\n   * @param {*} value\n   * @public\n   */\n\n  Directive.prototype.set = function (value) {\n    /* istanbul ignore else */\n    if (this.twoWay) {\n      this._withLock(function () {\n        this._watcher.set(value);\n      });\n    } else if ('development' !== 'production') {\n      warn('Directive.set() can only be used inside twoWay' + 'directives.');\n    }\n  };\n\n  /**\n   * Execute a function while preventing that function from\n   * triggering updates on this directive instance.\n   *\n   * @param {Function} fn\n   */\n\n  Directive.prototype._withLock = function (fn) {\n    var self = this;\n    self._locked = true;\n    fn.call(self);\n    nextTick(function () {\n      self._locked = false;\n    });\n  };\n\n  /**\n   * Convenience method that attaches a DOM event listener\n   * to the directive element and autometically tears it down\n   * during unbind.\n   *\n   * @param {String} event\n   * @param {Function} handler\n   * @param {Boolean} [useCapture]\n   */\n\n  Directive.prototype.on = function (event, handler, useCapture) {\n    on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n  };\n\n  /**\n   * Teardown the watcher and call unbind.\n   */\n\n  Directive.prototype._teardown = function () {\n    if (this._bound) {\n      this._bound = false;\n      if (this.unbind) {\n        this.unbind();\n      }\n      if (this._watcher) {\n        this._watcher.teardown();\n      }\n      var listeners = this._listeners;\n      var i;\n      if (listeners) {\n        i = listeners.length;\n        while (i--) {\n          off(this.el, listeners[i][0], listeners[i][1]);\n        }\n      }\n      var unwatchFns = this._paramUnwatchFns;\n      if (unwatchFns) {\n        i = unwatchFns.length;\n        while (i--) {\n          unwatchFns[i]();\n        }\n      }\n      if ('development' !== 'production' && this.el) {\n        this.el._vue_directives.$remove(this);\n      }\n      this.vm = this.el = this._watcher = this._listeners = null;\n    }\n  };\n\n  function lifecycleMixin(Vue) {\n    /**\n     * Update v-ref for component.\n     *\n     * @param {Boolean} remove\n     */\n\n    Vue.prototype._updateRef = function (remove) {\n      var ref = this.$options._ref;\n      if (ref) {\n        var refs = (this._scope || this._context).$refs;\n        if (remove) {\n          if (refs[ref] === this) {\n            refs[ref] = null;\n          }\n        } else {\n          refs[ref] = this;\n        }\n      }\n    };\n\n    /**\n     * Transclude, compile and link element.\n     *\n     * If a pre-compiled linker is available, that means the\n     * passed in element will be pre-transcluded and compiled\n     * as well - all we need to do is to call the linker.\n     *\n     * Otherwise we need to call transclude/compile/link here.\n     *\n     * @param {Element} el\n     */\n\n    Vue.prototype._compile = function (el) {\n      var options = this.$options;\n\n      // transclude and init element\n      // transclude can potentially replace original\n      // so we need to keep reference; this step also injects\n      // the template and caches the original attributes\n      // on the container node and replacer node.\n      var original = el;\n      el = transclude(el, options);\n      this._initElement(el);\n\n      // handle v-pre on root node (#2026)\n      if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n        return;\n      }\n\n      // root is always compiled per-instance, because\n      // container attrs and props can be different every time.\n      var contextOptions = this._context && this._context.$options;\n      var rootLinker = compileRoot(el, options, contextOptions);\n\n      // resolve slot distribution\n      resolveSlots(this, options._content);\n\n      // compile and link the rest\n      var contentLinkFn;\n      var ctor = this.constructor;\n      // component compilation can be cached\n      // as long as it's not using inline-template\n      if (options._linkerCachable) {\n        contentLinkFn = ctor.linker;\n        if (!contentLinkFn) {\n          contentLinkFn = ctor.linker = compile(el, options);\n        }\n      }\n\n      // link phase\n      // make sure to link root with prop scope!\n      var rootUnlinkFn = rootLinker(this, el, this._scope);\n      var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n      // register composite unlink function\n      // to be called during instance destruction\n      this._unlinkFn = function () {\n        rootUnlinkFn();\n        // passing destroying: true to avoid searching and\n        // splicing the directives\n        contentUnlinkFn(true);\n      };\n\n      // finally replace original\n      if (options.replace) {\n        replace(original, el);\n      }\n\n      this._isCompiled = true;\n      this._callHook('compiled');\n    };\n\n    /**\n     * Initialize instance element. Called in the public\n     * $mount() method.\n     *\n     * @param {Element} el\n     */\n\n    Vue.prototype._initElement = function (el) {\n      if (isFragment(el)) {\n        this._isFragment = true;\n        this.$el = this._fragmentStart = el.firstChild;\n        this._fragmentEnd = el.lastChild;\n        // set persisted text anchors to empty\n        if (this._fragmentStart.nodeType === 3) {\n          this._fragmentStart.data = this._fragmentEnd.data = '';\n        }\n        this._fragment = el;\n      } else {\n        this.$el = el;\n      }\n      this.$el.__vue__ = this;\n      this._callHook('beforeCompile');\n    };\n\n    /**\n     * Create and bind a directive to an element.\n     *\n     * @param {Object} descriptor - parsed directive descriptor\n     * @param {Node} node   - target node\n     * @param {Vue} [host] - transclusion host component\n     * @param {Object} [scope] - v-for scope\n     * @param {Fragment} [frag] - owner fragment\n     */\n\n    Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n      this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n    };\n\n    /**\n     * Teardown an instance, unobserves the data, unbind all the\n     * directives, turn off all the event listeners, etc.\n     *\n     * @param {Boolean} remove - whether to remove the DOM node.\n     * @param {Boolean} deferCleanup - if true, defer cleanup to\n     *                                 be called later\n     */\n\n    Vue.prototype._destroy = function (remove, deferCleanup) {\n      if (this._isBeingDestroyed) {\n        if (!deferCleanup) {\n          this._cleanup();\n        }\n        return;\n      }\n\n      var destroyReady;\n      var pendingRemoval;\n\n      var self = this;\n      // Cleanup should be called either synchronously or asynchronoysly as\n      // callback of this.$remove(), or if remove and deferCleanup are false.\n      // In any case it should be called after all other removing, unbinding and\n      // turning of is done\n      var cleanupIfPossible = function cleanupIfPossible() {\n        if (destroyReady && !pendingRemoval && !deferCleanup) {\n          self._cleanup();\n        }\n      };\n\n      // remove DOM element\n      if (remove && this.$el) {\n        pendingRemoval = true;\n        this.$remove(function () {\n          pendingRemoval = false;\n          cleanupIfPossible();\n        });\n      }\n\n      this._callHook('beforeDestroy');\n      this._isBeingDestroyed = true;\n      var i;\n      // remove self from parent. only necessary\n      // if parent is not being destroyed as well.\n      var parent = this.$parent;\n      if (parent && !parent._isBeingDestroyed) {\n        parent.$children.$remove(this);\n        // unregister ref (remove: true)\n        this._updateRef(true);\n      }\n      // destroy all children.\n      i = this.$children.length;\n      while (i--) {\n        this.$children[i].$destroy();\n      }\n      // teardown props\n      if (this._propsUnlinkFn) {\n        this._propsUnlinkFn();\n      }\n      // teardown all directives. this also tearsdown all\n      // directive-owned watchers.\n      if (this._unlinkFn) {\n        this._unlinkFn();\n      }\n      i = this._watchers.length;\n      while (i--) {\n        this._watchers[i].teardown();\n      }\n      // remove reference to self on $el\n      if (this.$el) {\n        this.$el.__vue__ = null;\n      }\n\n      destroyReady = true;\n      cleanupIfPossible();\n    };\n\n    /**\n     * Clean up to ensure garbage collection.\n     * This is called after the leave transition if there\n     * is any.\n     */\n\n    Vue.prototype._cleanup = function () {\n      if (this._isDestroyed) {\n        return;\n      }\n      // remove self from owner fragment\n      // do it in cleanup so that we can call $destroy with\n      // defer right when a fragment is about to be removed.\n      if (this._frag) {\n        this._frag.children.$remove(this);\n      }\n      // remove reference from data ob\n      // frozen object may not have observer.\n      if (this._data && this._data.__ob__) {\n        this._data.__ob__.removeVm(this);\n      }\n      // Clean up references to private properties and other\n      // instances. preserve reference to _data so that proxy\n      // accessors still work. The only potential side effect\n      // here is that mutating the instance after it's destroyed\n      // may affect the state of other components that are still\n      // observing the same object, but that seems to be a\n      // reasonable responsibility for the user rather than\n      // always throwing an error on them.\n      this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n      // call the last hook...\n      this._isDestroyed = true;\n      this._callHook('destroyed');\n      // turn off all instance listeners.\n      this.$off();\n    };\n  }\n\n  function miscMixin(Vue) {\n    /**\n     * Apply a list of filter (descriptors) to a value.\n     * Using plain for loops here because this will be called in\n     * the getter of any watcher with filters so it is very\n     * performance sensitive.\n     *\n     * @param {*} value\n     * @param {*} [oldValue]\n     * @param {Array} filters\n     * @param {Boolean} write\n     * @return {*}\n     */\n\n    Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n      var filter, fn, args, arg, offset, i, l, j, k;\n      for (i = 0, l = filters.length; i < l; i++) {\n        filter = filters[write ? l - i - 1 : i];\n        fn = resolveAsset(this.$options, 'filters', filter.name, true);\n        if (!fn) continue;\n        fn = write ? fn.write : fn.read || fn;\n        if (typeof fn !== 'function') continue;\n        args = write ? [value, oldValue] : [value];\n        offset = write ? 2 : 1;\n        if (filter.args) {\n          for (j = 0, k = filter.args.length; j < k; j++) {\n            arg = filter.args[j];\n            args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n          }\n        }\n        value = fn.apply(this, args);\n      }\n      return value;\n    };\n\n    /**\n     * Resolve a component, depending on whether the component\n     * is defined normally or using an async factory function.\n     * Resolves synchronously if already resolved, otherwise\n     * resolves asynchronously and caches the resolved\n     * constructor on the factory.\n     *\n     * @param {String|Function} value\n     * @param {Function} cb\n     */\n\n    Vue.prototype._resolveComponent = function (value, cb) {\n      var factory;\n      if (typeof value === 'function') {\n        factory = value;\n      } else {\n        factory = resolveAsset(this.$options, 'components', value, true);\n      }\n      /* istanbul ignore if */\n      if (!factory) {\n        return;\n      }\n      // async component factory\n      if (!factory.options) {\n        if (factory.resolved) {\n          // cached\n          cb(factory.resolved);\n        } else if (factory.requested) {\n          // pool callbacks\n          factory.pendingCallbacks.push(cb);\n        } else {\n          factory.requested = true;\n          var cbs = factory.pendingCallbacks = [cb];\n          factory.call(this, function resolve(res) {\n            if (isPlainObject(res)) {\n              res = Vue.extend(res);\n            }\n            // cache resolved\n            factory.resolved = res;\n            // invoke callbacks\n            for (var i = 0, l = cbs.length; i < l; i++) {\n              cbs[i](res);\n            }\n          }, function reject(reason) {\n            'development' !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n          });\n        }\n      } else {\n        // normal component\n        cb(factory);\n      }\n    };\n  }\n\n  var filterRE$1 = /[^|]\\|[^|]/;\n\n  function dataAPI(Vue) {\n    /**\n     * Get the value from an expression on this vm.\n     *\n     * @param {String} exp\n     * @param {Boolean} [asStatement]\n     * @return {*}\n     */\n\n    Vue.prototype.$get = function (exp, asStatement) {\n      var res = parseExpression(exp);\n      if (res) {\n        if (asStatement) {\n          var self = this;\n          return function statementHandler() {\n            self.$arguments = toArray(arguments);\n            var result = res.get.call(self, self);\n            self.$arguments = null;\n            return result;\n          };\n        } else {\n          try {\n            return res.get.call(this, this);\n          } catch (e) {}\n        }\n      }\n    };\n\n    /**\n     * Set the value from an expression on this vm.\n     * The expression must be a valid left-hand\n     * expression in an assignment.\n     *\n     * @param {String} exp\n     * @param {*} val\n     */\n\n    Vue.prototype.$set = function (exp, val) {\n      var res = parseExpression(exp, true);\n      if (res && res.set) {\n        res.set.call(this, this, val);\n      }\n    };\n\n    /**\n     * Delete a property on the VM\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype.$delete = function (key) {\n      del(this._data, key);\n    };\n\n    /**\n     * Watch an expression, trigger callback when its\n     * value changes.\n     *\n     * @param {String|Function} expOrFn\n     * @param {Function} cb\n     * @param {Object} [options]\n     *                 - {Boolean} deep\n     *                 - {Boolean} immediate\n     * @return {Function} - unwatchFn\n     */\n\n    Vue.prototype.$watch = function (expOrFn, cb, options) {\n      var vm = this;\n      var parsed;\n      if (typeof expOrFn === 'string') {\n        parsed = parseDirective(expOrFn);\n        expOrFn = parsed.expression;\n      }\n      var watcher = new Watcher(vm, expOrFn, cb, {\n        deep: options && options.deep,\n        sync: options && options.sync,\n        filters: parsed && parsed.filters,\n        user: !options || options.user !== false\n      });\n      if (options && options.immediate) {\n        cb.call(vm, watcher.value);\n      }\n      return function unwatchFn() {\n        watcher.teardown();\n      };\n    };\n\n    /**\n     * Evaluate a text directive, including filters.\n     *\n     * @param {String} text\n     * @param {Boolean} [asStatement]\n     * @return {String}\n     */\n\n    Vue.prototype.$eval = function (text, asStatement) {\n      // check for filters.\n      if (filterRE$1.test(text)) {\n        var dir = parseDirective(text);\n        // the filter regex check might give false positive\n        // for pipes inside strings, so it's possible that\n        // we don't get any filters here\n        var val = this.$get(dir.expression, asStatement);\n        return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n      } else {\n        // no filter\n        return this.$get(text, asStatement);\n      }\n    };\n\n    /**\n     * Interpolate a piece of template text.\n     *\n     * @param {String} text\n     * @return {String}\n     */\n\n    Vue.prototype.$interpolate = function (text) {\n      var tokens = parseText(text);\n      var vm = this;\n      if (tokens) {\n        if (tokens.length === 1) {\n          return vm.$eval(tokens[0].value) + '';\n        } else {\n          return tokens.map(function (token) {\n            return token.tag ? vm.$eval(token.value) : token.value;\n          }).join('');\n        }\n      } else {\n        return text;\n      }\n    };\n\n    /**\n     * Log instance data as a plain JS object\n     * so that it is easier to inspect in console.\n     * This method assumes console is available.\n     *\n     * @param {String} [path]\n     */\n\n    Vue.prototype.$log = function (path) {\n      var data = path ? getPath(this._data, path) : this._data;\n      if (data) {\n        data = clean(data);\n      }\n      // include computed fields\n      if (!path) {\n        var key;\n        for (key in this.$options.computed) {\n          data[key] = clean(this[key]);\n        }\n        if (this._props) {\n          for (key in this._props) {\n            data[key] = clean(this[key]);\n          }\n        }\n      }\n      console.log(data);\n    };\n\n    /**\n     * \"clean\" a getter/setter converted object into a plain\n     * object copy.\n     *\n     * @param {Object} - obj\n     * @return {Object}\n     */\n\n    function clean(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n  }\n\n  function domAPI(Vue) {\n    /**\n     * Convenience on-instance nextTick. The callback is\n     * auto-bound to the instance, and this avoids component\n     * modules having to rely on the global Vue.\n     *\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$nextTick = function (fn) {\n      nextTick(fn, this);\n    };\n\n    /**\n     * Append instance to target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$appendTo = function (target, cb, withTransition) {\n      return insert(this, target, cb, withTransition, append, appendWithTransition);\n    };\n\n    /**\n     * Prepend instance to target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$prependTo = function (target, cb, withTransition) {\n      target = query(target);\n      if (target.hasChildNodes()) {\n        this.$before(target.firstChild, cb, withTransition);\n      } else {\n        this.$appendTo(target, cb, withTransition);\n      }\n      return this;\n    };\n\n    /**\n     * Insert instance before target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$before = function (target, cb, withTransition) {\n      return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n    };\n\n    /**\n     * Insert instance after target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$after = function (target, cb, withTransition) {\n      target = query(target);\n      if (target.nextSibling) {\n        this.$before(target.nextSibling, cb, withTransition);\n      } else {\n        this.$appendTo(target.parentNode, cb, withTransition);\n      }\n      return this;\n    };\n\n    /**\n     * Remove instance from DOM\n     *\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$remove = function (cb, withTransition) {\n      if (!this.$el.parentNode) {\n        return cb && cb();\n      }\n      var inDocument = this._isAttached && inDoc(this.$el);\n      // if we are not in document, no need to check\n      // for transitions\n      if (!inDocument) withTransition = false;\n      var self = this;\n      var realCb = function realCb() {\n        if (inDocument) self._callHook('detached');\n        if (cb) cb();\n      };\n      if (this._isFragment) {\n        removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n      } else {\n        var op = withTransition === false ? removeWithCb : removeWithTransition;\n        op(this.$el, this, realCb);\n      }\n      return this;\n    };\n\n    /**\n     * Shared DOM insertion function.\n     *\n     * @param {Vue} vm\n     * @param {Element} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition]\n     * @param {Function} op1 - op for non-transition insert\n     * @param {Function} op2 - op for transition insert\n     * @return vm\n     */\n\n    function insert(vm, target, cb, withTransition, op1, op2) {\n      target = query(target);\n      var targetIsDetached = !inDoc(target);\n      var op = withTransition === false || targetIsDetached ? op1 : op2;\n      var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n      if (vm._isFragment) {\n        mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n          op(node, target, vm);\n        });\n        cb && cb();\n      } else {\n        op(vm.$el, target, vm, cb);\n      }\n      if (shouldCallHook) {\n        vm._callHook('attached');\n      }\n      return vm;\n    }\n\n    /**\n     * Check for selectors\n     *\n     * @param {String|Element} el\n     */\n\n    function query(el) {\n      return typeof el === 'string' ? document.querySelector(el) : el;\n    }\n\n    /**\n     * Append operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Node} target\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function append(el, target, vm, cb) {\n      target.appendChild(el);\n      if (cb) cb();\n    }\n\n    /**\n     * InsertBefore operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Node} target\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function beforeWithCb(el, target, vm, cb) {\n      before(el, target);\n      if (cb) cb();\n    }\n\n    /**\n     * Remove operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function removeWithCb(el, vm, cb) {\n      remove(el);\n      if (cb) cb();\n    }\n  }\n\n  function eventsAPI(Vue) {\n    /**\n     * Listen on the given `event` with `fn`.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$on = function (event, fn) {\n      (this._events[event] || (this._events[event] = [])).push(fn);\n      modifyListenerCount(this, event, 1);\n      return this;\n    };\n\n    /**\n     * Adds an `event` listener that will be invoked a single\n     * time then automatically removed.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$once = function (event, fn) {\n      var self = this;\n      function on() {\n        self.$off(event, on);\n        fn.apply(this, arguments);\n      }\n      on.fn = fn;\n      this.$on(event, on);\n      return this;\n    };\n\n    /**\n     * Remove the given callback for `event` or all\n     * registered callbacks.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$off = function (event, fn) {\n      var cbs;\n      // all\n      if (!arguments.length) {\n        if (this.$parent) {\n          for (event in this._events) {\n            cbs = this._events[event];\n            if (cbs) {\n              modifyListenerCount(this, event, -cbs.length);\n            }\n          }\n        }\n        this._events = {};\n        return this;\n      }\n      // specific event\n      cbs = this._events[event];\n      if (!cbs) {\n        return this;\n      }\n      if (arguments.length === 1) {\n        modifyListenerCount(this, event, -cbs.length);\n        this._events[event] = null;\n        return this;\n      }\n      // specific handler\n      var cb;\n      var i = cbs.length;\n      while (i--) {\n        cb = cbs[i];\n        if (cb === fn || cb.fn === fn) {\n          modifyListenerCount(this, event, -1);\n          cbs.splice(i, 1);\n          break;\n        }\n      }\n      return this;\n    };\n\n    /**\n     * Trigger an event on self.\n     *\n     * @param {String|Object} event\n     * @return {Boolean} shouldPropagate\n     */\n\n    Vue.prototype.$emit = function (event) {\n      var isSource = typeof event === 'string';\n      event = isSource ? event : event.name;\n      var cbs = this._events[event];\n      var shouldPropagate = isSource || !cbs;\n      if (cbs) {\n        cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n        // this is a somewhat hacky solution to the question raised\n        // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n        // the propagation handling is somewhat broken. Therefore we\n        // need to treat these inline callbacks differently.\n        var hasParentCbs = isSource && cbs.some(function (cb) {\n          return cb._fromParent;\n        });\n        if (hasParentCbs) {\n          shouldPropagate = false;\n        }\n        var args = toArray(arguments, 1);\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          var cb = cbs[i];\n          var res = cb.apply(this, args);\n          if (res === true && (!hasParentCbs || cb._fromParent)) {\n            shouldPropagate = true;\n          }\n        }\n      }\n      return shouldPropagate;\n    };\n\n    /**\n     * Recursively broadcast an event to all children instances.\n     *\n     * @param {String|Object} event\n     * @param {...*} additional arguments\n     */\n\n    Vue.prototype.$broadcast = function (event) {\n      var isSource = typeof event === 'string';\n      event = isSource ? event : event.name;\n      // if no child has registered for this event,\n      // then there's no need to broadcast.\n      if (!this._eventsCount[event]) return;\n      var children = this.$children;\n      var args = toArray(arguments);\n      if (isSource) {\n        // use object event to indicate non-source emit\n        // on children\n        args[0] = { name: event, source: this };\n      }\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n        var shouldPropagate = child.$emit.apply(child, args);\n        if (shouldPropagate) {\n          child.$broadcast.apply(child, args);\n        }\n      }\n      return this;\n    };\n\n    /**\n     * Recursively propagate an event up the parent chain.\n     *\n     * @param {String} event\n     * @param {...*} additional arguments\n     */\n\n    Vue.prototype.$dispatch = function (event) {\n      var shouldPropagate = this.$emit.apply(this, arguments);\n      if (!shouldPropagate) return;\n      var parent = this.$parent;\n      var args = toArray(arguments);\n      // use object event to indicate non-source emit\n      // on parents\n      args[0] = { name: event, source: this };\n      while (parent) {\n        shouldPropagate = parent.$emit.apply(parent, args);\n        parent = shouldPropagate ? parent.$parent : null;\n      }\n      return this;\n    };\n\n    /**\n     * Modify the listener counts on all parents.\n     * This bookkeeping allows $broadcast to return early when\n     * no child has listened to a certain event.\n     *\n     * @param {Vue} vm\n     * @param {String} event\n     * @param {Number} count\n     */\n\n    var hookRE = /^hook:/;\n    function modifyListenerCount(vm, event, count) {\n      var parent = vm.$parent;\n      // hooks do not get broadcasted so no need\n      // to do bookkeeping for them\n      if (!parent || !count || hookRE.test(event)) return;\n      while (parent) {\n        parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n        parent = parent.$parent;\n      }\n    }\n  }\n\n  function lifecycleAPI(Vue) {\n    /**\n     * Set instance target element and kick off the compilation\n     * process. The passed in `el` can be a selector string, an\n     * existing Element, or a DocumentFragment (for block\n     * instances).\n     *\n     * @param {Element|DocumentFragment|string} el\n     * @public\n     */\n\n    Vue.prototype.$mount = function (el) {\n      if (this._isCompiled) {\n        'development' !== 'production' && warn('$mount() should be called only once.', this);\n        return;\n      }\n      el = query(el);\n      if (!el) {\n        el = document.createElement('div');\n      }\n      this._compile(el);\n      this._initDOMHooks();\n      if (inDoc(this.$el)) {\n        this._callHook('attached');\n        ready.call(this);\n      } else {\n        this.$once('hook:attached', ready);\n      }\n      return this;\n    };\n\n    /**\n     * Mark an instance as ready.\n     */\n\n    function ready() {\n      this._isAttached = true;\n      this._isReady = true;\n      this._callHook('ready');\n    }\n\n    /**\n     * Teardown the instance, simply delegate to the internal\n     * _destroy.\n     *\n     * @param {Boolean} remove\n     * @param {Boolean} deferCleanup\n     */\n\n    Vue.prototype.$destroy = function (remove, deferCleanup) {\n      this._destroy(remove, deferCleanup);\n    };\n\n    /**\n     * Partially compile a piece of DOM and return a\n     * decompile function.\n     *\n     * @param {Element|DocumentFragment} el\n     * @param {Vue} [host]\n     * @param {Object} [scope]\n     * @param {Fragment} [frag]\n     * @return {Function}\n     */\n\n    Vue.prototype.$compile = function (el, host, scope, frag) {\n      return compile(el, this.$options, true)(this, el, host, scope, frag);\n    };\n  }\n\n  /**\n   * The exposed Vue constructor.\n   *\n   * API conventions:\n   * - public API methods/properties are prefixed with `$`\n   * - internal methods/properties are prefixed with `_`\n   * - non-prefixed properties are assumed to be proxied user\n   *   data.\n   *\n   * @constructor\n   * @param {Object} [options]\n   * @public\n   */\n\n  function Vue(options) {\n    this._init(options);\n  }\n\n  // install internals\n  initMixin(Vue);\n  stateMixin(Vue);\n  eventsMixin(Vue);\n  lifecycleMixin(Vue);\n  miscMixin(Vue);\n\n  // install instance APIs\n  dataAPI(Vue);\n  domAPI(Vue);\n  eventsAPI(Vue);\n  lifecycleAPI(Vue);\n\n  var slot = {\n\n    priority: SLOT,\n    params: ['name'],\n\n    bind: function bind() {\n      // this was resolved during component transclusion\n      var name = this.params.name || 'default';\n      var content = this.vm._slotContents && this.vm._slotContents[name];\n      if (!content || !content.hasChildNodes()) {\n        this.fallback();\n      } else {\n        this.compile(content.cloneNode(true), this.vm._context, this.vm);\n      }\n    },\n\n    compile: function compile(content, context, host) {\n      if (content && context) {\n        if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n          // if the inserted slot has v-if\n          // inject fallback content as the v-else\n          var elseBlock = document.createElement('template');\n          elseBlock.setAttribute('v-else', '');\n          elseBlock.innerHTML = this.el.innerHTML;\n          // the else block should be compiled in child scope\n          elseBlock._context = this.vm;\n          content.appendChild(elseBlock);\n        }\n        var scope = host ? host._scope : this._scope;\n        this.unlink = context.$compile(content, host, scope, this._frag);\n      }\n      if (content) {\n        replace(this.el, content);\n      } else {\n        remove(this.el);\n      }\n    },\n\n    fallback: function fallback() {\n      this.compile(extractContent(this.el, true), this.vm);\n    },\n\n    unbind: function unbind() {\n      if (this.unlink) {\n        this.unlink();\n      }\n    }\n  };\n\n  var partial = {\n\n    priority: PARTIAL,\n\n    params: ['name'],\n\n    // watch changes to name for dynamic partials\n    paramWatchers: {\n      name: function name(value) {\n        vIf.remove.call(this);\n        if (value) {\n          this.insert(value);\n        }\n      }\n    },\n\n    bind: function bind() {\n      this.anchor = createAnchor('v-partial');\n      replace(this.el, this.anchor);\n      this.insert(this.params.name);\n    },\n\n    insert: function insert(id) {\n      var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n      if (partial) {\n        this.factory = new FragmentFactory(this.vm, partial);\n        vIf.insert.call(this);\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.frag) {\n        this.frag.destroy();\n      }\n    }\n  };\n\n  var elementDirectives = {\n    slot: slot,\n    partial: partial\n  };\n\n  var convertArray = vFor._postProcess;\n\n  /**\n   * Limit filter for arrays\n   *\n   * @param {Number} n\n   * @param {Number} offset (Decimal expected)\n   */\n\n  function limitBy(arr, n, offset) {\n    offset = offset ? parseInt(offset, 10) : 0;\n    n = toNumber(n);\n    return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n  }\n\n  /**\n   * Filter filter for arrays\n   *\n   * @param {String} search\n   * @param {String} [delimiter]\n   * @param {String} ...dataKeys\n   */\n\n  function filterBy(arr, search, delimiter) {\n    arr = convertArray(arr);\n    if (search == null) {\n      return arr;\n    }\n    if (typeof search === 'function') {\n      return arr.filter(search);\n    }\n    // cast to lowercase string\n    search = ('' + search).toLowerCase();\n    // allow optional `in` delimiter\n    // because why not\n    var n = delimiter === 'in' ? 3 : 2;\n    // extract and flatten keys\n    var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n    var res = [];\n    var item, key, val, j;\n    for (var i = 0, l = arr.length; i < l; i++) {\n      item = arr[i];\n      val = item && item.$value || item;\n      j = keys.length;\n      if (j) {\n        while (j--) {\n          key = keys[j];\n          if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n            res.push(item);\n            break;\n          }\n        }\n      } else if (contains(item, search)) {\n        res.push(item);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Filter filter for arrays\n   *\n   * @param {String|Array<String>|Function} ...sortKeys\n   * @param {Number} [order]\n   */\n\n  function orderBy(arr) {\n    var _comparator = null;\n    var sortKeys = undefined;\n    arr = convertArray(arr);\n\n    // determine order (last argument)\n    var args = toArray(arguments, 1);\n    var order = args[args.length - 1];\n    if (typeof order === 'number') {\n      order = order < 0 ? -1 : 1;\n      args = args.length > 1 ? args.slice(0, -1) : args;\n    } else {\n      order = 1;\n    }\n\n    // determine sortKeys & comparator\n    var firstArg = args[0];\n    if (!firstArg) {\n      return arr;\n    } else if (typeof firstArg === 'function') {\n      // custom comparator\n      _comparator = function comparator(a, b) {\n        return firstArg(a, b) * order;\n      };\n    } else {\n      // string keys. flatten first\n      sortKeys = Array.prototype.concat.apply([], args);\n      _comparator = function comparator(a, b, i) {\n        i = i || 0;\n        return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || _comparator(a, b, i + 1);\n      };\n    }\n\n    function baseCompare(a, b, sortKeyIndex) {\n      var sortKey = sortKeys[sortKeyIndex];\n      if (sortKey) {\n        if (sortKey !== '$key') {\n          if (isObject(a) && '$value' in a) a = a.$value;\n          if (isObject(b) && '$value' in b) b = b.$value;\n        }\n        a = isObject(a) ? getPath(a, sortKey) : a;\n        b = isObject(b) ? getPath(b, sortKey) : b;\n      }\n      return a === b ? 0 : a > b ? order : -order;\n    }\n\n    // sort on a copy to avoid mutating original array\n    return arr.slice().sort(_comparator);\n  }\n\n  /**\n   * String contain helper\n   *\n   * @param {*} val\n   * @param {String} search\n   */\n\n  function contains(val, search) {\n    var i;\n    if (isPlainObject(val)) {\n      var keys = Object.keys(val);\n      i = keys.length;\n      while (i--) {\n        if (contains(val[keys[i]], search)) {\n          return true;\n        }\n      }\n    } else if (isArray(val)) {\n      i = val.length;\n      while (i--) {\n        if (contains(val[i], search)) {\n          return true;\n        }\n      }\n    } else if (val != null) {\n      return val.toString().toLowerCase().indexOf(search) > -1;\n    }\n  }\n\n  var digitsRE = /(\\d{3})(?=\\d)/g;\n\n  // asset collections must be a plain object.\n  var filters = {\n\n    orderBy: orderBy,\n    filterBy: filterBy,\n    limitBy: limitBy,\n\n    /**\n     * Stringify value.\n     *\n     * @param {Number} indent\n     */\n\n    json: {\n      read: function read(value, indent) {\n        return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n      },\n      write: function write(value) {\n        try {\n          return JSON.parse(value);\n        } catch (e) {\n          return value;\n        }\n      }\n    },\n\n    /**\n     * 'abc' => 'Abc'\n     */\n\n    capitalize: function capitalize(value) {\n      if (!value && value !== 0) return '';\n      value = value.toString();\n      return value.charAt(0).toUpperCase() + value.slice(1);\n    },\n\n    /**\n     * 'abc' => 'ABC'\n     */\n\n    uppercase: function uppercase(value) {\n      return value || value === 0 ? value.toString().toUpperCase() : '';\n    },\n\n    /**\n     * 'AbC' => 'abc'\n     */\n\n    lowercase: function lowercase(value) {\n      return value || value === 0 ? value.toString().toLowerCase() : '';\n    },\n\n    /**\n     * 12345 => $12,345.00\n     *\n     * @param {String} sign\n     * @param {Number} decimals Decimal places\n     */\n\n    currency: function currency(value, _currency, decimals) {\n      value = parseFloat(value);\n      if (!isFinite(value) || !value && value !== 0) return '';\n      _currency = _currency != null ? _currency : '$';\n      decimals = decimals != null ? decimals : 2;\n      var stringified = Math.abs(value).toFixed(decimals);\n      var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n      var i = _int.length % 3;\n      var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n      var _float = decimals ? stringified.slice(-1 - decimals) : '';\n      var sign = value < 0 ? '-' : '';\n      return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n    },\n\n    /**\n     * 'item' => 'items'\n     *\n     * @params\n     *  an array of strings corresponding to\n     *  the single, double, triple ... forms of the word to\n     *  be pluralized. When the number to be pluralized\n     *  exceeds the length of the args, it will use the last\n     *  entry in the array.\n     *\n     *  e.g. ['single', 'double', 'triple', 'multiple']\n     */\n\n    pluralize: function pluralize(value) {\n      var args = toArray(arguments, 1);\n      return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n    },\n\n    /**\n     * Debounce a handler function.\n     *\n     * @param {Function} handler\n     * @param {Number} delay = 300\n     * @return {Function}\n     */\n\n    debounce: function debounce(handler, delay) {\n      if (!handler) return;\n      if (!delay) {\n        delay = 300;\n      }\n      return _debounce(handler, delay);\n    }\n  };\n\n  function installGlobalAPI(Vue) {\n    /**\n     * Vue and every constructor that extends Vue has an\n     * associated options object, which can be accessed during\n     * compilation steps as `this.constructor.options`.\n     *\n     * These can be seen as the default options of every\n     * Vue instance.\n     */\n\n    Vue.options = {\n      directives: directives,\n      elementDirectives: elementDirectives,\n      filters: filters,\n      transitions: {},\n      components: {},\n      partials: {},\n      replace: true\n    };\n\n    /**\n     * Expose useful internals\n     */\n\n    Vue.util = util;\n    Vue.config = config;\n    Vue.set = set;\n    Vue['delete'] = del;\n    Vue.nextTick = nextTick;\n\n    /**\n     * The following are exposed for advanced usage / plugins\n     */\n\n    Vue.compiler = compiler;\n    Vue.FragmentFactory = FragmentFactory;\n    Vue.internalDirectives = internalDirectives;\n    Vue.parsers = {\n      path: path,\n      text: text,\n      template: template,\n      directive: directive,\n      expression: expression\n    };\n\n    /**\n     * Each instance constructor, including Vue, has a unique\n     * cid. This enables us to create wrapped \"child\n     * constructors\" for prototypal inheritance and cache them.\n     */\n\n    Vue.cid = 0;\n    var cid = 1;\n\n    /**\n     * Class inheritance\n     *\n     * @param {Object} extendOptions\n     */\n\n    Vue.extend = function (extendOptions) {\n      extendOptions = extendOptions || {};\n      var Super = this;\n      var isFirstExtend = Super.cid === 0;\n      if (isFirstExtend && extendOptions._Ctor) {\n        return extendOptions._Ctor;\n      }\n      var name = extendOptions.name || Super.options.name;\n      if ('development' !== 'production') {\n        if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n          warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n          name = null;\n        }\n      }\n      var Sub = createClass(name || 'VueComponent');\n      Sub.prototype = Object.create(Super.prototype);\n      Sub.prototype.constructor = Sub;\n      Sub.cid = cid++;\n      Sub.options = mergeOptions(Super.options, extendOptions);\n      Sub['super'] = Super;\n      // allow further extension\n      Sub.extend = Super.extend;\n      // create asset registers, so extended classes\n      // can have their private assets too.\n      config._assetTypes.forEach(function (type) {\n        Sub[type] = Super[type];\n      });\n      // enable recursive self-lookup\n      if (name) {\n        Sub.options.components[name] = Sub;\n      }\n      // cache constructor\n      if (isFirstExtend) {\n        extendOptions._Ctor = Sub;\n      }\n      return Sub;\n    };\n\n    /**\n     * A function that returns a sub-class constructor with the\n     * given name. This gives us much nicer output when\n     * logging instances in the console.\n     *\n     * @param {String} name\n     * @return {Function}\n     */\n\n    function createClass(name) {\n      /* eslint-disable no-new-func */\n      return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n      /* eslint-enable no-new-func */\n    }\n\n    /**\n     * Plugin system\n     *\n     * @param {Object} plugin\n     */\n\n    Vue.use = function (plugin) {\n      /* istanbul ignore if */\n      if (plugin.installed) {\n        return;\n      }\n      // additional parameters\n      var args = toArray(arguments, 1);\n      args.unshift(this);\n      if (typeof plugin.install === 'function') {\n        plugin.install.apply(plugin, args);\n      } else {\n        plugin.apply(null, args);\n      }\n      plugin.installed = true;\n      return this;\n    };\n\n    /**\n     * Apply a global mixin by merging it into the default\n     * options.\n     */\n\n    Vue.mixin = function (mixin) {\n      Vue.options = mergeOptions(Vue.options, mixin);\n    };\n\n    /**\n     * Create asset registration methods with the following\n     * signature:\n     *\n     * @param {String} id\n     * @param {*} definition\n     */\n\n    config._assetTypes.forEach(function (type) {\n      Vue[type] = function (id, definition) {\n        if (!definition) {\n          return this.options[type + 's'][id];\n        } else {\n          /* istanbul ignore if */\n          if ('development' !== 'production') {\n            if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n              warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n            }\n          }\n          if (type === 'component' && isPlainObject(definition)) {\n            if (!definition.name) {\n              definition.name = id;\n            }\n            definition = Vue.extend(definition);\n          }\n          this.options[type + 's'][id] = definition;\n          return definition;\n        }\n      };\n    });\n\n    // expose internal transition API\n    extend(Vue.transition, transition);\n  }\n\n  installGlobalAPI(Vue);\n\n  Vue.version = '1.0.25';\n\n  // devtools global hook\n  /* istanbul ignore next */\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if ('development' !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n        console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n      }\n    }\n  }, 0);\n\n  return Vue;\n});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}]},{},[2])\n\n","import Vue from './vue';\nVue.use(require('vue-resource'));\n\nimport {getConfig} from './config';\n\nimport Welcome from './components/welcome';\nimport Single from './components/single';\nimport Split from './components/split';\nimport ThreeUp from './components/three-up';\n\nvar vm = new Vue({\n\n    el: '#app',\n\n    data: {\n        currentUUID: '',\n        // Current Layout\n        currentView: 'welcome',\n        returnData: {},\n        data: {},\n        currentLayoutIndex: 0,\n        currentLayoutTime: 0\n    },\n\n    computed: {\n        serial: function(){\n            return serial;\n        }\n    },\n\n    ready(){\n        console.log('Vue is running');\n\n        this.updateData();\n\n        setInterval(function () {\n             this.updateData();\n        }.bind(this), 5000);\n\n    },\n\n    components: { \n        Welcome,\n        Single,\n        Split\n    },\n    \n    methods: {\n\n        getRoutes() {\n            const URL = \"//localhost:8000\";\n            const API_ENDPOINT = URL + \"/api/v1\";\n\n            return {\n                \"URL\": URL,\n                \"API_ENDPOINT\": API_ENDPOINT,\n                \"GET_CONTENT\": API_ENDPOINT + \"/getcontent\",\n                \"IMAGE_PATH\": URL + '/file/image',\n            }\n        },\n        \n        updateData: function () {\n            // Let's use our config we imported.\n            this.$http.get(getConfig().GET_CONTENT + '/' + this.serial).then((response) => {\n                // success callback\n                this.returnData = response.json();\n\n                console.log(this.returnData);\n\n                // Check the UUID from the response against the UUID saved currently\n                if (this.returnData.uuid == this.currentUUID) {\n                } else {\n                    this.currentUUID = this.returnData.uuid;\n\n                    // If the return does not contain a display group then we must show the image \n                    if(!this.returnData.display_group){\n                        this.currentView = 'Single';\n                        this.data = {\n                            components: [\n                                {\n                                    component_type_id: 1,\n                                    images: [\n                                        {\n                                            filename: this.getRoutes().IMAGE_PATH + `/${this.returnData.data.team_id}/` + this.returnData.data.image\n                                        }\n                                    ]\n                                }\n                            ]\n                        };\n                    } else if(this.returnData.display_group.layouts && this.returnData.display_group.layouts.length > 1){\n\n                        this.rotateLayouts(this.returnData.display_group.layouts);\n\n                    } else {\n\n                        if(this.returnData.display_group.layouts[0].type.name == '3-Up') {\n                            this.currentView = ThreeUp;\n                        } else {\n                            this.currentView = this.returnData.display_group.layouts[0].type.name;\n                        }\n                        this.data = this.returnData.display_group.layouts[0];\n                    }\n\n                }\n\n            }, (response) => {\n                // error callback\n                console.log('failure', response);\n            });\n            \n        },\n\n        rotateLayouts(){\n\n            // workout how many layouts there are\n            let layouts = this.returnData.display_group.layouts;\n            let layout_number = layouts.length;\n            \n            layouts.forEach((layout)=>{\n                if(layout.order == this.currentLayoutIndex){\n                    if(layout.type.name == '3-Up') {\n                        this.currentView = ThreeUp;\n                    } else {\n                        this.currentView = layout.type.name;\n                    }\n                    this.currentLayoutTime = layout.duration;\n                    this.data = layout;\n                }\n            });\n\n            setTimeout(() => {\n                if(this.currentLayoutIndex < layout_number){\n                    this.currentLayoutIndex++;\n                } else {\n                    this.currentLayoutIndex = 0;\n                }\n                this.rotateLayouts();\n            }, this.currentLayoutTime * 1000);\n\n        }\n    }\n});","import Vue from '../vue';\n\nimport {getConfig} from '../config';\n\n// Layout expects \n// data = {\n//      images: [\n//         'http://wallpaperlayer.com/img/2015/5/hd-space-wallpapers-5743-6005-hd-wallpapers.jpg',\n//            'http://cdn.wonderfulengineering.com/wp-content/uploads/2014/04/space-wallpaper-1.jpg',\n//            'https://wallpapersinbox.files.wordpress.com/2012/08/hd-space-6.jpg',\n//            'http://hdwallpaperbackgrounds.net/wp-content/uploads/2015/09/3D-Space-HD-Desktop-Wallpapers.jpg'\n//     ]\n// }\n\n// This directive takes the current slide object params and sets the correct\n// classes as the current slide updates\nVue.directive('show-slide', {\n    params: ['prev-slide','slide-id'],\n    update: function (current) {\n        if(current == this.params.slideId) {\n            this.el.style.opacity = 1;\n            this.el.className = \"slide current-slide\";\n        }\n        else if(this.params.slideId == this.params.prevSlide){\n            this.el.style.opacity = 0;\n            this.el.className = \"slide previous-slide\"            \n        }\n        else {\n            this.el.style.opacity = 0;\n            this.el.className = \"slide next-slide\"\n        }\n    }\n});\n\nexport default Vue.extend({\n    props: ['data'],\n\n    template: `\n        <div class=\"slider-wrapper\">\n            <div class=\"slider-overflow\">\n                <div v-for=\"image in images\" \n                    class=\"slide slide-transition\"\n                    :slide-id=\"$index\"\n                    :prev-slide=\"prevSlide\"\n                    v-show-slide=\"currentSlide\"\n                    v-bind:style=\"{ backgroundImage: 'url(' + image.url + ')' }\">\n                </div>\n            </div>\n        </div>\n    `,\n\n    data: function() {\n        return {\n            currentSlide: 0,\n            speed: 5,\n            images: []\n        }\n    },\n\n    ready(){\n\n        this.setImagesArray();\n\n        // Once ready run a loop every X seconds and call this.changeSlideNext()\n        setInterval(function () {\n            this.changeSlideNext();\n        }.bind(this), (this.speed * 1000));\n\n    },\n\n    computed: {\n        prevSlide: function() {\n            // Calculate the next slide to be active\n            // so we can apply the transitions correctly.\n            if(this.currentSlide == 0)\n                return this.images.length-1;\n            return this.currentSlide - 1;\n        }\n    },\n\n    methods: {\n\n        setImagesArray () {\n            // Map the images data array to one that contains the index, allowing\n            // us to transition through the slides easier\n            if(this.data.images){\n                this.images = this.data.images.map((image, i) => {\n                    let data = {\n                        url : getConfig().IMAGE_PATH + `/${image.team_id}/` + image.filename,\n                        index: i\n                    };\n                    return data;\n                });\n            }\n        },\n\n        changeSlideNext () {\n            // Change to the next slide in the list\n            // If this current slide is the same length as the array\n            // we know we are at the end so we set the slide to 0\n            if(this.currentSlide == this.images.length-1){\n                this.currentSlide = 0;\n            }\n            else this.currentSlide++;\n        }\n    \n    },\n\n    watch : {\n        // Watch the data prop for changes and on change\n        // run the image checkNotNull function to update\n        data: function(){\n            this.currentSlide = 0;\n            this.setImagesArray()\n        }\n    }\n});","import Vue from '../vue';\n\nimport {getConfig} from '../config';\n\nexport default Vue.extend({\n\n    props: ['data'],\n\n    template: `\n        <div class=\"image\" v-bind:style=\"{ backgroundImage: 'url(' + currentImage + ')' }\"></div>\n    `,\n\n    data: () => {\n        return {\n            currentImage: \"\"\n        }\n    },\n\n    ready(){\n        this.checkNotNull();\n    },\n\n    methods: {\n        checkNotNull () {\n            this.currentImage = (this.data.images[0].filename == null) ? \"/no-default.png\" : getConfig().IMAGE_PATH + `/${this.data.images[0].team_id}/` + this.data.images[0].filename ;\n        }\n    },\n\n    watch : {\n        data: function(){\n            this.checkNotNull()\n        }\n    }\n    \n});\n\n","import Vue from '../vue';\n\nimport Image from './image';\nimport Stats from './stats';\nimport Carousel from './carousel';\n\nexport default Vue.extend({\n\n    props: ['data'],\n\n    template: `\n        <div class=\"single\">\n            <component :is=\"component\" :data='component_data'></component>\n        </div>\n    `,\n\n    data: () => {\n        return {\n            image_url: \"\",\n            video_url: \"\",\n            component: \"\",\n            component_data: {}\n        }\n    },\n\n    components: { \n        Image,\n        Stats, \n        Carousel\n    },\n\n    ready(){\n\n        if(this.data.components[0].component_type_id == \"1\"){\n            this.component = \"Image\";\n            this.component_data = this.data.components[0];\n        } else {\n            // It's a carousel\n            this.component = \"Carousel\";\n            this.component_data = this.data.components[0];\n        }\n\n    },\n\n    methods: {\n        \n    },\n\n    watch : {\n        \n    }\n    \n});\n\n","import Vue from '../vue';\n\nimport Image from './image';\nimport Stats from './stats';\nimport Carousel from './carousel';\n\nexport default Vue.extend({\n\n    props: ['data'],\n\n    template: `\n        <div class=\"split\">\n            <div class=\"panel\">\n                <component :is=\"left_component\" :data='left_component_data'></component>\n            </div>\n            <div class=\"panel\">\n                <component :is=\"right_component\" :data='right_component_data'></component>\n            </div>\n        </div>\n    `,\n\n    data: () => {\n        return {\n            image_url: \"\",\n            video_url: \"\",\n            left_component: \"\",\n            left_component_data: {},\n            right_component: \"\",\n            right_component_data: {}\n        }\n    },\n\n    components: { \n        Image,\n        Carousel\n    },\n\n    ready(){\n        this.data.components.forEach((component)=>{\n\n            if(component.location_id == 1){\n                // location 1\n                if(component.component_type_id == \"1\"){\n                    this.left_component = \"Image\";\n                    this.left_component_data = component;\n                } else {\n                    this.left_component = \"Carousel\";\n                    this.left_component_data = component;\n                }\n\n            } else {\n                // location 2\n                if(component.component_type_id == \"1\"){\n                    this.right_component = \"Image\";\n                    this.right_component_data = component;\n                } else {\n                    this.right_component = \"Carousel\";\n                    this.right_component_data = component;\n                }\n            }\n\n        });\n\n    },\n\n    methods: {\n        \n    },\n\n    watch : {\n        \n    }\n    \n});\n\n","import Vue from '../vue';\n\n// View expects \n// data = {\n//     \"message\" : \"Message\",\n//      \"stats\": [\n//         {\n//             \"stat\" : \"21%\",\n//             \"title\": \"Title 1\"\n//         },\n//         {\n//             \"stat\" : \"28.32 hours\",\n//             \"title\": \"Title 2\"\n//         },\n//         {\n//             \"stat\" : \"12.5 minutes\",\n//             \"title\": \"Title 3\"\n//         }\n//     ]\n// }\n\nexport default Vue.extend({\n\n    props: ['data', 'serial'],\n\n    template: `\n        <div class=\"stats\">\n            {{title1}}\n        </div>\n    `,\n\n    data: () => {\n        return {\n            title1: \"\",\n        }\n    },\n\n    computed: {\n        \n    },\n\n    ready(){\n        console.log(this.data);\n\n        this.populateStats();\n    },\n\n\n    methods: {\n\n        populateStats: function(){\n\n            // Take the data object and match it up to the various placeholders in the template\n\n            this.title1 = this.data.stats[0].title;\n\n        }\n\n    }\n    \n});\n\n","import Vue from '../vue';\n\nimport Image from './image';\nimport Carousel from './carousel';\n\nexport default Vue.extend({\n\n    props: ['data'],\n\n    template: `\n        <div class=\"three-up\">\n            <div class=\"panel\">\n                <div class=\"split-horizontal\">                \n                   <component :is=\"top_component\" :data='top_component_data'></component>\n                   <component :is=\"bottom_component\" :data='bottom_component_data'></component>\n                </div>\n            </div>\n            <div class=\"panel\">\n                <component :is=\"right_component\" :data='right_component_data'></component>\n            </div>\n        </div>\n    `,\n\n    data: () => {\n        return {\n            image_url: \"\",\n            video_url: \"\",\n            top_component: \"\",\n            top_component_data: {},\n            bottom_component: \"\",\n            bottom_component_data: {},\n            right_component: \"\",\n            right_component_data: {}\n        }\n    },\n\n    components: {\n        Image,\n        Carousel\n    },\n\n    ready(){\n        this.data.components.forEach((component)=>{\n\n            if(component.location_id == 1){\n                // location 1\n                if(component.component_type_id == \"1\"){\n                    this.top_component = \"Image\";\n                    this.top_component_data = component;\n                } else {\n                    this.top_component = \"Carousel\";\n                    this.top_component_data = component;\n                }\n\n            } else if (component.location_id == 2) {\n                // location 2\n                if(component.component_type_id == \"1\"){\n                    this.bottom_component = \"Image\";\n                    this.bottom_component_data = component;\n                } else {\n                    this.bottom_component = \"Carousel\";\n                    this.bottom_component_data = component;\n                }\n            } else {\n                // location 3\n                if(component.component_type_id == \"1\"){\n                    this.right_component = \"Image\";\n                    this.right_component_data = component;\n                } else {\n                    this.right_component = \"Carousel\";\n                    this.right_component_data = component;\n                }\n            }\n\n        });\n\n    },\n\n    methods: {\n\n    },\n\n    watch : {\n\n    }\n\n});\n\n","import Vue from '../vue';\n\nexport default Vue.extend({\n\n    props: ['data', 'serial'],\n\n    template: `\n        <div class=\"welcome\">\n            <div class=\"welcome__content\">\n                <h1>Welcome to Screens Project!</h1>\n                <p>To get this screen setup you can either download the Screens app from your app store or login to the website.</p>\n                <p>Be sure to add the serial number below and a location description for this screen. Later you can group many screens together into areas.</p>\n                <h2>The serial number is: {{serial}}</h2>\n            </div>\n        </div>\n    `,\n\n    data: () => {\n        return {\n\n        }\n    },\n\n    computed: {\n        \n    },\n\n    ready(){\n        console.log('Welcome Running');\n    },\n\n\n    methods: {\n\n    }\n    \n});\n\n","export function getConfig() {\n    // //pislice.local\n    const URL = \"//localhost:8000\";\n    const API_ENDPOINT = URL + \"/api/v1\";\n\n    return {\n        \"URL\": URL,\n        \"API_ENDPOINT\": API_ENDPOINT,\n        \"GET_CONTENT\": API_ENDPOINT + \"/getcontent\",\n        \"IMAGE_PATH\": URL + '/file/image',\n    }\n}","/*!\n * Vue.js v1.0.25\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Vue = factory());\n}(this, function () { 'use strict';\n\n  function set(obj, key, val) {\n    if (hasOwn(obj, key)) {\n      obj[key] = val;\n      return;\n    }\n    if (obj._isVue) {\n      set(obj._data, key, val);\n      return;\n    }\n    var ob = obj.__ob__;\n    if (!ob) {\n      obj[key] = val;\n      return;\n    }\n    ob.convert(key, val);\n    ob.dep.notify();\n    if (ob.vms) {\n      var i = ob.vms.length;\n      while (i--) {\n        var vm = ob.vms[i];\n        vm._proxy(key);\n        vm._digest();\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Delete a property and trigger change if necessary.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   */\n\n  function del(obj, key) {\n    if (!hasOwn(obj, key)) {\n      return;\n    }\n    delete obj[key];\n    var ob = obj.__ob__;\n    if (!ob) {\n      if (obj._isVue) {\n        delete obj._data[key];\n        obj._digest();\n      }\n      return;\n    }\n    ob.dep.notify();\n    if (ob.vms) {\n      var i = ob.vms.length;\n      while (i--) {\n        var vm = ob.vms[i];\n        vm._unproxy(key);\n        vm._digest();\n      }\n    }\n  }\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check whether the object has the property.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @return {Boolean}\n   */\n\n  function hasOwn(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  }\n\n  /**\n   * Check if an expression is a literal value.\n   *\n   * @param {String} exp\n   * @return {Boolean}\n   */\n\n  var literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\n  function isLiteral(exp) {\n    return literalValueRE.test(exp);\n  }\n\n  /**\n   * Check if a string starts with $ or _\n   *\n   * @param {String} str\n   * @return {Boolean}\n   */\n\n  function isReserved(str) {\n    var c = (str + '').charCodeAt(0);\n    return c === 0x24 || c === 0x5F;\n  }\n\n  /**\n   * Guard text output, make sure undefined outputs\n   * empty string\n   *\n   * @param {*} value\n   * @return {String}\n   */\n\n  function _toString(value) {\n    return value == null ? '' : value.toString();\n  }\n\n  /**\n   * Check and convert possible numeric strings to numbers\n   * before setting back to data\n   *\n   * @param {*} value\n   * @return {*|Number}\n   */\n\n  function toNumber(value) {\n    if (typeof value !== 'string') {\n      return value;\n    } else {\n      var parsed = Number(value);\n      return isNaN(parsed) ? value : parsed;\n    }\n  }\n\n  /**\n   * Convert string boolean literals into real booleans.\n   *\n   * @param {*} value\n   * @return {*|Boolean}\n   */\n\n  function toBoolean(value) {\n    return value === 'true' ? true : value === 'false' ? false : value;\n  }\n\n  /**\n   * Strip quotes from a string\n   *\n   * @param {String} str\n   * @return {String | false}\n   */\n\n  function stripQuotes(str) {\n    var a = str.charCodeAt(0);\n    var b = str.charCodeAt(str.length - 1);\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n  }\n\n  /**\n   * Camelize a hyphen-delmited string.\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var camelizeRE = /-(\\w)/g;\n\n  function camelize(str) {\n    return str.replace(camelizeRE, toUpper);\n  }\n\n  function toUpper(_, c) {\n    return c ? c.toUpperCase() : '';\n  }\n\n  /**\n   * Hyphenate a camelCase string.\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var hyphenateRE = /([a-z\\d])([A-Z])/g;\n\n  function hyphenate(str) {\n    return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n  }\n\n  /**\n   * Converts hyphen/underscore/slash delimitered names into\n   * camelized classNames.\n   *\n   * e.g. my-component => MyComponent\n   *      some_else    => SomeElse\n   *      some/comp    => SomeComp\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\n  function classify(str) {\n    return str.replace(classifyRE, toUpper);\n  }\n\n  /**\n   * Simple bind, faster than native\n   *\n   * @param {Function} fn\n   * @param {Object} ctx\n   * @return {Function}\n   */\n\n  function bind(fn, ctx) {\n    return function (a) {\n      var l = arguments.length;\n      return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n    };\n  }\n\n  /**\n   * Convert an Array-like object to a real Array.\n   *\n   * @param {Array-like} list\n   * @param {Number} [start] - start index\n   * @return {Array}\n   */\n\n  function toArray(list, start) {\n    start = start || 0;\n    var i = list.length - start;\n    var ret = new Array(i);\n    while (i--) {\n      ret[i] = list[i + start];\n    }\n    return ret;\n  }\n\n  /**\n   * Mix properties into target object.\n   *\n   * @param {Object} to\n   * @param {Object} from\n   */\n\n  function extend(to, from) {\n    var keys = Object.keys(from);\n    var i = keys.length;\n    while (i--) {\n      to[keys[i]] = from[keys[i]];\n    }\n    return to;\n  }\n\n  /**\n   * Quick object check - this is primarily used to tell\n   * Objects from primitive values when we know the value\n   * is a JSON-compliant type.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  function isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n  }\n\n  /**\n   * Strict object type check. Only returns true\n   * for plain JavaScript objects.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  var toString = Object.prototype.toString;\n  var OBJECT_STRING = '[object Object]';\n\n  function isPlainObject(obj) {\n    return toString.call(obj) === OBJECT_STRING;\n  }\n\n  /**\n   * Array type check.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  var isArray = Array.isArray;\n\n  /**\n   * Define a property.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @param {*} val\n   * @param {Boolean} [enumerable]\n   */\n\n  function def(obj, key, val, enumerable) {\n    Object.defineProperty(obj, key, {\n      value: val,\n      enumerable: !!enumerable,\n      writable: true,\n      configurable: true\n    });\n  }\n\n  /**\n   * Debounce a function so it only gets called after the\n   * input stops arriving after the given wait period.\n   *\n   * @param {Function} func\n   * @param {Number} wait\n   * @return {Function} - the debounced function\n   */\n\n  function _debounce(func, wait) {\n    var timeout, args, context, timestamp, result;\n    var later = function later() {\n      var last = Date.now() - timestamp;\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    };\n    return function () {\n      context = this;\n      args = arguments;\n      timestamp = Date.now();\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Manual indexOf because it's slightly faster than\n   * native.\n   *\n   * @param {Array} arr\n   * @param {*} obj\n   */\n\n  function indexOf(arr, obj) {\n    var i = arr.length;\n    while (i--) {\n      if (arr[i] === obj) return i;\n    }\n    return -1;\n  }\n\n  /**\n   * Make a cancellable version of an async callback.\n   *\n   * @param {Function} fn\n   * @return {Function}\n   */\n\n  function cancellable(fn) {\n    var cb = function cb() {\n      if (!cb.cancelled) {\n        return fn.apply(this, arguments);\n      }\n    };\n    cb.cancel = function () {\n      cb.cancelled = true;\n    };\n    return cb;\n  }\n\n  /**\n   * Check if two values are loosely equal - that is,\n   * if they are plain objects, do they have the same shape?\n   *\n   * @param {*} a\n   * @param {*} b\n   * @return {Boolean}\n   */\n\n  function looseEqual(a, b) {\n    /* eslint-disable eqeqeq */\n    return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n    /* eslint-enable eqeqeq */\n  }\n\n  var hasProto = ('__proto__' in {});\n\n  // Browser environment sniffing\n  var inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n  // detect devtools\n  var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n  // UA sniffing for working around browser-specific quirks\n  var UA = inBrowser && window.navigator.userAgent.toLowerCase();\n  var isIE = UA && UA.indexOf('trident') > 0;\n  var isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n  var isAndroid = UA && UA.indexOf('android') > 0;\n  var isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n  var iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n  var iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n  // detecting iOS UIWebView by indexedDB\n  var hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\n  var transitionProp = undefined;\n  var transitionEndEvent = undefined;\n  var animationProp = undefined;\n  var animationEndEvent = undefined;\n\n  // Transition property/event sniffing\n  if (inBrowser && !isIE9) {\n    var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n    var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n    transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n    transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n    animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n    animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n  }\n\n  /**\n   * Defer a task to execute it asynchronously. Ideally this\n   * should be executed as a microtask, so we leverage\n   * MutationObserver if it's available, and fallback to\n   * setTimeout(0).\n   *\n   * @param {Function} cb\n   * @param {Object} ctx\n   */\n\n  var nextTick = (function () {\n    var callbacks = [];\n    var pending = false;\n    var timerFunc;\n    function nextTickHandler() {\n      pending = false;\n      var copies = callbacks.slice(0);\n      callbacks = [];\n      for (var i = 0; i < copies.length; i++) {\n        copies[i]();\n      }\n    }\n\n    /* istanbul ignore if */\n    if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n      var counter = 1;\n      var observer = new MutationObserver(nextTickHandler);\n      var textNode = document.createTextNode(counter);\n      observer.observe(textNode, {\n        characterData: true\n      });\n      timerFunc = function () {\n        counter = (counter + 1) % 2;\n        textNode.data = counter;\n      };\n    } else {\n      // webpack attempts to inject a shim for setImmediate\n      // if it is used as a global, so we have to work around that to\n      // avoid bundling unnecessary code.\n      var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n      timerFunc = context.setImmediate || setTimeout;\n    }\n    return function (cb, ctx) {\n      var func = ctx ? function () {\n        cb.call(ctx);\n      } : cb;\n      callbacks.push(func);\n      if (pending) return;\n      pending = true;\n      timerFunc(nextTickHandler, 0);\n    };\n  })();\n\n  var _Set = undefined;\n  /* istanbul ignore if */\n  if (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n    // use native Set when available.\n    _Set = Set;\n  } else {\n    // a non-standard Set polyfill that only works with primitive keys.\n    _Set = function () {\n      this.set = Object.create(null);\n    };\n    _Set.prototype.has = function (key) {\n      return this.set[key] !== undefined;\n    };\n    _Set.prototype.add = function (key) {\n      this.set[key] = 1;\n    };\n    _Set.prototype.clear = function () {\n      this.set = Object.create(null);\n    };\n  }\n\n  function Cache(limit) {\n    this.size = 0;\n    this.limit = limit;\n    this.head = this.tail = undefined;\n    this._keymap = Object.create(null);\n  }\n\n  var p = Cache.prototype;\n\n  /**\n   * Put <value> into the cache associated with <key>.\n   * Returns the entry which was removed to make room for\n   * the new entry. Otherwise undefined is returned.\n   * (i.e. if there was enough room already).\n   *\n   * @param {String} key\n   * @param {*} value\n   * @return {Entry|undefined}\n   */\n\n  p.put = function (key, value) {\n    var removed;\n\n    var entry = this.get(key, true);\n    if (!entry) {\n      if (this.size === this.limit) {\n        removed = this.shift();\n      }\n      entry = {\n        key: key\n      };\n      this._keymap[key] = entry;\n      if (this.tail) {\n        this.tail.newer = entry;\n        entry.older = this.tail;\n      } else {\n        this.head = entry;\n      }\n      this.tail = entry;\n      this.size++;\n    }\n    entry.value = value;\n\n    return removed;\n  };\n\n  /**\n   * Purge the least recently used (oldest) entry from the\n   * cache. Returns the removed entry or undefined if the\n   * cache was empty.\n   */\n\n  p.shift = function () {\n    var entry = this.head;\n    if (entry) {\n      this.head = this.head.newer;\n      this.head.older = undefined;\n      entry.newer = entry.older = undefined;\n      this._keymap[entry.key] = undefined;\n      this.size--;\n    }\n    return entry;\n  };\n\n  /**\n   * Get and register recent use of <key>. Returns the value\n   * associated with <key> or undefined if not in cache.\n   *\n   * @param {String} key\n   * @param {Boolean} returnEntry\n   * @return {Entry|*}\n   */\n\n  p.get = function (key, returnEntry) {\n    var entry = this._keymap[key];\n    if (entry === undefined) return;\n    if (entry === this.tail) {\n      return returnEntry ? entry : entry.value;\n    }\n    // HEAD--------------TAIL\n    //   <.older   .newer>\n    //  <--- add direction --\n    //   A  B  C  <D>  E\n    if (entry.newer) {\n      if (entry === this.head) {\n        this.head = entry.newer;\n      }\n      entry.newer.older = entry.older; // C <-- E.\n    }\n    if (entry.older) {\n      entry.older.newer = entry.newer; // C. --> E\n    }\n    entry.newer = undefined; // D --x\n    entry.older = this.tail; // D. --> E\n    if (this.tail) {\n      this.tail.newer = entry; // E. <-- D\n    }\n    this.tail = entry;\n    return returnEntry ? entry : entry.value;\n  };\n\n  var cache$1 = new Cache(1000);\n  var filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n  var reservedArgRE = /^in$|^-?\\d+/;\n\n  /**\n   * Parser state\n   */\n\n  var str;\n  var dir;\n  var c;\n  var prev;\n  var i;\n  var l;\n  var lastFilterIndex;\n  var inSingle;\n  var inDouble;\n  var curly;\n  var square;\n  var paren;\n  /**\n   * Push a filter to the current directive object\n   */\n\n  function pushFilter() {\n    var exp = str.slice(lastFilterIndex, i).trim();\n    var filter;\n    if (exp) {\n      filter = {};\n      var tokens = exp.match(filterTokenRE);\n      filter.name = tokens[0];\n      if (tokens.length > 1) {\n        filter.args = tokens.slice(1).map(processFilterArg);\n      }\n    }\n    if (filter) {\n      (dir.filters = dir.filters || []).push(filter);\n    }\n    lastFilterIndex = i + 1;\n  }\n\n  /**\n   * Check if an argument is dynamic and strip quotes.\n   *\n   * @param {String} arg\n   * @return {Object}\n   */\n\n  function processFilterArg(arg) {\n    if (reservedArgRE.test(arg)) {\n      return {\n        value: toNumber(arg),\n        dynamic: false\n      };\n    } else {\n      var stripped = stripQuotes(arg);\n      var dynamic = stripped === arg;\n      return {\n        value: dynamic ? arg : stripped,\n        dynamic: dynamic\n      };\n    }\n  }\n\n  /**\n   * Parse a directive value and extract the expression\n   * and its filters into a descriptor.\n   *\n   * Example:\n   *\n   * \"a + 1 | uppercase\" will yield:\n   * {\n   *   expression: 'a + 1',\n   *   filters: [\n   *     { name: 'uppercase', args: null }\n   *   ]\n   * }\n   *\n   * @param {String} s\n   * @return {Object}\n   */\n\n  function parseDirective(s) {\n    var hit = cache$1.get(s);\n    if (hit) {\n      return hit;\n    }\n\n    // reset parser state\n    str = s;\n    inSingle = inDouble = false;\n    curly = square = paren = 0;\n    lastFilterIndex = 0;\n    dir = {};\n\n    for (i = 0, l = str.length; i < l; i++) {\n      prev = c;\n      c = str.charCodeAt(i);\n      if (inSingle) {\n        // check single quote\n        if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n      } else if (inDouble) {\n        // check double quote\n        if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n      } else if (c === 0x7C && // pipe\n      str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n        if (dir.expression == null) {\n          // first filter, end of expression\n          lastFilterIndex = i + 1;\n          dir.expression = str.slice(0, i).trim();\n        } else {\n          // already has filter\n          pushFilter();\n        }\n      } else {\n        switch (c) {\n          case 0x22:\n            inDouble = true;break; // \"\n          case 0x27:\n            inSingle = true;break; // '\n          case 0x28:\n            paren++;break; // (\n          case 0x29:\n            paren--;break; // )\n          case 0x5B:\n            square++;break; // [\n          case 0x5D:\n            square--;break; // ]\n          case 0x7B:\n            curly++;break; // {\n          case 0x7D:\n            curly--;break; // }\n        }\n      }\n    }\n\n    if (dir.expression == null) {\n      dir.expression = str.slice(0, i).trim();\n    } else if (lastFilterIndex !== 0) {\n      pushFilter();\n    }\n\n    cache$1.put(s, dir);\n    return dir;\n  }\n\nvar directive = Object.freeze({\n    parseDirective: parseDirective\n  });\n\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var cache = undefined;\n  var tagRE = undefined;\n  var htmlRE = undefined;\n  /**\n   * Escape a string so it can be used in a RegExp\n   * constructor.\n   *\n   * @param {String} str\n   */\n\n  function escapeRegex(str) {\n    return str.replace(regexEscapeRE, '\\\\$&');\n  }\n\n  function compileRegex() {\n    var open = escapeRegex(config.delimiters[0]);\n    var close = escapeRegex(config.delimiters[1]);\n    var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n    var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n    tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n    htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n    // reset cache\n    cache = new Cache(1000);\n  }\n\n  /**\n   * Parse a template text string into an array of tokens.\n   *\n   * @param {String} text\n   * @return {Array<Object> | null}\n   *               - {String} type\n   *               - {String} value\n   *               - {Boolean} [html]\n   *               - {Boolean} [oneTime]\n   */\n\n  function parseText(text) {\n    if (!cache) {\n      compileRegex();\n    }\n    var hit = cache.get(text);\n    if (hit) {\n      return hit;\n    }\n    if (!tagRE.test(text)) {\n      return null;\n    }\n    var tokens = [];\n    var lastIndex = tagRE.lastIndex = 0;\n    var match, index, html, value, first, oneTime;\n    /* eslint-disable no-cond-assign */\n    while (match = tagRE.exec(text)) {\n      /* eslint-enable no-cond-assign */\n      index = match.index;\n      // push text token\n      if (index > lastIndex) {\n        tokens.push({\n          value: text.slice(lastIndex, index)\n        });\n      }\n      // tag token\n      html = htmlRE.test(match[0]);\n      value = html ? match[1] : match[2];\n      first = value.charCodeAt(0);\n      oneTime = first === 42; // *\n      value = oneTime ? value.slice(1) : value;\n      tokens.push({\n        tag: true,\n        value: value.trim(),\n        html: html,\n        oneTime: oneTime\n      });\n      lastIndex = index + match[0].length;\n    }\n    if (lastIndex < text.length) {\n      tokens.push({\n        value: text.slice(lastIndex)\n      });\n    }\n    cache.put(text, tokens);\n    return tokens;\n  }\n\n  /**\n   * Format a list of tokens into an expression.\n   * e.g. tokens parsed from 'a {{b}} c' can be serialized\n   * into one single expression as '\"a \" + b + \" c\"'.\n   *\n   * @param {Array} tokens\n   * @param {Vue} [vm]\n   * @return {String}\n   */\n\n  function tokensToExp(tokens, vm) {\n    if (tokens.length > 1) {\n      return tokens.map(function (token) {\n        return formatToken(token, vm);\n      }).join('+');\n    } else {\n      return formatToken(tokens[0], vm, true);\n    }\n  }\n\n  /**\n   * Format a single token.\n   *\n   * @param {Object} token\n   * @param {Vue} [vm]\n   * @param {Boolean} [single]\n   * @return {String}\n   */\n\n  function formatToken(token, vm, single) {\n    return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n  }\n\n  /**\n   * For an attribute with multiple interpolation tags,\n   * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n   * the whole thing into a single watchable expression, we\n   * have to inline those filters. This function does exactly\n   * that. This is a bit hacky but it avoids heavy changes\n   * to directive parser and watcher mechanism.\n   *\n   * @param {String} exp\n   * @param {Boolean} single\n   * @return {String}\n   */\n\n  var filterRE = /[^|]\\|[^|]/;\n  function inlineFilters(exp, single) {\n    if (!filterRE.test(exp)) {\n      return single ? exp : '(' + exp + ')';\n    } else {\n      var dir = parseDirective(exp);\n      if (!dir.filters) {\n        return '(' + exp + ')';\n      } else {\n        return 'this._applyFilters(' + dir.expression + // value\n        ',null,' + // oldValue (null for read)\n        JSON.stringify(dir.filters) + // filter descriptors\n        ',false)'; // write?\n      }\n    }\n  }\n\nvar text = Object.freeze({\n    compileRegex: compileRegex,\n    parseText: parseText,\n    tokensToExp: tokensToExp\n  });\n\n  var delimiters = ['{{', '}}'];\n  var unsafeDelimiters = ['{{{', '}}}'];\n\n  var config = Object.defineProperties({\n\n    /**\n     * Whether to print debug messages.\n     * Also enables stack trace for warnings.\n     *\n     * @type {Boolean}\n     */\n\n    debug: false,\n\n    /**\n     * Whether to suppress warnings.\n     *\n     * @type {Boolean}\n     */\n\n    silent: false,\n\n    /**\n     * Whether to use async rendering.\n     */\n\n    async: true,\n\n    /**\n     * Whether to warn against errors caught when evaluating\n     * expressions.\n     */\n\n    warnExpressionErrors: true,\n\n    /**\n     * Whether to allow devtools inspection.\n     * Disabled by default in production builds.\n     */\n\n    devtools: 'development' !== 'production',\n\n    /**\n     * Internal flag to indicate the delimiters have been\n     * changed.\n     *\n     * @type {Boolean}\n     */\n\n    _delimitersChanged: true,\n\n    /**\n     * List of asset types that a component can own.\n     *\n     * @type {Array}\n     */\n\n    _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n    /**\n     * prop binding modes\n     */\n\n    _propBindingModes: {\n      ONE_WAY: 0,\n      TWO_WAY: 1,\n      ONE_TIME: 2\n    },\n\n    /**\n     * Max circular updates allowed in a batcher flush cycle.\n     */\n\n    _maxUpdateCount: 100\n\n  }, {\n    delimiters: { /**\n                   * Interpolation delimiters. Changing these would trigger\n                   * the text parser to re-compile the regular expressions.\n                   *\n                   * @type {Array<String>}\n                   */\n\n      get: function get() {\n        return delimiters;\n      },\n      set: function set(val) {\n        delimiters = val;\n        compileRegex();\n      },\n      configurable: true,\n      enumerable: true\n    },\n    unsafeDelimiters: {\n      get: function get() {\n        return unsafeDelimiters;\n      },\n      set: function set(val) {\n        unsafeDelimiters = val;\n        compileRegex();\n      },\n      configurable: true,\n      enumerable: true\n    }\n  });\n\n  var warn = undefined;\n  var formatComponentName = undefined;\n\n  if ('development' !== 'production') {\n    (function () {\n      var hasConsole = typeof console !== 'undefined';\n\n      warn = function (msg, vm) {\n        if (hasConsole && !config.silent) {\n          console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n        }\n      };\n\n      formatComponentName = function (vm) {\n        var name = vm._isVue ? vm.$options.name : vm.name;\n        return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n      };\n    })();\n  }\n\n  /**\n   * Append with transition.\n   *\n   * @param {Element} el\n   * @param {Element} target\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function appendWithTransition(el, target, vm, cb) {\n    applyTransition(el, 1, function () {\n      target.appendChild(el);\n    }, vm, cb);\n  }\n\n  /**\n   * InsertBefore with transition.\n   *\n   * @param {Element} el\n   * @param {Element} target\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function beforeWithTransition(el, target, vm, cb) {\n    applyTransition(el, 1, function () {\n      before(el, target);\n    }, vm, cb);\n  }\n\n  /**\n   * Remove with transition.\n   *\n   * @param {Element} el\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function removeWithTransition(el, vm, cb) {\n    applyTransition(el, -1, function () {\n      remove(el);\n    }, vm, cb);\n  }\n\n  /**\n   * Apply transitions with an operation callback.\n   *\n   * @param {Element} el\n   * @param {Number} direction\n   *                  1: enter\n   *                 -1: leave\n   * @param {Function} op - the actual DOM operation\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function applyTransition(el, direction, op, vm, cb) {\n    var transition = el.__v_trans;\n    if (!transition ||\n    // skip if there are no js hooks and CSS transition is\n    // not supported\n    !transition.hooks && !transitionEndEvent ||\n    // skip transitions for initial compile\n    !vm._isCompiled ||\n    // if the vm is being manipulated by a parent directive\n    // during the parent's compilation phase, skip the\n    // animation.\n    vm.$parent && !vm.$parent._isCompiled) {\n      op();\n      if (cb) cb();\n      return;\n    }\n    var action = direction > 0 ? 'enter' : 'leave';\n    transition[action](op, cb);\n  }\n\nvar transition = Object.freeze({\n    appendWithTransition: appendWithTransition,\n    beforeWithTransition: beforeWithTransition,\n    removeWithTransition: removeWithTransition,\n    applyTransition: applyTransition\n  });\n\n  /**\n   * Query an element selector if it's not an element already.\n   *\n   * @param {String|Element} el\n   * @return {Element}\n   */\n\n  function query(el) {\n    if (typeof el === 'string') {\n      var selector = el;\n      el = document.querySelector(el);\n      if (!el) {\n        'development' !== 'production' && warn('Cannot find element: ' + selector);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Check if a node is in the document.\n   * Note: document.documentElement.contains should work here\n   * but always returns false for comment nodes in phantomjs,\n   * making unit tests difficult. This is fixed by doing the\n   * contains() check on the node's parentNode instead of\n   * the node itself.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function inDoc(node) {\n    if (!node) return false;\n    var doc = node.ownerDocument.documentElement;\n    var parent = node.parentNode;\n    return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n  }\n\n  /**\n   * Get and remove an attribute from a node.\n   *\n   * @param {Node} node\n   * @param {String} _attr\n   */\n\n  function getAttr(node, _attr) {\n    var val = node.getAttribute(_attr);\n    if (val !== null) {\n      node.removeAttribute(_attr);\n    }\n    return val;\n  }\n\n  /**\n   * Get an attribute with colon or v-bind: prefix.\n   *\n   * @param {Node} node\n   * @param {String} name\n   * @return {String|null}\n   */\n\n  function getBindAttr(node, name) {\n    var val = getAttr(node, ':' + name);\n    if (val === null) {\n      val = getAttr(node, 'v-bind:' + name);\n    }\n    return val;\n  }\n\n  /**\n   * Check the presence of a bind attribute.\n   *\n   * @param {Node} node\n   * @param {String} name\n   * @return {Boolean}\n   */\n\n  function hasBindAttr(node, name) {\n    return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n  }\n\n  /**\n   * Insert el before target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function before(el, target) {\n    target.parentNode.insertBefore(el, target);\n  }\n\n  /**\n   * Insert el after target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function after(el, target) {\n    if (target.nextSibling) {\n      before(el, target.nextSibling);\n    } else {\n      target.parentNode.appendChild(el);\n    }\n  }\n\n  /**\n   * Remove el from DOM\n   *\n   * @param {Element} el\n   */\n\n  function remove(el) {\n    el.parentNode.removeChild(el);\n  }\n\n  /**\n   * Prepend el to target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function prepend(el, target) {\n    if (target.firstChild) {\n      before(el, target.firstChild);\n    } else {\n      target.appendChild(el);\n    }\n  }\n\n  /**\n   * Replace target with el\n   *\n   * @param {Element} target\n   * @param {Element} el\n   */\n\n  function replace(target, el) {\n    var parent = target.parentNode;\n    if (parent) {\n      parent.replaceChild(el, target);\n    }\n  }\n\n  /**\n   * Add event listener shorthand.\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Function} cb\n   * @param {Boolean} [useCapture]\n   */\n\n  function on(el, event, cb, useCapture) {\n    el.addEventListener(event, cb, useCapture);\n  }\n\n  /**\n   * Remove event listener shorthand.\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Function} cb\n   */\n\n  function off(el, event, cb) {\n    el.removeEventListener(event, cb);\n  }\n\n  /**\n   * For IE9 compat: when both class and :class are present\n   * getAttribute('class') returns wrong value...\n   *\n   * @param {Element} el\n   * @return {String}\n   */\n\n  function getClass(el) {\n    var classname = el.className;\n    if (typeof classname === 'object') {\n      classname = classname.baseVal || '';\n    }\n    return classname;\n  }\n\n  /**\n   * In IE9, setAttribute('class') will result in empty class\n   * if the element also has the :class attribute; However in\n   * PhantomJS, setting `className` does not work on SVG elements...\n   * So we have to do a conditional check here.\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function setClass(el, cls) {\n    /* istanbul ignore if */\n    if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n      el.className = cls;\n    } else {\n      el.setAttribute('class', cls);\n    }\n  }\n\n  /**\n   * Add class with compatibility for IE & SVG\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function addClass(el, cls) {\n    if (el.classList) {\n      el.classList.add(cls);\n    } else {\n      var cur = ' ' + getClass(el) + ' ';\n      if (cur.indexOf(' ' + cls + ' ') < 0) {\n        setClass(el, (cur + cls).trim());\n      }\n    }\n  }\n\n  /**\n   * Remove class with compatibility for IE & SVG\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function removeClass(el, cls) {\n    if (el.classList) {\n      el.classList.remove(cls);\n    } else {\n      var cur = ' ' + getClass(el) + ' ';\n      var tar = ' ' + cls + ' ';\n      while (cur.indexOf(tar) >= 0) {\n        cur = cur.replace(tar, ' ');\n      }\n      setClass(el, cur.trim());\n    }\n    if (!el.className) {\n      el.removeAttribute('class');\n    }\n  }\n\n  /**\n   * Extract raw content inside an element into a temporary\n   * container div\n   *\n   * @param {Element} el\n   * @param {Boolean} asFragment\n   * @return {Element|DocumentFragment}\n   */\n\n  function extractContent(el, asFragment) {\n    var child;\n    var rawContent;\n    /* istanbul ignore if */\n    if (isTemplate(el) && isFragment(el.content)) {\n      el = el.content;\n    }\n    if (el.hasChildNodes()) {\n      trimNode(el);\n      rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n      /* eslint-disable no-cond-assign */\n      while (child = el.firstChild) {\n        /* eslint-enable no-cond-assign */\n        rawContent.appendChild(child);\n      }\n    }\n    return rawContent;\n  }\n\n  /**\n   * Trim possible empty head/tail text and comment\n   * nodes inside a parent.\n   *\n   * @param {Node} node\n   */\n\n  function trimNode(node) {\n    var child;\n    /* eslint-disable no-sequences */\n    while ((child = node.firstChild, isTrimmable(child))) {\n      node.removeChild(child);\n    }\n    while ((child = node.lastChild, isTrimmable(child))) {\n      node.removeChild(child);\n    }\n    /* eslint-enable no-sequences */\n  }\n\n  function isTrimmable(node) {\n    return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n  }\n\n  /**\n   * Check if an element is a template tag.\n   * Note if the template appears inside an SVG its tagName\n   * will be in lowercase.\n   *\n   * @param {Element} el\n   */\n\n  function isTemplate(el) {\n    return el.tagName && el.tagName.toLowerCase() === 'template';\n  }\n\n  /**\n   * Create an \"anchor\" for performing dom insertion/removals.\n   * This is used in a number of scenarios:\n   * - fragment instance\n   * - v-html\n   * - v-if\n   * - v-for\n   * - component\n   *\n   * @param {String} content\n   * @param {Boolean} persist - IE trashes empty textNodes on\n   *                            cloneNode(true), so in certain\n   *                            cases the anchor needs to be\n   *                            non-empty to be persisted in\n   *                            templates.\n   * @return {Comment|Text}\n   */\n\n  function createAnchor(content, persist) {\n    var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n    anchor.__v_anchor = true;\n    return anchor;\n  }\n\n  /**\n   * Find a component ref attribute that starts with $.\n   *\n   * @param {Element} node\n   * @return {String|undefined}\n   */\n\n  var refRE = /^v-ref:/;\n\n  function findRef(node) {\n    if (node.hasAttributes()) {\n      var attrs = node.attributes;\n      for (var i = 0, l = attrs.length; i < l; i++) {\n        var name = attrs[i].name;\n        if (refRE.test(name)) {\n          return camelize(name.replace(refRE, ''));\n        }\n      }\n    }\n  }\n\n  /**\n   * Map a function to a range of nodes .\n   *\n   * @param {Node} node\n   * @param {Node} end\n   * @param {Function} op\n   */\n\n  function mapNodeRange(node, end, op) {\n    var next;\n    while (node !== end) {\n      next = node.nextSibling;\n      op(node);\n      node = next;\n    }\n    op(end);\n  }\n\n  /**\n   * Remove a range of nodes with transition, store\n   * the nodes in a fragment with correct ordering,\n   * and call callback when done.\n   *\n   * @param {Node} start\n   * @param {Node} end\n   * @param {Vue} vm\n   * @param {DocumentFragment} frag\n   * @param {Function} cb\n   */\n\n  function removeNodeRange(start, end, vm, frag, cb) {\n    var done = false;\n    var removed = 0;\n    var nodes = [];\n    mapNodeRange(start, end, function (node) {\n      if (node === end) done = true;\n      nodes.push(node);\n      removeWithTransition(node, vm, onRemoved);\n    });\n    function onRemoved() {\n      removed++;\n      if (done && removed >= nodes.length) {\n        for (var i = 0; i < nodes.length; i++) {\n          frag.appendChild(nodes[i]);\n        }\n        cb && cb();\n      }\n    }\n  }\n\n  /**\n   * Check if a node is a DocumentFragment.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function isFragment(node) {\n    return node && node.nodeType === 11;\n  }\n\n  /**\n   * Get outerHTML of elements, taking care\n   * of SVG elements in IE as well.\n   *\n   * @param {Element} el\n   * @return {String}\n   */\n\n  function getOuterHTML(el) {\n    if (el.outerHTML) {\n      return el.outerHTML;\n    } else {\n      var container = document.createElement('div');\n      container.appendChild(el.cloneNode(true));\n      return container.innerHTML;\n    }\n  }\n\n  var commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n  var reservedTagRE = /^(slot|partial|component)$/i;\n\n  var isUnknownElement = undefined;\n  if ('development' !== 'production') {\n    isUnknownElement = function (el, tag) {\n      if (tag.indexOf('-') > -1) {\n        // http://stackoverflow.com/a/28210364/1070244\n        return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n      } else {\n        return (/HTMLUnknownElement/.test(el.toString()) &&\n          // Chrome returns unknown for several HTML5 elements.\n          // https://code.google.com/p/chromium/issues/detail?id=540526\n          // Firefox returns unknown for some \"Interactive elements.\"\n          !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n        );\n      }\n    };\n  }\n\n  /**\n   * Check if an element is a component, if yes return its\n   * component id.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Object|undefined}\n   */\n\n  function checkComponentAttr(el, options) {\n    var tag = el.tagName.toLowerCase();\n    var hasAttrs = el.hasAttributes();\n    if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n      if (resolveAsset(options, 'components', tag)) {\n        return { id: tag };\n      } else {\n        var is = hasAttrs && getIsBinding(el, options);\n        if (is) {\n          return is;\n        } else if ('development' !== 'production') {\n          var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n          if (expectedTag) {\n            warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n          } else if (isUnknownElement(el, tag)) {\n            warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n          }\n        }\n      }\n    } else if (hasAttrs) {\n      return getIsBinding(el, options);\n    }\n  }\n\n  /**\n   * Get \"is\" binding from an element.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Object|undefined}\n   */\n\n  function getIsBinding(el, options) {\n    // dynamic syntax\n    var exp = el.getAttribute('is');\n    if (exp != null) {\n      if (resolveAsset(options, 'components', exp)) {\n        el.removeAttribute('is');\n        return { id: exp };\n      }\n    } else {\n      exp = getBindAttr(el, 'is');\n      if (exp != null) {\n        return { id: exp, dynamic: true };\n      }\n    }\n  }\n\n  /**\n   * Option overwriting strategies are functions that handle\n   * how to merge a parent option value and a child option\n   * value into the final value.\n   *\n   * All strategy functions follow the same signature:\n   *\n   * @param {*} parentVal\n   * @param {*} childVal\n   * @param {Vue} [vm]\n   */\n\n  var strats = config.optionMergeStrategies = Object.create(null);\n\n  /**\n   * Helper that recursively merges two data objects together.\n   */\n\n  function mergeData(to, from) {\n    var key, toVal, fromVal;\n    for (key in from) {\n      toVal = to[key];\n      fromVal = from[key];\n      if (!hasOwn(to, key)) {\n        set(to, key, fromVal);\n      } else if (isObject(toVal) && isObject(fromVal)) {\n        mergeData(toVal, fromVal);\n      }\n    }\n    return to;\n  }\n\n  /**\n   * Data\n   */\n\n  strats.data = function (parentVal, childVal, vm) {\n    if (!vm) {\n      // in a Vue.extend merge, both should be functions\n      if (!childVal) {\n        return parentVal;\n      }\n      if (typeof childVal !== 'function') {\n        'development' !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n        return parentVal;\n      }\n      if (!parentVal) {\n        return childVal;\n      }\n      // when parentVal & childVal are both present,\n      // we need to return a function that returns the\n      // merged result of both functions... no need to\n      // check if parentVal is a function here because\n      // it has to be a function to pass previous merges.\n      return function mergedDataFn() {\n        return mergeData(childVal.call(this), parentVal.call(this));\n      };\n    } else if (parentVal || childVal) {\n      return function mergedInstanceDataFn() {\n        // instance merge\n        var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n        var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n        if (instanceData) {\n          return mergeData(instanceData, defaultData);\n        } else {\n          return defaultData;\n        }\n      };\n    }\n  };\n\n  /**\n   * El\n   */\n\n  strats.el = function (parentVal, childVal, vm) {\n    if (!vm && childVal && typeof childVal !== 'function') {\n      'development' !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return;\n    }\n    var ret = childVal || parentVal;\n    // invoke the element factory if this is instance merge\n    return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n  };\n\n  /**\n   * Hooks and param attributes are merged as arrays.\n   */\n\n  strats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n    return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n  };\n\n  /**\n   * Assets\n   *\n   * When a vm is present (instance creation), we need to do\n   * a three-way merge between constructor options, instance\n   * options and parent options.\n   */\n\n  function mergeAssets(parentVal, childVal) {\n    var res = Object.create(parentVal || null);\n    return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n  }\n\n  config._assetTypes.forEach(function (type) {\n    strats[type + 's'] = mergeAssets;\n  });\n\n  /**\n   * Events & Watchers.\n   *\n   * Events & watchers hashes should not overwrite one\n   * another, so we merge them as arrays.\n   */\n\n  strats.watch = strats.events = function (parentVal, childVal) {\n    if (!childVal) return parentVal;\n    if (!parentVal) return childVal;\n    var ret = {};\n    extend(ret, parentVal);\n    for (var key in childVal) {\n      var parent = ret[key];\n      var child = childVal[key];\n      if (parent && !isArray(parent)) {\n        parent = [parent];\n      }\n      ret[key] = parent ? parent.concat(child) : [child];\n    }\n    return ret;\n  };\n\n  /**\n   * Other object hashes.\n   */\n\n  strats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n    if (!childVal) return parentVal;\n    if (!parentVal) return childVal;\n    var ret = Object.create(null);\n    extend(ret, parentVal);\n    extend(ret, childVal);\n    return ret;\n  };\n\n  /**\n   * Default strategy.\n   */\n\n  var defaultStrat = function defaultStrat(parentVal, childVal) {\n    return childVal === undefined ? parentVal : childVal;\n  };\n\n  /**\n   * Make sure component options get converted to actual\n   * constructors.\n   *\n   * @param {Object} options\n   */\n\n  function guardComponents(options) {\n    if (options.components) {\n      var components = options.components = guardArrayAssets(options.components);\n      var ids = Object.keys(components);\n      var def;\n      if ('development' !== 'production') {\n        var map = options._componentNameMap = {};\n      }\n      for (var i = 0, l = ids.length; i < l; i++) {\n        var key = ids[i];\n        if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n          'development' !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n          continue;\n        }\n        // record a all lowercase <-> kebab-case mapping for\n        // possible custom element case error warning\n        if ('development' !== 'production') {\n          map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n        }\n        def = components[key];\n        if (isPlainObject(def)) {\n          components[key] = Vue.extend(def);\n        }\n      }\n    }\n  }\n\n  /**\n   * Ensure all props option syntax are normalized into the\n   * Object-based format.\n   *\n   * @param {Object} options\n   */\n\n  function guardProps(options) {\n    var props = options.props;\n    var i, val;\n    if (isArray(props)) {\n      options.props = {};\n      i = props.length;\n      while (i--) {\n        val = props[i];\n        if (typeof val === 'string') {\n          options.props[val] = null;\n        } else if (val.name) {\n          options.props[val.name] = val;\n        }\n      }\n    } else if (isPlainObject(props)) {\n      var keys = Object.keys(props);\n      i = keys.length;\n      while (i--) {\n        val = props[keys[i]];\n        if (typeof val === 'function') {\n          props[keys[i]] = { type: val };\n        }\n      }\n    }\n  }\n\n  /**\n   * Guard an Array-format assets option and converted it\n   * into the key-value Object format.\n   *\n   * @param {Object|Array} assets\n   * @return {Object}\n   */\n\n  function guardArrayAssets(assets) {\n    if (isArray(assets)) {\n      var res = {};\n      var i = assets.length;\n      var asset;\n      while (i--) {\n        asset = assets[i];\n        var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n        if (!id) {\n          'development' !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n        } else {\n          res[id] = asset;\n        }\n      }\n      return res;\n    }\n    return assets;\n  }\n\n  /**\n   * Merge two option objects into a new one.\n   * Core utility used in both instantiation and inheritance.\n   *\n   * @param {Object} parent\n   * @param {Object} child\n   * @param {Vue} [vm] - if vm is present, indicates this is\n   *                     an instantiation merge.\n   */\n\n  function mergeOptions(parent, child, vm) {\n    guardComponents(child);\n    guardProps(child);\n    if ('development' !== 'production') {\n      if (child.propsData && !vm) {\n        warn('propsData can only be used as an instantiation option.');\n      }\n    }\n    var options = {};\n    var key;\n    if (child['extends']) {\n      parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        var mixin = child.mixins[i];\n        var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n        parent = mergeOptions(parent, mixinOptions, vm);\n      }\n    }\n    for (key in parent) {\n      mergeField(key);\n    }\n    for (key in child) {\n      if (!hasOwn(parent, key)) {\n        mergeField(key);\n      }\n    }\n    function mergeField(key) {\n      var strat = strats[key] || defaultStrat;\n      options[key] = strat(parent[key], child[key], vm, key);\n    }\n    return options;\n  }\n\n  /**\n   * Resolve an asset.\n   * This function is used because child instances need access\n   * to assets defined in its ancestor chain.\n   *\n   * @param {Object} options\n   * @param {String} type\n   * @param {String} id\n   * @param {Boolean} warnMissing\n   * @return {Object|Function}\n   */\n\n  function resolveAsset(options, type, id, warnMissing) {\n    /* istanbul ignore if */\n    if (typeof id !== 'string') {\n      return;\n    }\n    var assets = options[type];\n    var camelizedId;\n    var res = assets[id] ||\n    // camelCase ID\n    assets[camelizedId = camelize(id)] ||\n    // Pascal Case ID\n    assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n    if ('development' !== 'production' && warnMissing && !res) {\n      warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n    }\n    return res;\n  }\n\n  var uid$1 = 0;\n\n  /**\n   * A dep is an observable that can have multiple\n   * directives subscribing to it.\n   *\n   * @constructor\n   */\n  function Dep() {\n    this.id = uid$1++;\n    this.subs = [];\n  }\n\n  // the current target watcher being evaluated.\n  // this is globally unique because there could be only one\n  // watcher being evaluated at any time.\n  Dep.target = null;\n\n  /**\n   * Add a directive subscriber.\n   *\n   * @param {Directive} sub\n   */\n\n  Dep.prototype.addSub = function (sub) {\n    this.subs.push(sub);\n  };\n\n  /**\n   * Remove a directive subscriber.\n   *\n   * @param {Directive} sub\n   */\n\n  Dep.prototype.removeSub = function (sub) {\n    this.subs.$remove(sub);\n  };\n\n  /**\n   * Add self as a dependency to the target watcher.\n   */\n\n  Dep.prototype.depend = function () {\n    Dep.target.addDep(this);\n  };\n\n  /**\n   * Notify all subscribers of a new value.\n   */\n\n  Dep.prototype.notify = function () {\n    // stablize the subscriber list first\n    var subs = toArray(this.subs);\n    for (var i = 0, l = subs.length; i < l; i++) {\n      subs[i].update();\n    }\n  };\n\n  var arrayProto = Array.prototype;\n  var arrayMethods = Object.create(arrayProto)\n\n  /**\n   * Intercept mutating methods and emit events\n   */\n\n  ;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n    // cache original method\n    var original = arrayProto[method];\n    def(arrayMethods, method, function mutator() {\n      // avoid leaking arguments:\n      // http://jsperf.com/closure-with-arguments\n      var i = arguments.length;\n      var args = new Array(i);\n      while (i--) {\n        args[i] = arguments[i];\n      }\n      var result = original.apply(this, args);\n      var ob = this.__ob__;\n      var inserted;\n      switch (method) {\n        case 'push':\n          inserted = args;\n          break;\n        case 'unshift':\n          inserted = args;\n          break;\n        case 'splice':\n          inserted = args.slice(2);\n          break;\n      }\n      if (inserted) ob.observeArray(inserted);\n      // notify change\n      ob.dep.notify();\n      return result;\n    });\n  });\n\n  /**\n   * Swap the element at the given index with a new value\n   * and emits corresponding event.\n   *\n   * @param {Number} index\n   * @param {*} val\n   * @return {*} - replaced element\n   */\n\n  def(arrayProto, '$set', function $set(index, val) {\n    if (index >= this.length) {\n      this.length = Number(index) + 1;\n    }\n    return this.splice(index, 1, val)[0];\n  });\n\n  /**\n   * Convenience method to remove the element at given index or target element reference.\n   *\n   * @param {*} item\n   */\n\n  def(arrayProto, '$remove', function $remove(item) {\n    /* istanbul ignore if */\n    if (!this.length) return;\n    var index = indexOf(this, item);\n    if (index > -1) {\n      return this.splice(index, 1);\n    }\n  });\n\n  var arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n  /**\n   * By default, when a reactive property is set, the new value is\n   * also converted to become reactive. However in certain cases, e.g.\n   * v-for scope alias and props, we don't want to force conversion\n   * because the value may be a nested value under a frozen data structure.\n   *\n   * So whenever we want to set a reactive property without forcing\n   * conversion on the new value, we wrap that call inside this function.\n   */\n\n  var shouldConvert = true;\n\n  function withoutConversion(fn) {\n    shouldConvert = false;\n    fn();\n    shouldConvert = true;\n  }\n\n  /**\n   * Observer class that are attached to each observed\n   * object. Once attached, the observer converts target\n   * object's property keys into getter/setters that\n   * collect dependencies and dispatches updates.\n   *\n   * @param {Array|Object} value\n   * @constructor\n   */\n\n  function Observer(value) {\n    this.value = value;\n    this.dep = new Dep();\n    def(value, '__ob__', this);\n    if (isArray(value)) {\n      var augment = hasProto ? protoAugment : copyAugment;\n      augment(value, arrayMethods, arrayKeys);\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n\n  // Instance methods\n\n  /**\n   * Walk through each property and convert them into\n   * getter/setters. This method should only be called when\n   * value type is Object.\n   *\n   * @param {Object} obj\n   */\n\n  Observer.prototype.walk = function (obj) {\n    var keys = Object.keys(obj);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      this.convert(keys[i], obj[keys[i]]);\n    }\n  };\n\n  /**\n   * Observe a list of Array items.\n   *\n   * @param {Array} items\n   */\n\n  Observer.prototype.observeArray = function (items) {\n    for (var i = 0, l = items.length; i < l; i++) {\n      observe(items[i]);\n    }\n  };\n\n  /**\n   * Convert a property into getter/setter so we can emit\n   * the events when the property is accessed/changed.\n   *\n   * @param {String} key\n   * @param {*} val\n   */\n\n  Observer.prototype.convert = function (key, val) {\n    defineReactive(this.value, key, val);\n  };\n\n  /**\n   * Add an owner vm, so that when $set/$delete mutations\n   * happen we can notify owner vms to proxy the keys and\n   * digest the watchers. This is only called when the object\n   * is observed as an instance's root $data.\n   *\n   * @param {Vue} vm\n   */\n\n  Observer.prototype.addVm = function (vm) {\n    (this.vms || (this.vms = [])).push(vm);\n  };\n\n  /**\n   * Remove an owner vm. This is called when the object is\n   * swapped out as an instance's $data object.\n   *\n   * @param {Vue} vm\n   */\n\n  Observer.prototype.removeVm = function (vm) {\n    this.vms.$remove(vm);\n  };\n\n  // helpers\n\n  /**\n   * Augment an target Object or Array by intercepting\n   * the prototype chain using __proto__\n   *\n   * @param {Object|Array} target\n   * @param {Object} src\n   */\n\n  function protoAugment(target, src) {\n    /* eslint-disable no-proto */\n    target.__proto__ = src;\n    /* eslint-enable no-proto */\n  }\n\n  /**\n   * Augment an target Object or Array by defining\n   * hidden properties.\n   *\n   * @param {Object|Array} target\n   * @param {Object} proto\n   */\n\n  function copyAugment(target, src, keys) {\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      def(target, key, src[key]);\n    }\n  }\n\n  /**\n   * Attempt to create an observer instance for a value,\n   * returns the new observer if successfully observed,\n   * or the existing observer if the value already has one.\n   *\n   * @param {*} value\n   * @param {Vue} [vm]\n   * @return {Observer|undefined}\n   * @static\n   */\n\n  function observe(value, vm) {\n    if (!value || typeof value !== 'object') {\n      return;\n    }\n    var ob;\n    if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n      ob = value.__ob__;\n    } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n      ob = new Observer(value);\n    }\n    if (ob && vm) {\n      ob.addVm(vm);\n    }\n    return ob;\n  }\n\n  /**\n   * Define a reactive property on an Object.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @param {*} val\n   */\n\n  function defineReactive(obj, key, val) {\n    var dep = new Dep();\n\n    var property = Object.getOwnPropertyDescriptor(obj, key);\n    if (property && property.configurable === false) {\n      return;\n    }\n\n    // cater for pre-defined getter/setters\n    var getter = property && property.get;\n    var setter = property && property.set;\n\n    var childOb = observe(val);\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      configurable: true,\n      get: function reactiveGetter() {\n        var value = getter ? getter.call(obj) : val;\n        if (Dep.target) {\n          dep.depend();\n          if (childOb) {\n            childOb.dep.depend();\n          }\n          if (isArray(value)) {\n            for (var e, i = 0, l = value.length; i < l; i++) {\n              e = value[i];\n              e && e.__ob__ && e.__ob__.dep.depend();\n            }\n          }\n        }\n        return value;\n      },\n      set: function reactiveSetter(newVal) {\n        var value = getter ? getter.call(obj) : val;\n        if (newVal === value) {\n          return;\n        }\n        if (setter) {\n          setter.call(obj, newVal);\n        } else {\n          val = newVal;\n        }\n        childOb = observe(newVal);\n        dep.notify();\n      }\n    });\n  }\n\n\n\n  var util = Object.freeze({\n  \tdefineReactive: defineReactive,\n  \tset: set,\n  \tdel: del,\n  \thasOwn: hasOwn,\n  \tisLiteral: isLiteral,\n  \tisReserved: isReserved,\n  \t_toString: _toString,\n  \ttoNumber: toNumber,\n  \ttoBoolean: toBoolean,\n  \tstripQuotes: stripQuotes,\n  \tcamelize: camelize,\n  \thyphenate: hyphenate,\n  \tclassify: classify,\n  \tbind: bind,\n  \ttoArray: toArray,\n  \textend: extend,\n  \tisObject: isObject,\n  \tisPlainObject: isPlainObject,\n  \tdef: def,\n  \tdebounce: _debounce,\n  \tindexOf: indexOf,\n  \tcancellable: cancellable,\n  \tlooseEqual: looseEqual,\n  \tisArray: isArray,\n  \thasProto: hasProto,\n  \tinBrowser: inBrowser,\n  \tdevtools: devtools,\n  \tisIE: isIE,\n  \tisIE9: isIE9,\n  \tisAndroid: isAndroid,\n  \tisIos: isIos,\n  \tiosVersionMatch: iosVersionMatch,\n  \tiosVersion: iosVersion,\n  \thasMutationObserverBug: hasMutationObserverBug,\n  \tget transitionProp () { return transitionProp; },\n  \tget transitionEndEvent () { return transitionEndEvent; },\n  \tget animationProp () { return animationProp; },\n  \tget animationEndEvent () { return animationEndEvent; },\n  \tnextTick: nextTick,\n  \tget _Set () { return _Set; },\n  \tquery: query,\n  \tinDoc: inDoc,\n  \tgetAttr: getAttr,\n  \tgetBindAttr: getBindAttr,\n  \thasBindAttr: hasBindAttr,\n  \tbefore: before,\n  \tafter: after,\n  \tremove: remove,\n  \tprepend: prepend,\n  \treplace: replace,\n  \ton: on,\n  \toff: off,\n  \tsetClass: setClass,\n  \taddClass: addClass,\n  \tremoveClass: removeClass,\n  \textractContent: extractContent,\n  \ttrimNode: trimNode,\n  \tisTemplate: isTemplate,\n  \tcreateAnchor: createAnchor,\n  \tfindRef: findRef,\n  \tmapNodeRange: mapNodeRange,\n  \tremoveNodeRange: removeNodeRange,\n  \tisFragment: isFragment,\n  \tgetOuterHTML: getOuterHTML,\n  \tmergeOptions: mergeOptions,\n  \tresolveAsset: resolveAsset,\n  \tcheckComponentAttr: checkComponentAttr,\n  \tcommonTagRE: commonTagRE,\n  \treservedTagRE: reservedTagRE,\n  \tget warn () { return warn; }\n  });\n\n  var uid = 0;\n\n  function initMixin (Vue) {\n    /**\n     * The main init sequence. This is called for every\n     * instance, including ones that are created from extended\n     * constructors.\n     *\n     * @param {Object} options - this options object should be\n     *                           the result of merging class\n     *                           options and the options passed\n     *                           in to the constructor.\n     */\n\n    Vue.prototype._init = function (options) {\n      options = options || {};\n\n      this.$el = null;\n      this.$parent = options.parent;\n      this.$root = this.$parent ? this.$parent.$root : this;\n      this.$children = [];\n      this.$refs = {}; // child vm references\n      this.$els = {}; // element references\n      this._watchers = []; // all watchers as an array\n      this._directives = []; // all directives\n\n      // a uid\n      this._uid = uid++;\n\n      // a flag to avoid this being observed\n      this._isVue = true;\n\n      // events bookkeeping\n      this._events = {}; // registered callbacks\n      this._eventsCount = {}; // for $broadcast optimization\n\n      // fragment instance properties\n      this._isFragment = false;\n      this._fragment = // @type {DocumentFragment}\n      this._fragmentStart = // @type {Text|Comment}\n      this._fragmentEnd = null; // @type {Text|Comment}\n\n      // lifecycle state\n      this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n      this._unlinkFn = null;\n\n      // context:\n      // if this is a transcluded component, context\n      // will be the common parent vm of this instance\n      // and its host.\n      this._context = options._context || this.$parent;\n\n      // scope:\n      // if this is inside an inline v-for, the scope\n      // will be the intermediate scope created for this\n      // repeat fragment. this is used for linking props\n      // and container directives.\n      this._scope = options._scope;\n\n      // fragment:\n      // if this instance is compiled inside a Fragment, it\n      // needs to reigster itself as a child of that fragment\n      // for attach/detach to work properly.\n      this._frag = options._frag;\n      if (this._frag) {\n        this._frag.children.push(this);\n      }\n\n      // push self into parent / transclusion host\n      if (this.$parent) {\n        this.$parent.$children.push(this);\n      }\n\n      // merge options.\n      options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n      // set ref\n      this._updateRef();\n\n      // initialize data as empty object.\n      // it will be filled up in _initData().\n      this._data = {};\n\n      // call init hook\n      this._callHook('init');\n\n      // initialize data observation and scope inheritance.\n      this._initState();\n\n      // setup event system and option events.\n      this._initEvents();\n\n      // call created hook\n      this._callHook('created');\n\n      // if `el` option is passed, start compilation.\n      if (options.el) {\n        this.$mount(options.el);\n      }\n    };\n  }\n\n  var pathCache = new Cache(1000);\n\n  // actions\n  var APPEND = 0;\n  var PUSH = 1;\n  var INC_SUB_PATH_DEPTH = 2;\n  var PUSH_SUB_PATH = 3;\n\n  // states\n  var BEFORE_PATH = 0;\n  var IN_PATH = 1;\n  var BEFORE_IDENT = 2;\n  var IN_IDENT = 3;\n  var IN_SUB_PATH = 4;\n  var IN_SINGLE_QUOTE = 5;\n  var IN_DOUBLE_QUOTE = 6;\n  var AFTER_PATH = 7;\n  var ERROR = 8;\n\n  var pathStateMachine = [];\n\n  pathStateMachine[BEFORE_PATH] = {\n    'ws': [BEFORE_PATH],\n    'ident': [IN_IDENT, APPEND],\n    '[': [IN_SUB_PATH],\n    'eof': [AFTER_PATH]\n  };\n\n  pathStateMachine[IN_PATH] = {\n    'ws': [IN_PATH],\n    '.': [BEFORE_IDENT],\n    '[': [IN_SUB_PATH],\n    'eof': [AFTER_PATH]\n  };\n\n  pathStateMachine[BEFORE_IDENT] = {\n    'ws': [BEFORE_IDENT],\n    'ident': [IN_IDENT, APPEND]\n  };\n\n  pathStateMachine[IN_IDENT] = {\n    'ident': [IN_IDENT, APPEND],\n    '0': [IN_IDENT, APPEND],\n    'number': [IN_IDENT, APPEND],\n    'ws': [IN_PATH, PUSH],\n    '.': [BEFORE_IDENT, PUSH],\n    '[': [IN_SUB_PATH, PUSH],\n    'eof': [AFTER_PATH, PUSH]\n  };\n\n  pathStateMachine[IN_SUB_PATH] = {\n    \"'\": [IN_SINGLE_QUOTE, APPEND],\n    '\"': [IN_DOUBLE_QUOTE, APPEND],\n    '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n    ']': [IN_PATH, PUSH_SUB_PATH],\n    'eof': ERROR,\n    'else': [IN_SUB_PATH, APPEND]\n  };\n\n  pathStateMachine[IN_SINGLE_QUOTE] = {\n    \"'\": [IN_SUB_PATH, APPEND],\n    'eof': ERROR,\n    'else': [IN_SINGLE_QUOTE, APPEND]\n  };\n\n  pathStateMachine[IN_DOUBLE_QUOTE] = {\n    '\"': [IN_SUB_PATH, APPEND],\n    'eof': ERROR,\n    'else': [IN_DOUBLE_QUOTE, APPEND]\n  };\n\n  /**\n   * Determine the type of a character in a keypath.\n   *\n   * @param {Char} ch\n   * @return {String} type\n   */\n\n  function getPathCharType(ch) {\n    if (ch === undefined) {\n      return 'eof';\n    }\n\n    var code = ch.charCodeAt(0);\n\n    switch (code) {\n      case 0x5B: // [\n      case 0x5D: // ]\n      case 0x2E: // .\n      case 0x22: // \"\n      case 0x27: // '\n      case 0x30:\n        // 0\n        return ch;\n\n      case 0x5F: // _\n      case 0x24:\n        // $\n        return 'ident';\n\n      case 0x20: // Space\n      case 0x09: // Tab\n      case 0x0A: // Newline\n      case 0x0D: // Return\n      case 0xA0: // No-break space\n      case 0xFEFF: // Byte Order Mark\n      case 0x2028: // Line Separator\n      case 0x2029:\n        // Paragraph Separator\n        return 'ws';\n    }\n\n    // a-z, A-Z\n    if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n      return 'ident';\n    }\n\n    // 1-9\n    if (code >= 0x31 && code <= 0x39) {\n      return 'number';\n    }\n\n    return 'else';\n  }\n\n  /**\n   * Format a subPath, return its plain form if it is\n   * a literal string or number. Otherwise prepend the\n   * dynamic indicator (*).\n   *\n   * @param {String} path\n   * @return {String}\n   */\n\n  function formatSubPath(path) {\n    var trimmed = path.trim();\n    // invalid leading 0\n    if (path.charAt(0) === '0' && isNaN(path)) {\n      return false;\n    }\n    return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n  }\n\n  /**\n   * Parse a string path into an array of segments\n   *\n   * @param {String} path\n   * @return {Array|undefined}\n   */\n\n  function parse(path) {\n    var keys = [];\n    var index = -1;\n    var mode = BEFORE_PATH;\n    var subPathDepth = 0;\n    var c, newChar, key, type, transition, action, typeMap;\n\n    var actions = [];\n\n    actions[PUSH] = function () {\n      if (key !== undefined) {\n        keys.push(key);\n        key = undefined;\n      }\n    };\n\n    actions[APPEND] = function () {\n      if (key === undefined) {\n        key = newChar;\n      } else {\n        key += newChar;\n      }\n    };\n\n    actions[INC_SUB_PATH_DEPTH] = function () {\n      actions[APPEND]();\n      subPathDepth++;\n    };\n\n    actions[PUSH_SUB_PATH] = function () {\n      if (subPathDepth > 0) {\n        subPathDepth--;\n        mode = IN_SUB_PATH;\n        actions[APPEND]();\n      } else {\n        subPathDepth = 0;\n        key = formatSubPath(key);\n        if (key === false) {\n          return false;\n        } else {\n          actions[PUSH]();\n        }\n      }\n    };\n\n    function maybeUnescapeQuote() {\n      var nextChar = path[index + 1];\n      if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n        index++;\n        newChar = '\\\\' + nextChar;\n        actions[APPEND]();\n        return true;\n      }\n    }\n\n    while (mode != null) {\n      index++;\n      c = path[index];\n\n      if (c === '\\\\' && maybeUnescapeQuote()) {\n        continue;\n      }\n\n      type = getPathCharType(c);\n      typeMap = pathStateMachine[mode];\n      transition = typeMap[type] || typeMap['else'] || ERROR;\n\n      if (transition === ERROR) {\n        return; // parse error\n      }\n\n      mode = transition[0];\n      action = actions[transition[1]];\n      if (action) {\n        newChar = transition[2];\n        newChar = newChar === undefined ? c : newChar;\n        if (action() === false) {\n          return;\n        }\n      }\n\n      if (mode === AFTER_PATH) {\n        keys.raw = path;\n        return keys;\n      }\n    }\n  }\n\n  /**\n   * External parse that check for a cache hit first\n   *\n   * @param {String} path\n   * @return {Array|undefined}\n   */\n\n  function parsePath(path) {\n    var hit = pathCache.get(path);\n    if (!hit) {\n      hit = parse(path);\n      if (hit) {\n        pathCache.put(path, hit);\n      }\n    }\n    return hit;\n  }\n\n  /**\n   * Get from an object from a path string\n   *\n   * @param {Object} obj\n   * @param {String} path\n   */\n\n  function getPath(obj, path) {\n    return parseExpression(path).get(obj);\n  }\n\n  /**\n   * Warn against setting non-existent root path on a vm.\n   */\n\n  var warnNonExistent;\n  if ('development' !== 'production') {\n    warnNonExistent = function (path, vm) {\n      warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n    };\n  }\n\n  /**\n   * Set on an object from a path\n   *\n   * @param {Object} obj\n   * @param {String | Array} path\n   * @param {*} val\n   */\n\n  function setPath(obj, path, val) {\n    var original = obj;\n    if (typeof path === 'string') {\n      path = parse(path);\n    }\n    if (!path || !isObject(obj)) {\n      return false;\n    }\n    var last, key;\n    for (var i = 0, l = path.length; i < l; i++) {\n      last = obj;\n      key = path[i];\n      if (key.charAt(0) === '*') {\n        key = parseExpression(key.slice(1)).get.call(original, original);\n      }\n      if (i < l - 1) {\n        obj = obj[key];\n        if (!isObject(obj)) {\n          obj = {};\n          if ('development' !== 'production' && last._isVue) {\n            warnNonExistent(path, last);\n          }\n          set(last, key, obj);\n        }\n      } else {\n        if (isArray(obj)) {\n          obj.$set(key, val);\n        } else if (key in obj) {\n          obj[key] = val;\n        } else {\n          if ('development' !== 'production' && obj._isVue) {\n            warnNonExistent(path, obj);\n          }\n          set(obj, key, val);\n        }\n      }\n    }\n    return true;\n  }\n\nvar path = Object.freeze({\n    parsePath: parsePath,\n    getPath: getPath,\n    setPath: setPath\n  });\n\n  var expressionCache = new Cache(1000);\n\n  var allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n  var allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n  // keywords that don't make sense inside expressions\n  var improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n  var improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n  var wsRE = /\\s/g;\n  var newlineRE = /\\n/g;\n  var saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n  var restoreRE = /\"(\\d+)\"/g;\n  var pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n  var identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n  var literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\n  function noop() {}\n\n  /**\n   * Save / Rewrite / Restore\n   *\n   * When rewriting paths found in an expression, it is\n   * possible for the same letter sequences to be found in\n   * strings and Object literal property keys. Therefore we\n   * remove and store these parts in a temporary array, and\n   * restore them after the path rewrite.\n   */\n\n  var saved = [];\n\n  /**\n   * Save replacer\n   *\n   * The save regex can match two possible cases:\n   * 1. An opening object literal\n   * 2. A string\n   * If matched as a plain string, we need to escape its\n   * newlines, since the string needs to be preserved when\n   * generating the function body.\n   *\n   * @param {String} str\n   * @param {String} isString - str if matched as a string\n   * @return {String} - placeholder with index\n   */\n\n  function save(str, isString) {\n    var i = saved.length;\n    saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n    return '\"' + i + '\"';\n  }\n\n  /**\n   * Path rewrite replacer\n   *\n   * @param {String} raw\n   * @return {String}\n   */\n\n  function rewrite(raw) {\n    var c = raw.charAt(0);\n    var path = raw.slice(1);\n    if (allowedKeywordsRE.test(path)) {\n      return raw;\n    } else {\n      path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n      return c + 'scope.' + path;\n    }\n  }\n\n  /**\n   * Restore replacer\n   *\n   * @param {String} str\n   * @param {String} i - matched save index\n   * @return {String}\n   */\n\n  function restore(str, i) {\n    return saved[i];\n  }\n\n  /**\n   * Rewrite an expression, prefixing all path accessors with\n   * `scope.` and generate getter/setter functions.\n   *\n   * @param {String} exp\n   * @return {Function}\n   */\n\n  function compileGetter(exp) {\n    if (improperKeywordsRE.test(exp)) {\n      'development' !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n    }\n    // reset state\n    saved.length = 0;\n    // save strings and object literal keys\n    var body = exp.replace(saveRE, save).replace(wsRE, '');\n    // rewrite all paths\n    // pad 1 space here because the regex matches 1 extra char\n    body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n    return makeGetterFn(body);\n  }\n\n  /**\n   * Build a getter function. Requires eval.\n   *\n   * We isolate the try/catch so it doesn't affect the\n   * optimization of the parse function when it is not called.\n   *\n   * @param {String} body\n   * @return {Function|undefined}\n   */\n\n  function makeGetterFn(body) {\n    try {\n      /* eslint-disable no-new-func */\n      return new Function('scope', 'return ' + body + ';');\n      /* eslint-enable no-new-func */\n    } catch (e) {\n      if ('development' !== 'production') {\n        /* istanbul ignore if */\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n        } else {\n          warn('Invalid expression. ' + 'Generated function body: ' + body);\n        }\n      }\n      return noop;\n    }\n  }\n\n  /**\n   * Compile a setter function for the expression.\n   *\n   * @param {String} exp\n   * @return {Function|undefined}\n   */\n\n  function compileSetter(exp) {\n    var path = parsePath(exp);\n    if (path) {\n      return function (scope, val) {\n        setPath(scope, path, val);\n      };\n    } else {\n      'development' !== 'production' && warn('Invalid setter expression: ' + exp);\n    }\n  }\n\n  /**\n   * Parse an expression into re-written getter/setters.\n   *\n   * @param {String} exp\n   * @param {Boolean} needSet\n   * @return {Function}\n   */\n\n  function parseExpression(exp, needSet) {\n    exp = exp.trim();\n    // try cache\n    var hit = expressionCache.get(exp);\n    if (hit) {\n      if (needSet && !hit.set) {\n        hit.set = compileSetter(hit.exp);\n      }\n      return hit;\n    }\n    var res = { exp: exp };\n    res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n    // optimized super simple getter\n    ? makeGetterFn('scope.' + exp)\n    // dynamic getter\n    : compileGetter(exp);\n    if (needSet) {\n      res.set = compileSetter(exp);\n    }\n    expressionCache.put(exp, res);\n    return res;\n  }\n\n  /**\n   * Check if an expression is a simple path.\n   *\n   * @param {String} exp\n   * @return {Boolean}\n   */\n\n  function isSimplePath(exp) {\n    return pathTestRE.test(exp) &&\n    // don't treat literal values as paths\n    !literalValueRE$1.test(exp) &&\n    // Math constants e.g. Math.PI, Math.E etc.\n    exp.slice(0, 5) !== 'Math.';\n  }\n\nvar expression = Object.freeze({\n    parseExpression: parseExpression,\n    isSimplePath: isSimplePath\n  });\n\n  // we have two separate queues: one for directive updates\n  // and one for user watcher registered via $watch().\n  // we want to guarantee directive updates to be called\n  // before user watchers so that when user watchers are\n  // triggered, the DOM would have already been in updated\n  // state.\n\n  var queue = [];\n  var userQueue = [];\n  var has = {};\n  var circular = {};\n  var waiting = false;\n\n  /**\n   * Reset the batcher's state.\n   */\n\n  function resetBatcherState() {\n    queue.length = 0;\n    userQueue.length = 0;\n    has = {};\n    circular = {};\n    waiting = false;\n  }\n\n  /**\n   * Flush both queues and run the watchers.\n   */\n\n  function flushBatcherQueue() {\n    var _again = true;\n\n    _function: while (_again) {\n      _again = false;\n\n      runBatcherQueue(queue);\n      runBatcherQueue(userQueue);\n      // user watchers triggered more watchers,\n      // keep flushing until it depletes\n      if (queue.length) {\n        _again = true;\n        continue _function;\n      }\n      // dev tool hook\n      /* istanbul ignore if */\n      if (devtools && config.devtools) {\n        devtools.emit('flush');\n      }\n      resetBatcherState();\n    }\n  }\n\n  /**\n   * Run the watchers in a single queue.\n   *\n   * @param {Array} queue\n   */\n\n  function runBatcherQueue(queue) {\n    // do not cache length because more watchers might be pushed\n    // as we run existing watchers\n    for (var i = 0; i < queue.length; i++) {\n      var watcher = queue[i];\n      var id = watcher.id;\n      has[id] = null;\n      watcher.run();\n      // in dev build, check and stop circular updates.\n      if ('development' !== 'production' && has[id] != null) {\n        circular[id] = (circular[id] || 0) + 1;\n        if (circular[id] > config._maxUpdateCount) {\n          warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n          break;\n        }\n      }\n    }\n    queue.length = 0;\n  }\n\n  /**\n   * Push a watcher into the watcher queue.\n   * Jobs with duplicate IDs will be skipped unless it's\n   * pushed when the queue is being flushed.\n   *\n   * @param {Watcher} watcher\n   *   properties:\n   *   - {Number} id\n   *   - {Function} run\n   */\n\n  function pushWatcher(watcher) {\n    var id = watcher.id;\n    if (has[id] == null) {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n\n  var uid$2 = 0;\n\n  /**\n   * A watcher parses an expression, collects dependencies,\n   * and fires callback when the expression value changes.\n   * This is used for both the $watch() api and directives.\n   *\n   * @param {Vue} vm\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} options\n   *                 - {Array} filters\n   *                 - {Boolean} twoWay\n   *                 - {Boolean} deep\n   *                 - {Boolean} user\n   *                 - {Boolean} sync\n   *                 - {Boolean} lazy\n   *                 - {Function} [preProcess]\n   *                 - {Function} [postProcess]\n   * @constructor\n   */\n  function Watcher(vm, expOrFn, cb, options) {\n    // mix in options\n    if (options) {\n      extend(this, options);\n    }\n    var isFn = typeof expOrFn === 'function';\n    this.vm = vm;\n    vm._watchers.push(this);\n    this.expression = expOrFn;\n    this.cb = cb;\n    this.id = ++uid$2; // uid for batching\n    this.active = true;\n    this.dirty = this.lazy; // for lazy watchers\n    this.deps = [];\n    this.newDeps = [];\n    this.depIds = new _Set();\n    this.newDepIds = new _Set();\n    this.prevError = null; // for async error stacks\n    // parse expression for getter/setter\n    if (isFn) {\n      this.getter = expOrFn;\n      this.setter = undefined;\n    } else {\n      var res = parseExpression(expOrFn, this.twoWay);\n      this.getter = res.get;\n      this.setter = res.set;\n    }\n    this.value = this.lazy ? undefined : this.get();\n    // state for avoiding false triggers for deep and Array\n    // watchers during vm._digest()\n    this.queued = this.shallow = false;\n  }\n\n  /**\n   * Evaluate the getter, and re-collect dependencies.\n   */\n\n  Watcher.prototype.get = function () {\n    this.beforeGet();\n    var scope = this.scope || this.vm;\n    var value;\n    try {\n      value = this.getter.call(scope, scope);\n    } catch (e) {\n      if ('development' !== 'production' && config.warnExpressionErrors) {\n        warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n      }\n    }\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    if (this.preProcess) {\n      value = this.preProcess(value);\n    }\n    if (this.filters) {\n      value = scope._applyFilters(value, null, this.filters, false);\n    }\n    if (this.postProcess) {\n      value = this.postProcess(value);\n    }\n    this.afterGet();\n    return value;\n  };\n\n  /**\n   * Set the corresponding value with the setter.\n   *\n   * @param {*} value\n   */\n\n  Watcher.prototype.set = function (value) {\n    var scope = this.scope || this.vm;\n    if (this.filters) {\n      value = scope._applyFilters(value, this.value, this.filters, true);\n    }\n    try {\n      this.setter.call(scope, scope, value);\n    } catch (e) {\n      if ('development' !== 'production' && config.warnExpressionErrors) {\n        warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n      }\n    }\n    // two-way sync for v-for alias\n    var forContext = scope.$forContext;\n    if (forContext && forContext.alias === this.expression) {\n      if (forContext.filters) {\n        'development' !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n        return;\n      }\n      forContext._withLock(function () {\n        if (scope.$key) {\n          // original is an object\n          forContext.rawValue[scope.$key] = value;\n        } else {\n          forContext.rawValue.$set(scope.$index, value);\n        }\n      });\n    }\n  };\n\n  /**\n   * Prepare for dependency collection.\n   */\n\n  Watcher.prototype.beforeGet = function () {\n    Dep.target = this;\n  };\n\n  /**\n   * Add a dependency to this directive.\n   *\n   * @param {Dep} dep\n   */\n\n  Watcher.prototype.addDep = function (dep) {\n    var id = dep.id;\n    if (!this.newDepIds.has(id)) {\n      this.newDepIds.add(id);\n      this.newDeps.push(dep);\n      if (!this.depIds.has(id)) {\n        dep.addSub(this);\n      }\n    }\n  };\n\n  /**\n   * Clean up for dependency collection.\n   */\n\n  Watcher.prototype.afterGet = function () {\n    Dep.target = null;\n    var i = this.deps.length;\n    while (i--) {\n      var dep = this.deps[i];\n      if (!this.newDepIds.has(dep.id)) {\n        dep.removeSub(this);\n      }\n    }\n    var tmp = this.depIds;\n    this.depIds = this.newDepIds;\n    this.newDepIds = tmp;\n    this.newDepIds.clear();\n    tmp = this.deps;\n    this.deps = this.newDeps;\n    this.newDeps = tmp;\n    this.newDeps.length = 0;\n  };\n\n  /**\n   * Subscriber interface.\n   * Will be called when a dependency changes.\n   *\n   * @param {Boolean} shallow\n   */\n\n  Watcher.prototype.update = function (shallow) {\n    if (this.lazy) {\n      this.dirty = true;\n    } else if (this.sync || !config.async) {\n      this.run();\n    } else {\n      // if queued, only overwrite shallow with non-shallow,\n      // but not the other way around.\n      this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n      this.queued = true;\n      // record before-push error stack in debug mode\n      /* istanbul ignore if */\n      if ('development' !== 'production' && config.debug) {\n        this.prevError = new Error('[vue] async stack trace');\n      }\n      pushWatcher(this);\n    }\n  };\n\n  /**\n   * Batcher job interface.\n   * Will be called by the batcher.\n   */\n\n  Watcher.prototype.run = function () {\n    if (this.active) {\n      var value = this.get();\n      if (value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated; but only do so if this is a\n      // non-shallow update (caused by a vm digest).\n      (isObject(value) || this.deep) && !this.shallow) {\n        // set new value\n        var oldValue = this.value;\n        this.value = value;\n        // in debug + async mode, when a watcher callbacks\n        // throws, we also throw the saved before-push error\n        // so the full cross-tick stack trace is available.\n        var prevError = this.prevError;\n        /* istanbul ignore if */\n        if ('development' !== 'production' && config.debug && prevError) {\n          this.prevError = null;\n          try {\n            this.cb.call(this.vm, value, oldValue);\n          } catch (e) {\n            nextTick(function () {\n              throw prevError;\n            }, 0);\n            throw e;\n          }\n        } else {\n          this.cb.call(this.vm, value, oldValue);\n        }\n      }\n      this.queued = this.shallow = false;\n    }\n  };\n\n  /**\n   * Evaluate the value of the watcher.\n   * This only gets called for lazy watchers.\n   */\n\n  Watcher.prototype.evaluate = function () {\n    // avoid overwriting another watcher that is being\n    // collected.\n    var current = Dep.target;\n    this.value = this.get();\n    this.dirty = false;\n    Dep.target = current;\n  };\n\n  /**\n   * Depend on all deps collected by this watcher.\n   */\n\n  Watcher.prototype.depend = function () {\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].depend();\n    }\n  };\n\n  /**\n   * Remove self from all dependencies' subcriber list.\n   */\n\n  Watcher.prototype.teardown = function () {\n    if (this.active) {\n      // remove self from vm's watcher list\n      // this is a somewhat expensive operation so we skip it\n      // if the vm is being destroyed or is performing a v-for\n      // re-render (the watcher list is then filtered by v-for).\n      if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n        this.vm._watchers.$remove(this);\n      }\n      var i = this.deps.length;\n      while (i--) {\n        this.deps[i].removeSub(this);\n      }\n      this.active = false;\n      this.vm = this.cb = this.value = null;\n    }\n  };\n\n  /**\n   * Recrusively traverse an object to evoke all converted\n   * getters, so that every nested property inside the object\n   * is collected as a \"deep\" dependency.\n   *\n   * @param {*} val\n   */\n\n  var seenObjects = new _Set();\n  function traverse(val, seen) {\n    var i = undefined,\n        keys = undefined;\n    if (!seen) {\n      seen = seenObjects;\n      seen.clear();\n    }\n    var isA = isArray(val);\n    var isO = isObject(val);\n    if (isA || isO) {\n      if (val.__ob__) {\n        var depId = val.__ob__.dep.id;\n        if (seen.has(depId)) {\n          return;\n        } else {\n          seen.add(depId);\n        }\n      }\n      if (isA) {\n        i = val.length;\n        while (i--) traverse(val[i], seen);\n      } else if (isO) {\n        keys = Object.keys(val);\n        i = keys.length;\n        while (i--) traverse(val[keys[i]], seen);\n      }\n    }\n  }\n\n  var text$1 = {\n\n    bind: function bind() {\n      this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n    },\n\n    update: function update(value) {\n      this.el[this.attr] = _toString(value);\n    }\n  };\n\n  var templateCache = new Cache(1000);\n  var idSelectorCache = new Cache(1000);\n\n  var map = {\n    efault: [0, '', ''],\n    legend: [1, '<fieldset>', '</fieldset>'],\n    tr: [2, '<table><tbody>', '</tbody></table>'],\n    col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n  };\n\n  map.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\n  map.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\n  map.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\n  map.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n  /**\n   * Check if a node is a supported template node with a\n   * DocumentFragment content.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function isRealTemplate(node) {\n    return isTemplate(node) && isFragment(node.content);\n  }\n\n  var tagRE$1 = /<([\\w:-]+)/;\n  var entityRE = /&#?\\w+?;/;\n  var commentRE = /<!--/;\n\n  /**\n   * Convert a string template to a DocumentFragment.\n   * Determines correct wrapping by tag types. Wrapping\n   * strategy found in jQuery & component/domify.\n   *\n   * @param {String} templateString\n   * @param {Boolean} raw\n   * @return {DocumentFragment}\n   */\n\n  function stringToFragment(templateString, raw) {\n    // try a cache hit first\n    var cacheKey = raw ? templateString : templateString.trim();\n    var hit = templateCache.get(cacheKey);\n    if (hit) {\n      return hit;\n    }\n\n    var frag = document.createDocumentFragment();\n    var tagMatch = templateString.match(tagRE$1);\n    var entityMatch = entityRE.test(templateString);\n    var commentMatch = commentRE.test(templateString);\n\n    if (!tagMatch && !entityMatch && !commentMatch) {\n      // text only, return a single text node.\n      frag.appendChild(document.createTextNode(templateString));\n    } else {\n      var tag = tagMatch && tagMatch[1];\n      var wrap = map[tag] || map.efault;\n      var depth = wrap[0];\n      var prefix = wrap[1];\n      var suffix = wrap[2];\n      var node = document.createElement('div');\n\n      node.innerHTML = prefix + templateString + suffix;\n      while (depth--) {\n        node = node.lastChild;\n      }\n\n      var child;\n      /* eslint-disable no-cond-assign */\n      while (child = node.firstChild) {\n        /* eslint-enable no-cond-assign */\n        frag.appendChild(child);\n      }\n    }\n    if (!raw) {\n      trimNode(frag);\n    }\n    templateCache.put(cacheKey, frag);\n    return frag;\n  }\n\n  /**\n   * Convert a template node to a DocumentFragment.\n   *\n   * @param {Node} node\n   * @return {DocumentFragment}\n   */\n\n  function nodeToFragment(node) {\n    // if its a template tag and the browser supports it,\n    // its content is already a document fragment. However, iOS Safari has\n    // bug when using directly cloned template content with touch\n    // events and can cause crashes when the nodes are removed from DOM, so we\n    // have to treat template elements as string templates. (#2805)\n    /* istanbul ignore if */\n    if (isRealTemplate(node)) {\n      return stringToFragment(node.innerHTML);\n    }\n    // script template\n    if (node.tagName === 'SCRIPT') {\n      return stringToFragment(node.textContent);\n    }\n    // normal node, clone it to avoid mutating the original\n    var clonedNode = cloneNode(node);\n    var frag = document.createDocumentFragment();\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = clonedNode.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n    trimNode(frag);\n    return frag;\n  }\n\n  // Test for the presence of the Safari template cloning bug\n  // https://bugs.webkit.org/showug.cgi?id=137755\n  var hasBrokenTemplate = (function () {\n    /* istanbul ignore else */\n    if (inBrowser) {\n      var a = document.createElement('div');\n      a.innerHTML = '<template>1</template>';\n      return !a.cloneNode(true).firstChild.innerHTML;\n    } else {\n      return false;\n    }\n  })();\n\n  // Test for IE10/11 textarea placeholder clone bug\n  var hasTextareaCloneBug = (function () {\n    /* istanbul ignore else */\n    if (inBrowser) {\n      var t = document.createElement('textarea');\n      t.placeholder = 't';\n      return t.cloneNode(true).value === 't';\n    } else {\n      return false;\n    }\n  })();\n\n  /**\n   * 1. Deal with Safari cloning nested <template> bug by\n   *    manually cloning all template instances.\n   * 2. Deal with IE10/11 textarea placeholder bug by setting\n   *    the correct value after cloning.\n   *\n   * @param {Element|DocumentFragment} node\n   * @return {Element|DocumentFragment}\n   */\n\n  function cloneNode(node) {\n    /* istanbul ignore if */\n    if (!node.querySelectorAll) {\n      return node.cloneNode();\n    }\n    var res = node.cloneNode(true);\n    var i, original, cloned;\n    /* istanbul ignore if */\n    if (hasBrokenTemplate) {\n      var tempClone = res;\n      if (isRealTemplate(node)) {\n        node = node.content;\n        tempClone = res.content;\n      }\n      original = node.querySelectorAll('template');\n      if (original.length) {\n        cloned = tempClone.querySelectorAll('template');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n        }\n      }\n    }\n    /* istanbul ignore if */\n    if (hasTextareaCloneBug) {\n      if (node.tagName === 'TEXTAREA') {\n        res.value = node.value;\n      } else {\n        original = node.querySelectorAll('textarea');\n        if (original.length) {\n          cloned = res.querySelectorAll('textarea');\n          i = cloned.length;\n          while (i--) {\n            cloned[i].value = original[i].value;\n          }\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Process the template option and normalizes it into a\n   * a DocumentFragment that can be used as a partial or a\n   * instance template.\n   *\n   * @param {*} template\n   *        Possible values include:\n   *        - DocumentFragment object\n   *        - Node object of type Template\n   *        - id selector: '#some-template-id'\n   *        - template string: '<div><span>{{msg}}</span></div>'\n   * @param {Boolean} shouldClone\n   * @param {Boolean} raw\n   *        inline HTML interpolation. Do not check for id\n   *        selector and keep whitespace in the string.\n   * @return {DocumentFragment|undefined}\n   */\n\n  function parseTemplate(template, shouldClone, raw) {\n    var node, frag;\n\n    // if the template is already a document fragment,\n    // do nothing\n    if (isFragment(template)) {\n      trimNode(template);\n      return shouldClone ? cloneNode(template) : template;\n    }\n\n    if (typeof template === 'string') {\n      // id selector\n      if (!raw && template.charAt(0) === '#') {\n        // id selector can be cached too\n        frag = idSelectorCache.get(template);\n        if (!frag) {\n          node = document.getElementById(template.slice(1));\n          if (node) {\n            frag = nodeToFragment(node);\n            // save selector to cache\n            idSelectorCache.put(template, frag);\n          }\n        }\n      } else {\n        // normal string template\n        frag = stringToFragment(template, raw);\n      }\n    } else if (template.nodeType) {\n      // a direct node\n      frag = nodeToFragment(template);\n    }\n\n    return frag && shouldClone ? cloneNode(frag) : frag;\n  }\n\nvar template = Object.freeze({\n    cloneNode: cloneNode,\n    parseTemplate: parseTemplate\n  });\n\n  var html = {\n\n    bind: function bind() {\n      // a comment node means this is a binding for\n      // {{{ inline unescaped html }}}\n      if (this.el.nodeType === 8) {\n        // hold nodes\n        this.nodes = [];\n        // replace the placeholder with proper anchor\n        this.anchor = createAnchor('v-html');\n        replace(this.el, this.anchor);\n      }\n    },\n\n    update: function update(value) {\n      value = _toString(value);\n      if (this.nodes) {\n        this.swap(value);\n      } else {\n        this.el.innerHTML = value;\n      }\n    },\n\n    swap: function swap(value) {\n      // remove old nodes\n      var i = this.nodes.length;\n      while (i--) {\n        remove(this.nodes[i]);\n      }\n      // convert new value to a fragment\n      // do not attempt to retrieve from id selector\n      var frag = parseTemplate(value, true, true);\n      // save a reference to these nodes so we can remove later\n      this.nodes = toArray(frag.childNodes);\n      before(frag, this.anchor);\n    }\n  };\n\n  /**\n   * Abstraction for a partially-compiled fragment.\n   * Can optionally compile content with a child scope.\n   *\n   * @param {Function} linker\n   * @param {Vue} vm\n   * @param {DocumentFragment} frag\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [parentFrag]\n   */\n  function Fragment(linker, vm, frag, host, scope, parentFrag) {\n    this.children = [];\n    this.childFrags = [];\n    this.vm = vm;\n    this.scope = scope;\n    this.inserted = false;\n    this.parentFrag = parentFrag;\n    if (parentFrag) {\n      parentFrag.childFrags.push(this);\n    }\n    this.unlink = linker(vm, frag, host, scope, this);\n    var single = this.single = frag.childNodes.length === 1 &&\n    // do not go single mode if the only node is an anchor\n    !frag.childNodes[0].__v_anchor;\n    if (single) {\n      this.node = frag.childNodes[0];\n      this.before = singleBefore;\n      this.remove = singleRemove;\n    } else {\n      this.node = createAnchor('fragment-start');\n      this.end = createAnchor('fragment-end');\n      this.frag = frag;\n      prepend(this.node, frag);\n      frag.appendChild(this.end);\n      this.before = multiBefore;\n      this.remove = multiRemove;\n    }\n    this.node.__v_frag = this;\n  }\n\n  /**\n   * Call attach/detach for all components contained within\n   * this fragment. Also do so recursively for all child\n   * fragments.\n   *\n   * @param {Function} hook\n   */\n\n  Fragment.prototype.callHook = function (hook) {\n    var i, l;\n    for (i = 0, l = this.childFrags.length; i < l; i++) {\n      this.childFrags[i].callHook(hook);\n    }\n    for (i = 0, l = this.children.length; i < l; i++) {\n      hook(this.children[i]);\n    }\n  };\n\n  /**\n   * Insert fragment before target, single node version\n   *\n   * @param {Node} target\n   * @param {Boolean} withTransition\n   */\n\n  function singleBefore(target, withTransition) {\n    this.inserted = true;\n    var method = withTransition !== false ? beforeWithTransition : before;\n    method(this.node, target, this.vm);\n    if (inDoc(this.node)) {\n      this.callHook(attach);\n    }\n  }\n\n  /**\n   * Remove fragment, single node version\n   */\n\n  function singleRemove() {\n    this.inserted = false;\n    var shouldCallRemove = inDoc(this.node);\n    var self = this;\n    this.beforeRemove();\n    removeWithTransition(this.node, this.vm, function () {\n      if (shouldCallRemove) {\n        self.callHook(detach);\n      }\n      self.destroy();\n    });\n  }\n\n  /**\n   * Insert fragment before target, multi-nodes version\n   *\n   * @param {Node} target\n   * @param {Boolean} withTransition\n   */\n\n  function multiBefore(target, withTransition) {\n    this.inserted = true;\n    var vm = this.vm;\n    var method = withTransition !== false ? beforeWithTransition : before;\n    mapNodeRange(this.node, this.end, function (node) {\n      method(node, target, vm);\n    });\n    if (inDoc(this.node)) {\n      this.callHook(attach);\n    }\n  }\n\n  /**\n   * Remove fragment, multi-nodes version\n   */\n\n  function multiRemove() {\n    this.inserted = false;\n    var self = this;\n    var shouldCallRemove = inDoc(this.node);\n    this.beforeRemove();\n    removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n      if (shouldCallRemove) {\n        self.callHook(detach);\n      }\n      self.destroy();\n    });\n  }\n\n  /**\n   * Prepare the fragment for removal.\n   */\n\n  Fragment.prototype.beforeRemove = function () {\n    var i, l;\n    for (i = 0, l = this.childFrags.length; i < l; i++) {\n      // call the same method recursively on child\n      // fragments, depth-first\n      this.childFrags[i].beforeRemove(false);\n    }\n    for (i = 0, l = this.children.length; i < l; i++) {\n      // Call destroy for all contained instances,\n      // with remove:false and defer:true.\n      // Defer is necessary because we need to\n      // keep the children to call detach hooks\n      // on them.\n      this.children[i].$destroy(false, true);\n    }\n    var dirs = this.unlink.dirs;\n    for (i = 0, l = dirs.length; i < l; i++) {\n      // disable the watchers on all the directives\n      // so that the rendered content stays the same\n      // during removal.\n      dirs[i]._watcher && dirs[i]._watcher.teardown();\n    }\n  };\n\n  /**\n   * Destroy the fragment.\n   */\n\n  Fragment.prototype.destroy = function () {\n    if (this.parentFrag) {\n      this.parentFrag.childFrags.$remove(this);\n    }\n    this.node.__v_frag = null;\n    this.unlink();\n  };\n\n  /**\n   * Call attach hook for a Vue instance.\n   *\n   * @param {Vue} child\n   */\n\n  function attach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Call detach hook for a Vue instance.\n   *\n   * @param {Vue} child\n   */\n\n  function detach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  var linkerCache = new Cache(5000);\n\n  /**\n   * A factory that can be used to create instances of a\n   * fragment. Caches the compiled linker if possible.\n   *\n   * @param {Vue} vm\n   * @param {Element|String} el\n   */\n  function FragmentFactory(vm, el) {\n    this.vm = vm;\n    var template;\n    var isString = typeof el === 'string';\n    if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n      template = parseTemplate(el, true);\n    } else {\n      template = document.createDocumentFragment();\n      template.appendChild(el);\n    }\n    this.template = template;\n    // linker can be cached, but only for components\n    var linker;\n    var cid = vm.constructor.cid;\n    if (cid > 0) {\n      var cacheId = cid + (isString ? el : getOuterHTML(el));\n      linker = linkerCache.get(cacheId);\n      if (!linker) {\n        linker = compile(template, vm.$options, true);\n        linkerCache.put(cacheId, linker);\n      }\n    } else {\n      linker = compile(template, vm.$options, true);\n    }\n    this.linker = linker;\n  }\n\n  /**\n   * Create a fragment instance with given host and scope.\n   *\n   * @param {Vue} host\n   * @param {Object} scope\n   * @param {Fragment} parentFrag\n   */\n\n  FragmentFactory.prototype.create = function (host, scope, parentFrag) {\n    var frag = cloneNode(this.template);\n    return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n  };\n\n  var ON = 700;\n  var MODEL = 800;\n  var BIND = 850;\n  var TRANSITION = 1100;\n  var EL = 1500;\n  var COMPONENT = 1500;\n  var PARTIAL = 1750;\n  var IF = 2100;\n  var FOR = 2200;\n  var SLOT = 2300;\n\n  var uid$3 = 0;\n\n  var vFor = {\n\n    priority: FOR,\n    terminal: true,\n\n    params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n    bind: function bind() {\n      // support \"item in/of items\" syntax\n      var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n      if (inMatch) {\n        var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n        if (itMatch) {\n          this.iterator = itMatch[1].trim();\n          this.alias = itMatch[2].trim();\n        } else {\n          this.alias = inMatch[1].trim();\n        }\n        this.expression = inMatch[2];\n      }\n\n      if (!this.alias) {\n        'development' !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n        return;\n      }\n\n      // uid as a cache identifier\n      this.id = '__v-for__' + ++uid$3;\n\n      // check if this is an option list,\n      // so that we know if we need to update the <select>'s\n      // v-model when the option list has changed.\n      // because v-model has a lower priority than v-for,\n      // the v-model is not bound here yet, so we have to\n      // retrive it in the actual updateModel() function.\n      var tag = this.el.tagName;\n      this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n      // setup anchor nodes\n      this.start = createAnchor('v-for-start');\n      this.end = createAnchor('v-for-end');\n      replace(this.el, this.end);\n      before(this.start, this.end);\n\n      // cache\n      this.cache = Object.create(null);\n\n      // fragment factory\n      this.factory = new FragmentFactory(this.vm, this.el);\n    },\n\n    update: function update(data) {\n      this.diff(data);\n      this.updateRef();\n      this.updateModel();\n    },\n\n    /**\n     * Diff, based on new data and old data, determine the\n     * minimum amount of DOM manipulations needed to make the\n     * DOM reflect the new data Array.\n     *\n     * The algorithm diffs the new data Array by storing a\n     * hidden reference to an owner vm instance on previously\n     * seen data. This allows us to achieve O(n) which is\n     * better than a levenshtein distance based algorithm,\n     * which is O(m * n).\n     *\n     * @param {Array} data\n     */\n\n    diff: function diff(data) {\n      // check if the Array was converted from an Object\n      var item = data[0];\n      var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n      var trackByKey = this.params.trackBy;\n      var oldFrags = this.frags;\n      var frags = this.frags = new Array(data.length);\n      var alias = this.alias;\n      var iterator = this.iterator;\n      var start = this.start;\n      var end = this.end;\n      var inDocument = inDoc(start);\n      var init = !oldFrags;\n      var i, l, frag, key, value, primitive;\n\n      // First pass, go through the new Array and fill up\n      // the new frags array. If a piece of data has a cached\n      // instance for it, we reuse it. Otherwise build a new\n      // instance.\n      for (i = 0, l = data.length; i < l; i++) {\n        item = data[i];\n        key = convertedFromObject ? item.$key : null;\n        value = convertedFromObject ? item.$value : item;\n        primitive = !isObject(value);\n        frag = !init && this.getCachedFrag(value, i, key);\n        if (frag) {\n          // reusable fragment\n          frag.reused = true;\n          // update $index\n          frag.scope.$index = i;\n          // update $key\n          if (key) {\n            frag.scope.$key = key;\n          }\n          // update iterator\n          if (iterator) {\n            frag.scope[iterator] = key !== null ? key : i;\n          }\n          // update data for track-by, object repeat &\n          // primitive values.\n          if (trackByKey || convertedFromObject || primitive) {\n            withoutConversion(function () {\n              frag.scope[alias] = value;\n            });\n          }\n        } else {\n          // new isntance\n          frag = this.create(value, alias, i, key);\n          frag.fresh = !init;\n        }\n        frags[i] = frag;\n        if (init) {\n          frag.before(end);\n        }\n      }\n\n      // we're done for the initial render.\n      if (init) {\n        return;\n      }\n\n      // Second pass, go through the old fragments and\n      // destroy those who are not reused (and remove them\n      // from cache)\n      var removalIndex = 0;\n      var totalRemoved = oldFrags.length - frags.length;\n      // when removing a large number of fragments, watcher removal\n      // turns out to be a perf bottleneck, so we batch the watcher\n      // removals into a single filter call!\n      this.vm._vForRemoving = true;\n      for (i = 0, l = oldFrags.length; i < l; i++) {\n        frag = oldFrags[i];\n        if (!frag.reused) {\n          this.deleteCachedFrag(frag);\n          this.remove(frag, removalIndex++, totalRemoved, inDocument);\n        }\n      }\n      this.vm._vForRemoving = false;\n      if (removalIndex) {\n        this.vm._watchers = this.vm._watchers.filter(function (w) {\n          return w.active;\n        });\n      }\n\n      // Final pass, move/insert new fragments into the\n      // right place.\n      var targetPrev, prevEl, currentPrev;\n      var insertionIndex = 0;\n      for (i = 0, l = frags.length; i < l; i++) {\n        frag = frags[i];\n        // this is the frag that we should be after\n        targetPrev = frags[i - 1];\n        prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n        if (frag.reused && !frag.staggerCb) {\n          currentPrev = findPrevFrag(frag, start, this.id);\n          if (currentPrev !== targetPrev && (!currentPrev ||\n          // optimization for moving a single item.\n          // thanks to suggestions by @livoras in #1807\n          findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n            this.move(frag, prevEl);\n          }\n        } else {\n          // new instance, or still in stagger.\n          // insert with updated stagger index.\n          this.insert(frag, insertionIndex++, prevEl, inDocument);\n        }\n        frag.reused = frag.fresh = false;\n      }\n    },\n\n    /**\n     * Create a new fragment instance.\n     *\n     * @param {*} value\n     * @param {String} alias\n     * @param {Number} index\n     * @param {String} [key]\n     * @return {Fragment}\n     */\n\n    create: function create(value, alias, index, key) {\n      var host = this._host;\n      // create iteration scope\n      var parentScope = this._scope || this.vm;\n      var scope = Object.create(parentScope);\n      // ref holder for the scope\n      scope.$refs = Object.create(parentScope.$refs);\n      scope.$els = Object.create(parentScope.$els);\n      // make sure point $parent to parent scope\n      scope.$parent = parentScope;\n      // for two-way binding on alias\n      scope.$forContext = this;\n      // define scope properties\n      // important: define the scope alias without forced conversion\n      // so that frozen data structures remain non-reactive.\n      withoutConversion(function () {\n        defineReactive(scope, alias, value);\n      });\n      defineReactive(scope, '$index', index);\n      if (key) {\n        defineReactive(scope, '$key', key);\n      } else if (scope.$key) {\n        // avoid accidental fallback\n        def(scope, '$key', null);\n      }\n      if (this.iterator) {\n        defineReactive(scope, this.iterator, key !== null ? key : index);\n      }\n      var frag = this.factory.create(host, scope, this._frag);\n      frag.forId = this.id;\n      this.cacheFrag(value, frag, index, key);\n      return frag;\n    },\n\n    /**\n     * Update the v-ref on owner vm.\n     */\n\n    updateRef: function updateRef() {\n      var ref = this.descriptor.ref;\n      if (!ref) return;\n      var hash = (this._scope || this.vm).$refs;\n      var refs;\n      if (!this.fromObject) {\n        refs = this.frags.map(findVmFromFrag);\n      } else {\n        refs = {};\n        this.frags.forEach(function (frag) {\n          refs[frag.scope.$key] = findVmFromFrag(frag);\n        });\n      }\n      hash[ref] = refs;\n    },\n\n    /**\n     * For option lists, update the containing v-model on\n     * parent <select>.\n     */\n\n    updateModel: function updateModel() {\n      if (this.isOption) {\n        var parent = this.start.parentNode;\n        var model = parent && parent.__v_model;\n        if (model) {\n          model.forceUpdate();\n        }\n      }\n    },\n\n    /**\n     * Insert a fragment. Handles staggering.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Node} prevEl\n     * @param {Boolean} inDocument\n     */\n\n    insert: function insert(frag, index, prevEl, inDocument) {\n      if (frag.staggerCb) {\n        frag.staggerCb.cancel();\n        frag.staggerCb = null;\n      }\n      var staggerAmount = this.getStagger(frag, index, null, 'enter');\n      if (inDocument && staggerAmount) {\n        // create an anchor and insert it synchronously,\n        // so that we can resolve the correct order without\n        // worrying about some elements not inserted yet\n        var anchor = frag.staggerAnchor;\n        if (!anchor) {\n          anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n          anchor.__v_frag = frag;\n        }\n        after(anchor, prevEl);\n        var op = frag.staggerCb = cancellable(function () {\n          frag.staggerCb = null;\n          frag.before(anchor);\n          remove(anchor);\n        });\n        setTimeout(op, staggerAmount);\n      } else {\n        var target = prevEl.nextSibling;\n        /* istanbul ignore if */\n        if (!target) {\n          // reset end anchor position in case the position was messed up\n          // by an external drag-n-drop library.\n          after(this.end, prevEl);\n          target = this.end;\n        }\n        frag.before(target);\n      }\n    },\n\n    /**\n     * Remove a fragment. Handles staggering.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Number} total\n     * @param {Boolean} inDocument\n     */\n\n    remove: function remove(frag, index, total, inDocument) {\n      if (frag.staggerCb) {\n        frag.staggerCb.cancel();\n        frag.staggerCb = null;\n        // it's not possible for the same frag to be removed\n        // twice, so if we have a pending stagger callback,\n        // it means this frag is queued for enter but removed\n        // before its transition started. Since it is already\n        // destroyed, we can just leave it in detached state.\n        return;\n      }\n      var staggerAmount = this.getStagger(frag, index, total, 'leave');\n      if (inDocument && staggerAmount) {\n        var op = frag.staggerCb = cancellable(function () {\n          frag.staggerCb = null;\n          frag.remove();\n        });\n        setTimeout(op, staggerAmount);\n      } else {\n        frag.remove();\n      }\n    },\n\n    /**\n     * Move a fragment to a new position.\n     * Force no transition.\n     *\n     * @param {Fragment} frag\n     * @param {Node} prevEl\n     */\n\n    move: function move(frag, prevEl) {\n      // fix a common issue with Sortable:\n      // if prevEl doesn't have nextSibling, this means it's\n      // been dragged after the end anchor. Just re-position\n      // the end anchor to the end of the container.\n      /* istanbul ignore if */\n      if (!prevEl.nextSibling) {\n        this.end.parentNode.appendChild(this.end);\n      }\n      frag.before(prevEl.nextSibling, false);\n    },\n\n    /**\n     * Cache a fragment using track-by or the object key.\n     *\n     * @param {*} value\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {String} [key]\n     */\n\n    cacheFrag: function cacheFrag(value, frag, index, key) {\n      var trackByKey = this.params.trackBy;\n      var cache = this.cache;\n      var primitive = !isObject(value);\n      var id;\n      if (key || trackByKey || primitive) {\n        id = getTrackByKey(index, key, value, trackByKey);\n        if (!cache[id]) {\n          cache[id] = frag;\n        } else if (trackByKey !== '$index') {\n          'development' !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        id = this.id;\n        if (hasOwn(value, id)) {\n          if (value[id] === null) {\n            value[id] = frag;\n          } else {\n            'development' !== 'production' && this.warnDuplicate(value);\n          }\n        } else if (Object.isExtensible(value)) {\n          def(value, id, frag);\n        } else if ('development' !== 'production') {\n          warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n        }\n      }\n      frag.raw = value;\n    },\n\n    /**\n     * Get a cached fragment from the value/index/key\n     *\n     * @param {*} value\n     * @param {Number} index\n     * @param {String} key\n     * @return {Fragment}\n     */\n\n    getCachedFrag: function getCachedFrag(value, index, key) {\n      var trackByKey = this.params.trackBy;\n      var primitive = !isObject(value);\n      var frag;\n      if (key || trackByKey || primitive) {\n        var id = getTrackByKey(index, key, value, trackByKey);\n        frag = this.cache[id];\n      } else {\n        frag = value[this.id];\n      }\n      if (frag && (frag.reused || frag.fresh)) {\n        'development' !== 'production' && this.warnDuplicate(value);\n      }\n      return frag;\n    },\n\n    /**\n     * Delete a fragment from cache.\n     *\n     * @param {Fragment} frag\n     */\n\n    deleteCachedFrag: function deleteCachedFrag(frag) {\n      var value = frag.raw;\n      var trackByKey = this.params.trackBy;\n      var scope = frag.scope;\n      var index = scope.$index;\n      // fix #948: avoid accidentally fall through to\n      // a parent repeater which happens to have $key.\n      var key = hasOwn(scope, '$key') && scope.$key;\n      var primitive = !isObject(value);\n      if (trackByKey || key || primitive) {\n        var id = getTrackByKey(index, key, value, trackByKey);\n        this.cache[id] = null;\n      } else {\n        value[this.id] = null;\n        frag.raw = null;\n      }\n    },\n\n    /**\n     * Get the stagger amount for an insertion/removal.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Number} total\n     * @param {String} type\n     */\n\n    getStagger: function getStagger(frag, index, total, type) {\n      type = type + 'Stagger';\n      var trans = frag.node.__v_trans;\n      var hooks = trans && trans.hooks;\n      var hook = hooks && (hooks[type] || hooks.stagger);\n      return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n    },\n\n    /**\n     * Pre-process the value before piping it through the\n     * filters. This is passed to and called by the watcher.\n     */\n\n    _preProcess: function _preProcess(value) {\n      // regardless of type, store the un-filtered raw value.\n      this.rawValue = value;\n      return value;\n    },\n\n    /**\n     * Post-process the value after it has been piped through\n     * the filters. This is passed to and called by the watcher.\n     *\n     * It is necessary for this to be called during the\n     * watcher's dependency collection phase because we want\n     * the v-for to update when the source Object is mutated.\n     */\n\n    _postProcess: function _postProcess(value) {\n      if (isArray(value)) {\n        return value;\n      } else if (isPlainObject(value)) {\n        // convert plain object to array.\n        var keys = Object.keys(value);\n        var i = keys.length;\n        var res = new Array(i);\n        var key;\n        while (i--) {\n          key = keys[i];\n          res[i] = {\n            $key: key,\n            $value: value[key]\n          };\n        }\n        return res;\n      } else {\n        if (typeof value === 'number' && !isNaN(value)) {\n          value = range(value);\n        }\n        return value || [];\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.descriptor.ref) {\n        (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n      }\n      if (this.frags) {\n        var i = this.frags.length;\n        var frag;\n        while (i--) {\n          frag = this.frags[i];\n          this.deleteCachedFrag(frag);\n          frag.destroy();\n        }\n      }\n    }\n  };\n\n  /**\n   * Helper to find the previous element that is a fragment\n   * anchor. This is necessary because a destroyed frag's\n   * element could still be lingering in the DOM before its\n   * leaving transition finishes, but its inserted flag\n   * should have been set to false so we can skip them.\n   *\n   * If this is a block repeat, we want to make sure we only\n   * return frag that is bound to this v-for. (see #929)\n   *\n   * @param {Fragment} frag\n   * @param {Comment|Text} anchor\n   * @param {String} id\n   * @return {Fragment}\n   */\n\n  function findPrevFrag(frag, anchor, id) {\n    var el = frag.node.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n    while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n      el = el.previousSibling;\n      /* istanbul ignore if */\n      if (!el) return;\n      frag = el.__v_frag;\n    }\n    return frag;\n  }\n\n  /**\n   * Find a vm from a fragment.\n   *\n   * @param {Fragment} frag\n   * @return {Vue|undefined}\n   */\n\n  function findVmFromFrag(frag) {\n    var node = frag.node;\n    // handle multi-node frag\n    if (frag.end) {\n      while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n        node = node.nextSibling;\n      }\n    }\n    return node.__vue__;\n  }\n\n  /**\n   * Create a range array from given number.\n   *\n   * @param {Number} n\n   * @return {Array}\n   */\n\n  function range(n) {\n    var i = -1;\n    var ret = new Array(Math.floor(n));\n    while (++i < n) {\n      ret[i] = i;\n    }\n    return ret;\n  }\n\n  /**\n   * Get the track by key for an item.\n   *\n   * @param {Number} index\n   * @param {String} key\n   * @param {*} value\n   * @param {String} [trackByKey]\n   */\n\n  function getTrackByKey(index, key, value, trackByKey) {\n    return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n  }\n\n  if ('development' !== 'production') {\n    vFor.warnDuplicate = function (value) {\n      warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n    };\n  }\n\n  var vIf = {\n\n    priority: IF,\n    terminal: true,\n\n    bind: function bind() {\n      var el = this.el;\n      if (!el.__vue__) {\n        // check else block\n        var next = el.nextElementSibling;\n        if (next && getAttr(next, 'v-else') !== null) {\n          remove(next);\n          this.elseEl = next;\n        }\n        // check main block\n        this.anchor = createAnchor('v-if');\n        replace(el, this.anchor);\n      } else {\n        'development' !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n        this.invalid = true;\n      }\n    },\n\n    update: function update(value) {\n      if (this.invalid) return;\n      if (value) {\n        if (!this.frag) {\n          this.insert();\n        }\n      } else {\n        this.remove();\n      }\n    },\n\n    insert: function insert() {\n      if (this.elseFrag) {\n        this.elseFrag.remove();\n        this.elseFrag = null;\n      }\n      // lazy init factory\n      if (!this.factory) {\n        this.factory = new FragmentFactory(this.vm, this.el);\n      }\n      this.frag = this.factory.create(this._host, this._scope, this._frag);\n      this.frag.before(this.anchor);\n    },\n\n    remove: function remove() {\n      if (this.frag) {\n        this.frag.remove();\n        this.frag = null;\n      }\n      if (this.elseEl && !this.elseFrag) {\n        if (!this.elseFactory) {\n          this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n        }\n        this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n        this.elseFrag.before(this.anchor);\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.frag) {\n        this.frag.destroy();\n      }\n      if (this.elseFrag) {\n        this.elseFrag.destroy();\n      }\n    }\n  };\n\n  var show = {\n\n    bind: function bind() {\n      // check else block\n      var next = this.el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        this.elseEl = next;\n      }\n    },\n\n    update: function update(value) {\n      this.apply(this.el, value);\n      if (this.elseEl) {\n        this.apply(this.elseEl, !value);\n      }\n    },\n\n    apply: function apply(el, value) {\n      if (inDoc(el)) {\n        applyTransition(el, value ? 1 : -1, toggle, this.vm);\n      } else {\n        toggle();\n      }\n      function toggle() {\n        el.style.display = value ? '' : 'none';\n      }\n    }\n  };\n\n  var text$2 = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n      var isRange = el.type === 'range';\n      var lazy = this.params.lazy;\n      var number = this.params.number;\n      var debounce = this.params.debounce;\n\n      // handle composition events.\n      //   http://blog.evanyou.me/2014/01/03/composition-event/\n      // skip this for Android because it handles composition\n      // events quite differently. Android doesn't trigger\n      // composition events for language input methods e.g.\n      // Chinese, but instead triggers them for spelling\n      // suggestions... (see Discussion/#162)\n      var composing = false;\n      if (!isAndroid && !isRange) {\n        this.on('compositionstart', function () {\n          composing = true;\n        });\n        this.on('compositionend', function () {\n          composing = false;\n          // in IE11 the \"compositionend\" event fires AFTER\n          // the \"input\" event, so the input handler is blocked\n          // at the end... have to call it here.\n          //\n          // #1327: in lazy mode this is unecessary.\n          if (!lazy) {\n            self.listener();\n          }\n        });\n      }\n\n      // prevent messing with the input when user is typing,\n      // and force update on blur.\n      this.focused = false;\n      if (!isRange && !lazy) {\n        this.on('focus', function () {\n          self.focused = true;\n        });\n        this.on('blur', function () {\n          self.focused = false;\n          // do not sync value after fragment removal (#2017)\n          if (!self._frag || self._frag.inserted) {\n            self.rawListener();\n          }\n        });\n      }\n\n      // Now attach the main listener\n      this.listener = this.rawListener = function () {\n        if (composing || !self._bound) {\n          return;\n        }\n        var val = number || isRange ? toNumber(el.value) : el.value;\n        self.set(val);\n        // force update on next tick to avoid lock & same value\n        // also only update when user is not typing\n        nextTick(function () {\n          if (self._bound && !self.focused) {\n            self.update(self._watcher.value);\n          }\n        });\n      };\n\n      // apply debounce\n      if (debounce) {\n        this.listener = _debounce(this.listener, debounce);\n      }\n\n      // Support jQuery events, since jQuery.trigger() doesn't\n      // trigger native events in some cases and some plugins\n      // rely on $.trigger()\n      //\n      // We want to make sure if a listener is attached using\n      // jQuery, it is also removed with jQuery, that's why\n      // we do the check for each directive instance and\n      // store that check result on itself. This also allows\n      // easier test coverage control by unsetting the global\n      // jQuery variable in tests.\n      this.hasjQuery = typeof jQuery === 'function';\n      if (this.hasjQuery) {\n        var method = jQuery.fn.on ? 'on' : 'bind';\n        jQuery(el)[method]('change', this.rawListener);\n        if (!lazy) {\n          jQuery(el)[method]('input', this.listener);\n        }\n      } else {\n        this.on('change', this.rawListener);\n        if (!lazy) {\n          this.on('input', this.listener);\n        }\n      }\n\n      // IE9 doesn't fire input event on backspace/del/cut\n      if (!lazy && isIE9) {\n        this.on('cut', function () {\n          nextTick(self.listener);\n        });\n        this.on('keyup', function (e) {\n          if (e.keyCode === 46 || e.keyCode === 8) {\n            self.listener();\n          }\n        });\n      }\n\n      // set initial value if present\n      if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      // #3029 only update when the value changes. This prevent\n      // browsers from overwriting values like selectionStart\n      value = _toString(value);\n      if (value !== this.el.value) this.el.value = value;\n    },\n\n    unbind: function unbind() {\n      var el = this.el;\n      if (this.hasjQuery) {\n        var method = jQuery.fn.off ? 'off' : 'unbind';\n        jQuery(el)[method]('change', this.listener);\n        jQuery(el)[method]('input', this.listener);\n      }\n    }\n  };\n\n  var radio = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n\n      this.getValue = function () {\n        // value overwrite via v-bind:value\n        if (el.hasOwnProperty('_value')) {\n          return el._value;\n        }\n        var val = el.value;\n        if (self.params.number) {\n          val = toNumber(val);\n        }\n        return val;\n      };\n\n      this.listener = function () {\n        self.set(self.getValue());\n      };\n      this.on('change', this.listener);\n\n      if (el.hasAttribute('checked')) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      this.el.checked = looseEqual(value, this.getValue());\n    }\n  };\n\n  var select = {\n\n    bind: function bind() {\n      var _this = this;\n\n      var self = this;\n      var el = this.el;\n\n      // method to force update DOM using latest value.\n      this.forceUpdate = function () {\n        if (self._watcher) {\n          self.update(self._watcher.get());\n        }\n      };\n\n      // check if this is a multiple select\n      var multiple = this.multiple = el.hasAttribute('multiple');\n\n      // attach listener\n      this.listener = function () {\n        var value = getValue(el, multiple);\n        value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n        self.set(value);\n      };\n      this.on('change', this.listener);\n\n      // if has initial value, set afterBind\n      var initValue = getValue(el, multiple, true);\n      if (multiple && initValue.length || !multiple && initValue !== null) {\n        this.afterBind = this.listener;\n      }\n\n      // All major browsers except Firefox resets\n      // selectedIndex with value -1 to 0 when the element\n      // is appended to a new parent, therefore we have to\n      // force a DOM update whenever that happens...\n      this.vm.$on('hook:attached', function () {\n        nextTick(_this.forceUpdate);\n      });\n    },\n\n    update: function update(value) {\n      var el = this.el;\n      if (!inDoc(el)) {\n        return nextTick(this.forceUpdate);\n      }\n      el.selectedIndex = -1;\n      var multi = this.multiple && isArray(value);\n      var options = el.options;\n      var i = options.length;\n      var op, val;\n      while (i--) {\n        op = options[i];\n        val = op.hasOwnProperty('_value') ? op._value : op.value;\n        /* eslint-disable eqeqeq */\n        op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n        /* eslint-enable eqeqeq */\n      }\n    },\n\n    unbind: function unbind() {\n      /* istanbul ignore next */\n      this.vm.$off('hook:attached', this.forceUpdate);\n    }\n  };\n\n  /**\n   * Get select value\n   *\n   * @param {SelectElement} el\n   * @param {Boolean} multi\n   * @param {Boolean} init\n   * @return {Array|*}\n   */\n\n  function getValue(el, multi, init) {\n    var res = multi ? [] : null;\n    var op, val, selected;\n    for (var i = 0, l = el.options.length; i < l; i++) {\n      op = el.options[i];\n      selected = init ? op.hasAttribute('selected') : op.selected;\n      if (selected) {\n        val = op.hasOwnProperty('_value') ? op._value : op.value;\n        if (multi) {\n          res.push(val);\n        } else {\n          return val;\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Native Array.indexOf uses strict equal, but in this\n   * case we need to match string/numbers with custom equal.\n   *\n   * @param {Array} arr\n   * @param {*} val\n   */\n\n  function indexOf$1(arr, val) {\n    var i = arr.length;\n    while (i--) {\n      if (looseEqual(arr[i], val)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  var checkbox = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n\n      this.getValue = function () {\n        return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n      };\n\n      function getBooleanValue() {\n        var val = el.checked;\n        if (val && el.hasOwnProperty('_trueValue')) {\n          return el._trueValue;\n        }\n        if (!val && el.hasOwnProperty('_falseValue')) {\n          return el._falseValue;\n        }\n        return val;\n      }\n\n      this.listener = function () {\n        var model = self._watcher.value;\n        if (isArray(model)) {\n          var val = self.getValue();\n          if (el.checked) {\n            if (indexOf(model, val) < 0) {\n              model.push(val);\n            }\n          } else {\n            model.$remove(val);\n          }\n        } else {\n          self.set(getBooleanValue());\n        }\n      };\n\n      this.on('change', this.listener);\n      if (el.hasAttribute('checked')) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      var el = this.el;\n      if (isArray(value)) {\n        el.checked = indexOf(value, this.getValue()) > -1;\n      } else {\n        if (el.hasOwnProperty('_trueValue')) {\n          el.checked = looseEqual(value, el._trueValue);\n        } else {\n          el.checked = !!value;\n        }\n      }\n    }\n  };\n\n  var handlers = {\n    text: text$2,\n    radio: radio,\n    select: select,\n    checkbox: checkbox\n  };\n\n  var model = {\n\n    priority: MODEL,\n    twoWay: true,\n    handlers: handlers,\n    params: ['lazy', 'number', 'debounce'],\n\n    /**\n     * Possible elements:\n     *   <select>\n     *   <textarea>\n     *   <input type=\"*\">\n     *     - text\n     *     - checkbox\n     *     - radio\n     *     - number\n     */\n\n    bind: function bind() {\n      // friendly warning...\n      this.checkFilters();\n      if (this.hasRead && !this.hasWrite) {\n        'development' !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n      }\n      var el = this.el;\n      var tag = el.tagName;\n      var handler;\n      if (tag === 'INPUT') {\n        handler = handlers[el.type] || handlers.text;\n      } else if (tag === 'SELECT') {\n        handler = handlers.select;\n      } else if (tag === 'TEXTAREA') {\n        handler = handlers.text;\n      } else {\n        'development' !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n        return;\n      }\n      el.__v_model = this;\n      handler.bind.call(this);\n      this.update = handler.update;\n      this._unbind = handler.unbind;\n    },\n\n    /**\n     * Check read/write filter stats.\n     */\n\n    checkFilters: function checkFilters() {\n      var filters = this.filters;\n      if (!filters) return;\n      var i = filters.length;\n      while (i--) {\n        var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n        if (typeof filter === 'function' || filter.read) {\n          this.hasRead = true;\n        }\n        if (filter.write) {\n          this.hasWrite = true;\n        }\n      }\n    },\n\n    unbind: function unbind() {\n      this.el.__v_model = null;\n      this._unbind && this._unbind();\n    }\n  };\n\n  // keyCode aliases\n  var keyCodes = {\n    esc: 27,\n    tab: 9,\n    enter: 13,\n    space: 32,\n    'delete': [8, 46],\n    up: 38,\n    left: 37,\n    right: 39,\n    down: 40\n  };\n\n  function keyFilter(handler, keys) {\n    var codes = keys.map(function (key) {\n      var charCode = key.charCodeAt(0);\n      if (charCode > 47 && charCode < 58) {\n        return parseInt(key, 10);\n      }\n      if (key.length === 1) {\n        charCode = key.toUpperCase().charCodeAt(0);\n        if (charCode > 64 && charCode < 91) {\n          return charCode;\n        }\n      }\n      return keyCodes[key];\n    });\n    codes = [].concat.apply([], codes);\n    return function keyHandler(e) {\n      if (codes.indexOf(e.keyCode) > -1) {\n        return handler.call(this, e);\n      }\n    };\n  }\n\n  function stopFilter(handler) {\n    return function stopHandler(e) {\n      e.stopPropagation();\n      return handler.call(this, e);\n    };\n  }\n\n  function preventFilter(handler) {\n    return function preventHandler(e) {\n      e.preventDefault();\n      return handler.call(this, e);\n    };\n  }\n\n  function selfFilter(handler) {\n    return function selfHandler(e) {\n      if (e.target === e.currentTarget) {\n        return handler.call(this, e);\n      }\n    };\n  }\n\n  var on$1 = {\n\n    priority: ON,\n    acceptStatement: true,\n    keyCodes: keyCodes,\n\n    bind: function bind() {\n      // deal with iframes\n      if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n        var self = this;\n        this.iframeBind = function () {\n          on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n        };\n        this.on('load', this.iframeBind);\n      }\n    },\n\n    update: function update(handler) {\n      // stub a noop for v-on with no value,\n      // e.g. @mousedown.prevent\n      if (!this.descriptor.raw) {\n        handler = function () {};\n      }\n\n      if (typeof handler !== 'function') {\n        'development' !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n        return;\n      }\n\n      // apply modifiers\n      if (this.modifiers.stop) {\n        handler = stopFilter(handler);\n      }\n      if (this.modifiers.prevent) {\n        handler = preventFilter(handler);\n      }\n      if (this.modifiers.self) {\n        handler = selfFilter(handler);\n      }\n      // key filter\n      var keys = Object.keys(this.modifiers).filter(function (key) {\n        return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n      });\n      if (keys.length) {\n        handler = keyFilter(handler, keys);\n      }\n\n      this.reset();\n      this.handler = handler;\n\n      if (this.iframeBind) {\n        this.iframeBind();\n      } else {\n        on(this.el, this.arg, this.handler, this.modifiers.capture);\n      }\n    },\n\n    reset: function reset() {\n      var el = this.iframeBind ? this.el.contentWindow : this.el;\n      if (this.handler) {\n        off(el, this.arg, this.handler);\n      }\n    },\n\n    unbind: function unbind() {\n      this.reset();\n    }\n  };\n\n  var prefixes = ['-webkit-', '-moz-', '-ms-'];\n  var camelPrefixes = ['Webkit', 'Moz', 'ms'];\n  var importantRE = /!important;?$/;\n  var propCache = Object.create(null);\n\n  var testEl = null;\n\n  var style = {\n\n    deep: true,\n\n    update: function update(value) {\n      if (typeof value === 'string') {\n        this.el.style.cssText = value;\n      } else if (isArray(value)) {\n        this.handleObject(value.reduce(extend, {}));\n      } else {\n        this.handleObject(value || {});\n      }\n    },\n\n    handleObject: function handleObject(value) {\n      // cache object styles so that only changed props\n      // are actually updated.\n      var cache = this.cache || (this.cache = {});\n      var name, val;\n      for (name in cache) {\n        if (!(name in value)) {\n          this.handleSingle(name, null);\n          delete cache[name];\n        }\n      }\n      for (name in value) {\n        val = value[name];\n        if (val !== cache[name]) {\n          cache[name] = val;\n          this.handleSingle(name, val);\n        }\n      }\n    },\n\n    handleSingle: function handleSingle(prop, value) {\n      prop = normalize(prop);\n      if (!prop) return; // unsupported prop\n      // cast possible numbers/booleans into strings\n      if (value != null) value += '';\n      if (value) {\n        var isImportant = importantRE.test(value) ? 'important' : '';\n        if (isImportant) {\n          /* istanbul ignore if */\n          if ('development' !== 'production') {\n            warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n          }\n          value = value.replace(importantRE, '').trim();\n          this.el.style.setProperty(prop.kebab, value, isImportant);\n        } else {\n          this.el.style[prop.camel] = value;\n        }\n      } else {\n        this.el.style[prop.camel] = '';\n      }\n    }\n\n  };\n\n  /**\n   * Normalize a CSS property name.\n   * - cache result\n   * - auto prefix\n   * - camelCase -> dash-case\n   *\n   * @param {String} prop\n   * @return {String}\n   */\n\n  function normalize(prop) {\n    if (propCache[prop]) {\n      return propCache[prop];\n    }\n    var res = prefix(prop);\n    propCache[prop] = propCache[res] = res;\n    return res;\n  }\n\n  /**\n   * Auto detect the appropriate prefix for a CSS property.\n   * https://gist.github.com/paulirish/523692\n   *\n   * @param {String} prop\n   * @return {String}\n   */\n\n  function prefix(prop) {\n    prop = hyphenate(prop);\n    var camel = camelize(prop);\n    var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n    if (!testEl) {\n      testEl = document.createElement('div');\n    }\n    var i = prefixes.length;\n    var prefixed;\n    if (camel !== 'filter' && camel in testEl.style) {\n      return {\n        kebab: prop,\n        camel: camel\n      };\n    }\n    while (i--) {\n      prefixed = camelPrefixes[i] + upper;\n      if (prefixed in testEl.style) {\n        return {\n          kebab: prefixes[i] + prop,\n          camel: prefixed\n        };\n      }\n    }\n  }\n\n  // xlink\n  var xlinkNS = 'http://www.w3.org/1999/xlink';\n  var xlinkRE = /^xlink:/;\n\n  // check for attributes that prohibit interpolations\n  var disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n  // these attributes should also set their corresponding properties\n  // because they only affect the initial state of the element\n  var attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n  // these attributes expect enumrated values of \"true\" or \"false\"\n  // but are not boolean attributes\n  var enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n  // these attributes should set a hidden property for\n  // binding v-model to object values\n  var modelProps = {\n    value: '_value',\n    'true-value': '_trueValue',\n    'false-value': '_falseValue'\n  };\n\n  var bind$1 = {\n\n    priority: BIND,\n\n    bind: function bind() {\n      var attr = this.arg;\n      var tag = this.el.tagName;\n      // should be deep watch on object mode\n      if (!attr) {\n        this.deep = true;\n      }\n      // handle interpolation bindings\n      var descriptor = this.descriptor;\n      var tokens = descriptor.interp;\n      if (tokens) {\n        // handle interpolations with one-time tokens\n        if (descriptor.hasOneTime) {\n          this.expression = tokensToExp(tokens, this._scope || this.vm);\n        }\n\n        // only allow binding on native attributes\n        if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n          'development' !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n          this.el.removeAttribute(attr);\n          this.invalid = true;\n        }\n\n        /* istanbul ignore if */\n        if ('development' !== 'production') {\n          var raw = attr + '=\"' + descriptor.raw + '\": ';\n          // warn src\n          if (attr === 'src') {\n            warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n          }\n\n          // warn style\n          if (attr === 'style') {\n            warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n          }\n        }\n      }\n    },\n\n    update: function update(value) {\n      if (this.invalid) {\n        return;\n      }\n      var attr = this.arg;\n      if (this.arg) {\n        this.handleSingle(attr, value);\n      } else {\n        this.handleObject(value || {});\n      }\n    },\n\n    // share object handler with v-bind:class\n    handleObject: style.handleObject,\n\n    handleSingle: function handleSingle(attr, value) {\n      var el = this.el;\n      var interp = this.descriptor.interp;\n      if (this.modifiers.camel) {\n        attr = camelize(attr);\n      }\n      if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n        var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n        ? '' : value : value;\n\n        if (el[attr] !== attrValue) {\n          el[attr] = attrValue;\n        }\n      }\n      // set model props\n      var modelProp = modelProps[attr];\n      if (!interp && modelProp) {\n        el[modelProp] = value;\n        // update v-model if present\n        var model = el.__v_model;\n        if (model) {\n          model.listener();\n        }\n      }\n      // do not set value attribute for textarea\n      if (attr === 'value' && el.tagName === 'TEXTAREA') {\n        el.removeAttribute(attr);\n        return;\n      }\n      // update attribute\n      if (enumeratedAttrRE.test(attr)) {\n        el.setAttribute(attr, value ? 'true' : 'false');\n      } else if (value != null && value !== false) {\n        if (attr === 'class') {\n          // handle edge case #1960:\n          // class interpolation should not overwrite Vue transition class\n          if (el.__v_trans) {\n            value += ' ' + el.__v_trans.id + '-transition';\n          }\n          setClass(el, value);\n        } else if (xlinkRE.test(attr)) {\n          el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n        } else {\n          el.setAttribute(attr, value === true ? '' : value);\n        }\n      } else {\n        el.removeAttribute(attr);\n      }\n    }\n  };\n\n  var el = {\n\n    priority: EL,\n\n    bind: function bind() {\n      /* istanbul ignore if */\n      if (!this.arg) {\n        return;\n      }\n      var id = this.id = camelize(this.arg);\n      var refs = (this._scope || this.vm).$els;\n      if (hasOwn(refs, id)) {\n        refs[id] = this.el;\n      } else {\n        defineReactive(refs, id, this.el);\n      }\n    },\n\n    unbind: function unbind() {\n      var refs = (this._scope || this.vm).$els;\n      if (refs[this.id] === this.el) {\n        refs[this.id] = null;\n      }\n    }\n  };\n\n  var ref = {\n    bind: function bind() {\n      'development' !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n    }\n  };\n\n  var cloak = {\n    bind: function bind() {\n      var el = this.el;\n      this.vm.$once('pre-hook:compiled', function () {\n        el.removeAttribute('v-cloak');\n      });\n    }\n  };\n\n  // must export plain object\n  var directives = {\n    text: text$1,\n    html: html,\n    'for': vFor,\n    'if': vIf,\n    show: show,\n    model: model,\n    on: on$1,\n    bind: bind$1,\n    el: el,\n    ref: ref,\n    cloak: cloak\n  };\n\n  var vClass = {\n\n    deep: true,\n\n    update: function update(value) {\n      if (!value) {\n        this.cleanup();\n      } else if (typeof value === 'string') {\n        this.setClass(value.trim().split(/\\s+/));\n      } else {\n        this.setClass(normalize$1(value));\n      }\n    },\n\n    setClass: function setClass(value) {\n      this.cleanup(value);\n      for (var i = 0, l = value.length; i < l; i++) {\n        var val = value[i];\n        if (val) {\n          apply(this.el, val, addClass);\n        }\n      }\n      this.prevKeys = value;\n    },\n\n    cleanup: function cleanup(value) {\n      var prevKeys = this.prevKeys;\n      if (!prevKeys) return;\n      var i = prevKeys.length;\n      while (i--) {\n        var key = prevKeys[i];\n        if (!value || value.indexOf(key) < 0) {\n          apply(this.el, key, removeClass);\n        }\n      }\n    }\n  };\n\n  /**\n   * Normalize objects and arrays (potentially containing objects)\n   * into array of strings.\n   *\n   * @param {Object|Array<String|Object>} value\n   * @return {Array<String>}\n   */\n\n  function normalize$1(value) {\n    var res = [];\n    if (isArray(value)) {\n      for (var i = 0, l = value.length; i < l; i++) {\n        var _key = value[i];\n        if (_key) {\n          if (typeof _key === 'string') {\n            res.push(_key);\n          } else {\n            for (var k in _key) {\n              if (_key[k]) res.push(k);\n            }\n          }\n        }\n      }\n    } else if (isObject(value)) {\n      for (var key in value) {\n        if (value[key]) res.push(key);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Add or remove a class/classes on an element\n   *\n   * @param {Element} el\n   * @param {String} key The class name. This may or may not\n   *                     contain a space character, in such a\n   *                     case we'll deal with multiple class\n   *                     names at once.\n   * @param {Function} fn\n   */\n\n  function apply(el, key, fn) {\n    key = key.trim();\n    if (key.indexOf(' ') === -1) {\n      fn(el, key);\n      return;\n    }\n    // The key contains one or more space characters.\n    // Since a class name doesn't accept such characters, we\n    // treat it as multiple classes.\n    var keys = key.split(/\\s+/);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      fn(el, keys[i]);\n    }\n  }\n\n  var component = {\n\n    priority: COMPONENT,\n\n    params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n    /**\n     * Setup. Two possible usages:\n     *\n     * - static:\n     *   <comp> or <div v-component=\"comp\">\n     *\n     * - dynamic:\n     *   <component :is=\"view\">\n     */\n\n    bind: function bind() {\n      if (!this.el.__vue__) {\n        // keep-alive cache\n        this.keepAlive = this.params.keepAlive;\n        if (this.keepAlive) {\n          this.cache = {};\n        }\n        // check inline-template\n        if (this.params.inlineTemplate) {\n          // extract inline template as a DocumentFragment\n          this.inlineTemplate = extractContent(this.el, true);\n        }\n        // component resolution related state\n        this.pendingComponentCb = this.Component = null;\n        // transition related state\n        this.pendingRemovals = 0;\n        this.pendingRemovalCb = null;\n        // create a ref anchor\n        this.anchor = createAnchor('v-component');\n        replace(this.el, this.anchor);\n        // remove is attribute.\n        // this is removed during compilation, but because compilation is\n        // cached, when the component is used elsewhere this attribute\n        // will remain at link time.\n        this.el.removeAttribute('is');\n        this.el.removeAttribute(':is');\n        // remove ref, same as above\n        if (this.descriptor.ref) {\n          this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n        }\n        // if static, build right now.\n        if (this.literal) {\n          this.setComponent(this.expression);\n        }\n      } else {\n        'development' !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n      }\n    },\n\n    /**\n     * Public update, called by the watcher in the dynamic\n     * literal scenario, e.g. <component :is=\"view\">\n     */\n\n    update: function update(value) {\n      if (!this.literal) {\n        this.setComponent(value);\n      }\n    },\n\n    /**\n     * Switch dynamic components. May resolve the component\n     * asynchronously, and perform transition based on\n     * specified transition mode. Accepts a few additional\n     * arguments specifically for vue-router.\n     *\n     * The callback is called when the full transition is\n     * finished.\n     *\n     * @param {String} value\n     * @param {Function} [cb]\n     */\n\n    setComponent: function setComponent(value, cb) {\n      this.invalidatePending();\n      if (!value) {\n        // just remove current\n        this.unbuild(true);\n        this.remove(this.childVM, cb);\n        this.childVM = null;\n      } else {\n        var self = this;\n        this.resolveComponent(value, function () {\n          self.mountComponent(cb);\n        });\n      }\n    },\n\n    /**\n     * Resolve the component constructor to use when creating\n     * the child vm.\n     *\n     * @param {String|Function} value\n     * @param {Function} cb\n     */\n\n    resolveComponent: function resolveComponent(value, cb) {\n      var self = this;\n      this.pendingComponentCb = cancellable(function (Component) {\n        self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n        self.Component = Component;\n        cb();\n      });\n      this.vm._resolveComponent(value, this.pendingComponentCb);\n    },\n\n    /**\n     * Create a new instance using the current constructor and\n     * replace the existing instance. This method doesn't care\n     * whether the new component and the old one are actually\n     * the same.\n     *\n     * @param {Function} [cb]\n     */\n\n    mountComponent: function mountComponent(cb) {\n      // actual mount\n      this.unbuild(true);\n      var self = this;\n      var activateHooks = this.Component.options.activate;\n      var cached = this.getCached();\n      var newComponent = this.build();\n      if (activateHooks && !cached) {\n        this.waitingFor = newComponent;\n        callActivateHooks(activateHooks, newComponent, function () {\n          if (self.waitingFor !== newComponent) {\n            return;\n          }\n          self.waitingFor = null;\n          self.transition(newComponent, cb);\n        });\n      } else {\n        // update ref for kept-alive component\n        if (cached) {\n          newComponent._updateRef();\n        }\n        this.transition(newComponent, cb);\n      }\n    },\n\n    /**\n     * When the component changes or unbinds before an async\n     * constructor is resolved, we need to invalidate its\n     * pending callback.\n     */\n\n    invalidatePending: function invalidatePending() {\n      if (this.pendingComponentCb) {\n        this.pendingComponentCb.cancel();\n        this.pendingComponentCb = null;\n      }\n    },\n\n    /**\n     * Instantiate/insert a new child vm.\n     * If keep alive and has cached instance, insert that\n     * instance; otherwise build a new one and cache it.\n     *\n     * @param {Object} [extraOptions]\n     * @return {Vue} - the created instance\n     */\n\n    build: function build(extraOptions) {\n      var cached = this.getCached();\n      if (cached) {\n        return cached;\n      }\n      if (this.Component) {\n        // default options\n        var options = {\n          name: this.ComponentName,\n          el: cloneNode(this.el),\n          template: this.inlineTemplate,\n          // make sure to add the child with correct parent\n          // if this is a transcluded component, its parent\n          // should be the transclusion host.\n          parent: this._host || this.vm,\n          // if no inline-template, then the compiled\n          // linker can be cached for better performance.\n          _linkerCachable: !this.inlineTemplate,\n          _ref: this.descriptor.ref,\n          _asComponent: true,\n          _isRouterView: this._isRouterView,\n          // if this is a transcluded component, context\n          // will be the common parent vm of this instance\n          // and its host.\n          _context: this.vm,\n          // if this is inside an inline v-for, the scope\n          // will be the intermediate scope created for this\n          // repeat fragment. this is used for linking props\n          // and container directives.\n          _scope: this._scope,\n          // pass in the owner fragment of this component.\n          // this is necessary so that the fragment can keep\n          // track of its contained components in order to\n          // call attach/detach hooks for them.\n          _frag: this._frag\n        };\n        // extra options\n        // in 1.0.0 this is used by vue-router only\n        /* istanbul ignore if */\n        if (extraOptions) {\n          extend(options, extraOptions);\n        }\n        var child = new this.Component(options);\n        if (this.keepAlive) {\n          this.cache[this.Component.cid] = child;\n        }\n        /* istanbul ignore if */\n        if ('development' !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n          warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n        }\n        return child;\n      }\n    },\n\n    /**\n     * Try to get a cached instance of the current component.\n     *\n     * @return {Vue|undefined}\n     */\n\n    getCached: function getCached() {\n      return this.keepAlive && this.cache[this.Component.cid];\n    },\n\n    /**\n     * Teardown the current child, but defers cleanup so\n     * that we can separate the destroy and removal steps.\n     *\n     * @param {Boolean} defer\n     */\n\n    unbuild: function unbuild(defer) {\n      if (this.waitingFor) {\n        if (!this.keepAlive) {\n          this.waitingFor.$destroy();\n        }\n        this.waitingFor = null;\n      }\n      var child = this.childVM;\n      if (!child || this.keepAlive) {\n        if (child) {\n          // remove ref\n          child._inactive = true;\n          child._updateRef(true);\n        }\n        return;\n      }\n      // the sole purpose of `deferCleanup` is so that we can\n      // \"deactivate\" the vm right now and perform DOM removal\n      // later.\n      child.$destroy(false, defer);\n    },\n\n    /**\n     * Remove current destroyed child and manually do\n     * the cleanup after removal.\n     *\n     * @param {Function} cb\n     */\n\n    remove: function remove(child, cb) {\n      var keepAlive = this.keepAlive;\n      if (child) {\n        // we may have a component switch when a previous\n        // component is still being transitioned out.\n        // we want to trigger only one lastest insertion cb\n        // when the existing transition finishes. (#1119)\n        this.pendingRemovals++;\n        this.pendingRemovalCb = cb;\n        var self = this;\n        child.$remove(function () {\n          self.pendingRemovals--;\n          if (!keepAlive) child._cleanup();\n          if (!self.pendingRemovals && self.pendingRemovalCb) {\n            self.pendingRemovalCb();\n            self.pendingRemovalCb = null;\n          }\n        });\n      } else if (cb) {\n        cb();\n      }\n    },\n\n    /**\n     * Actually swap the components, depending on the\n     * transition mode. Defaults to simultaneous.\n     *\n     * @param {Vue} target\n     * @param {Function} [cb]\n     */\n\n    transition: function transition(target, cb) {\n      var self = this;\n      var current = this.childVM;\n      // for devtool inspection\n      if (current) current._inactive = true;\n      target._inactive = false;\n      this.childVM = target;\n      switch (self.params.transitionMode) {\n        case 'in-out':\n          target.$before(self.anchor, function () {\n            self.remove(current, cb);\n          });\n          break;\n        case 'out-in':\n          self.remove(current, function () {\n            target.$before(self.anchor, cb);\n          });\n          break;\n        default:\n          self.remove(current);\n          target.$before(self.anchor, cb);\n      }\n    },\n\n    /**\n     * Unbind.\n     */\n\n    unbind: function unbind() {\n      this.invalidatePending();\n      // Do not defer cleanup when unbinding\n      this.unbuild();\n      // destroy all keep-alive cached instances\n      if (this.cache) {\n        for (var key in this.cache) {\n          this.cache[key].$destroy();\n        }\n        this.cache = null;\n      }\n    }\n  };\n\n  /**\n   * Call activate hooks in order (asynchronous)\n   *\n   * @param {Array} hooks\n   * @param {Vue} vm\n   * @param {Function} cb\n   */\n\n  function callActivateHooks(hooks, vm, cb) {\n    var total = hooks.length;\n    var called = 0;\n    hooks[0].call(vm, next);\n    function next() {\n      if (++called >= total) {\n        cb();\n      } else {\n        hooks[called].call(vm, next);\n      }\n    }\n  }\n\n  var propBindingModes = config._propBindingModes;\n  var empty = {};\n\n  // regexes\n  var identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n  var settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n  /**\n   * Compile props on a root element and return\n   * a props link function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Array} propOptions\n   * @param {Vue} vm\n   * @return {Function} propsLinkFn\n   */\n\n  function compileProps(el, propOptions, vm) {\n    var props = [];\n    var names = Object.keys(propOptions);\n    var i = names.length;\n    var options, name, attr, value, path, parsed, prop;\n    while (i--) {\n      name = names[i];\n      options = propOptions[name] || empty;\n\n      if ('development' !== 'production' && name === '$data') {\n        warn('Do not use $data as prop.', vm);\n        continue;\n      }\n\n      // props could contain dashes, which will be\n      // interpreted as minus calculations by the parser\n      // so we need to camelize the path here\n      path = camelize(name);\n      if (!identRE$1.test(path)) {\n        'development' !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n        continue;\n      }\n\n      prop = {\n        name: name,\n        path: path,\n        options: options,\n        mode: propBindingModes.ONE_WAY,\n        raw: null\n      };\n\n      attr = hyphenate(name);\n      // first check dynamic version\n      if ((value = getBindAttr(el, attr)) === null) {\n        if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n          prop.mode = propBindingModes.TWO_WAY;\n        } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n          prop.mode = propBindingModes.ONE_TIME;\n        }\n      }\n      if (value !== null) {\n        // has dynamic binding!\n        prop.raw = value;\n        parsed = parseDirective(value);\n        value = parsed.expression;\n        prop.filters = parsed.filters;\n        // check binding type\n        if (isLiteral(value) && !parsed.filters) {\n          // for expressions containing literal numbers and\n          // booleans, there's no need to setup a prop binding,\n          // so we can optimize them as a one-time set.\n          prop.optimizedLiteral = true;\n        } else {\n          prop.dynamic = true;\n          // check non-settable path for two-way bindings\n          if ('development' !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n            prop.mode = propBindingModes.ONE_WAY;\n            warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n          }\n        }\n        prop.parentPath = value;\n\n        // warn required two-way\n        if ('development' !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n          warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n        }\n      } else if ((value = getAttr(el, attr)) !== null) {\n        // has literal binding!\n        prop.raw = value;\n      } else if ('development' !== 'production') {\n        // check possible camelCase prop usage\n        var lowerCaseName = path.toLowerCase();\n        value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n        if (value) {\n          warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n        } else if (options.required) {\n          // warn missing required\n          warn('Missing required prop: ' + name, vm);\n        }\n      }\n      // push prop\n      props.push(prop);\n    }\n    return makePropsLinkFn(props);\n  }\n\n  /**\n   * Build a function that applies props to a vm.\n   *\n   * @param {Array} props\n   * @return {Function} propsLinkFn\n   */\n\n  function makePropsLinkFn(props) {\n    return function propsLinkFn(vm, scope) {\n      // store resolved props info\n      vm._props = {};\n      var inlineProps = vm.$options.propsData;\n      var i = props.length;\n      var prop, path, options, value, raw;\n      while (i--) {\n        prop = props[i];\n        raw = prop.raw;\n        path = prop.path;\n        options = prop.options;\n        vm._props[path] = prop;\n        if (inlineProps && hasOwn(inlineProps, path)) {\n          initProp(vm, prop, inlineProps[path]);\n        }if (raw === null) {\n          // initialize absent prop\n          initProp(vm, prop, undefined);\n        } else if (prop.dynamic) {\n          // dynamic prop\n          if (prop.mode === propBindingModes.ONE_TIME) {\n            // one time binding\n            value = (scope || vm._context || vm).$get(prop.parentPath);\n            initProp(vm, prop, value);\n          } else {\n            if (vm._context) {\n              // dynamic binding\n              vm._bindDir({\n                name: 'prop',\n                def: propDef,\n                prop: prop\n              }, null, null, scope); // el, host, scope\n            } else {\n                // root instance\n                initProp(vm, prop, vm.$get(prop.parentPath));\n              }\n          }\n        } else if (prop.optimizedLiteral) {\n          // optimized literal, cast it and just set once\n          var stripped = stripQuotes(raw);\n          value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n          initProp(vm, prop, value);\n        } else {\n          // string literal, but we need to cater for\n          // Boolean props with no value, or with same\n          // literal value (e.g. disabled=\"disabled\")\n          // see https://github.com/vuejs/vue-loader/issues/182\n          value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n          initProp(vm, prop, value);\n        }\n      }\n    };\n  }\n\n  /**\n   * Process a prop with a rawValue, applying necessary coersions,\n   * default values & assertions and call the given callback with\n   * processed value.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} rawValue\n   * @param {Function} fn\n   */\n\n  function processPropValue(vm, prop, rawValue, fn) {\n    var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n    var value = rawValue;\n    if (value === undefined) {\n      value = getPropDefaultValue(vm, prop);\n    }\n    value = coerceProp(prop, value, vm);\n    var coerced = value !== rawValue;\n    if (!assertProp(prop, value, vm)) {\n      value = undefined;\n    }\n    if (isSimple && !coerced) {\n      withoutConversion(function () {\n        fn(value);\n      });\n    } else {\n      fn(value);\n    }\n  }\n\n  /**\n   * Set a prop's initial value on a vm and its data object.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} value\n   */\n\n  function initProp(vm, prop, value) {\n    processPropValue(vm, prop, value, function (value) {\n      defineReactive(vm, prop.path, value);\n    });\n  }\n\n  /**\n   * Update a prop's value on a vm.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} value\n   */\n\n  function updateProp(vm, prop, value) {\n    processPropValue(vm, prop, value, function (value) {\n      vm[prop.path] = value;\n    });\n  }\n\n  /**\n   * Get the default value of a prop.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @return {*}\n   */\n\n  function getPropDefaultValue(vm, prop) {\n    // no default, return undefined\n    var options = prop.options;\n    if (!hasOwn(options, 'default')) {\n      // absent boolean value defaults to false\n      return options.type === Boolean ? false : undefined;\n    }\n    var def = options['default'];\n    // warn against non-factory defaults for Object & Array\n    if (isObject(def)) {\n      'development' !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n    }\n    // call factory function for non-Function types\n    return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n  }\n\n  /**\n   * Assert whether a prop is valid.\n   *\n   * @param {Object} prop\n   * @param {*} value\n   * @param {Vue} vm\n   */\n\n  function assertProp(prop, value, vm) {\n    if (!prop.options.required && ( // non-required\n    prop.raw === null || // abscent\n    value == null) // null or undefined\n    ) {\n        return true;\n      }\n    var options = prop.options;\n    var type = options.type;\n    var valid = !type;\n    var expectedTypes = [];\n    if (type) {\n      if (!isArray(type)) {\n        type = [type];\n      }\n      for (var i = 0; i < type.length && !valid; i++) {\n        var assertedType = assertType(value, type[i]);\n        expectedTypes.push(assertedType.expectedType);\n        valid = assertedType.valid;\n      }\n    }\n    if (!valid) {\n      if ('development' !== 'production') {\n        warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n      }\n      return false;\n    }\n    var validator = options.validator;\n    if (validator) {\n      if (!validator(value)) {\n        'development' !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Force parsing value with coerce option.\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @return {*}\n   */\n\n  function coerceProp(prop, value, vm) {\n    var coerce = prop.options.coerce;\n    if (!coerce) {\n      return value;\n    }\n    if (typeof coerce === 'function') {\n      return coerce(value);\n    } else {\n      'development' !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n      return value;\n    }\n  }\n\n  /**\n   * Assert the type of a value\n   *\n   * @param {*} value\n   * @param {Function} type\n   * @return {Object}\n   */\n\n  function assertType(value, type) {\n    var valid;\n    var expectedType;\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === expectedType;\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === expectedType;\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === expectedType;\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n    return {\n      valid: valid,\n      expectedType: expectedType\n    };\n  }\n\n  /**\n   * Format type for output\n   *\n   * @param {String} type\n   * @return {String}\n   */\n\n  function formatType(type) {\n    return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n  }\n\n  /**\n   * Format value\n   *\n   * @param {*} value\n   * @return {String}\n   */\n\n  function formatValue(val) {\n    return Object.prototype.toString.call(val).slice(8, -1);\n  }\n\n  var bindingModes = config._propBindingModes;\n\n  var propDef = {\n\n    bind: function bind() {\n      var child = this.vm;\n      var parent = child._context;\n      // passed in from compiler directly\n      var prop = this.descriptor.prop;\n      var childKey = prop.path;\n      var parentKey = prop.parentPath;\n      var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n      var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n        updateProp(child, prop, val);\n      }, {\n        twoWay: twoWay,\n        filters: prop.filters,\n        // important: props need to be observed on the\n        // v-for scope if present\n        scope: this._scope\n      });\n\n      // set the child initial value.\n      initProp(child, prop, parentWatcher.value);\n\n      // setup two-way binding\n      if (twoWay) {\n        // important: defer the child watcher creation until\n        // the created hook (after data observation)\n        var self = this;\n        child.$once('pre-hook:created', function () {\n          self.childWatcher = new Watcher(child, childKey, function (val) {\n            parentWatcher.set(val);\n          }, {\n            // ensure sync upward before parent sync down.\n            // this is necessary in cases e.g. the child\n            // mutates a prop array, then replaces it. (#1683)\n            sync: true\n          });\n        });\n      }\n    },\n\n    unbind: function unbind() {\n      this.parentWatcher.teardown();\n      if (this.childWatcher) {\n        this.childWatcher.teardown();\n      }\n    }\n  };\n\n  var queue$1 = [];\n  var queued = false;\n\n  /**\n   * Push a job into the queue.\n   *\n   * @param {Function} job\n   */\n\n  function pushJob(job) {\n    queue$1.push(job);\n    if (!queued) {\n      queued = true;\n      nextTick(flush);\n    }\n  }\n\n  /**\n   * Flush the queue, and do one forced reflow before\n   * triggering transitions.\n   */\n\n  function flush() {\n    // Force layout\n    var f = document.documentElement.offsetHeight;\n    for (var i = 0; i < queue$1.length; i++) {\n      queue$1[i]();\n    }\n    queue$1 = [];\n    queued = false;\n    // dummy return, so js linters don't complain about\n    // unused variable f\n    return f;\n  }\n\n  var TYPE_TRANSITION = 'transition';\n  var TYPE_ANIMATION = 'animation';\n  var transDurationProp = transitionProp + 'Duration';\n  var animDurationProp = animationProp + 'Duration';\n\n  /**\n   * If a just-entered element is applied the\n   * leave class while its enter transition hasn't started yet,\n   * and the transitioned property has the same value for both\n   * enter/leave, then the leave transition will be skipped and\n   * the transitionend event never fires. This function ensures\n   * its callback to be called after a transition has started\n   * by waiting for double raf.\n   *\n   * It falls back to setTimeout on devices that support CSS\n   * transitions but not raf (e.g. Android 4.2 browser) - since\n   * these environments are usually slow, we are giving it a\n   * relatively large timeout.\n   */\n\n  var raf = inBrowser && window.requestAnimationFrame;\n  var waitForTransitionStart = raf\n  /* istanbul ignore next */\n  ? function (fn) {\n    raf(function () {\n      raf(fn);\n    });\n  } : function (fn) {\n    setTimeout(fn, 50);\n  };\n\n  /**\n   * A Transition object that encapsulates the state and logic\n   * of the transition.\n   *\n   * @param {Element} el\n   * @param {String} id\n   * @param {Object} hooks\n   * @param {Vue} vm\n   */\n  function Transition(el, id, hooks, vm) {\n    this.id = id;\n    this.el = el;\n    this.enterClass = hooks && hooks.enterClass || id + '-enter';\n    this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n    this.hooks = hooks;\n    this.vm = vm;\n    // async state\n    this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n    this.justEntered = false;\n    this.entered = this.left = false;\n    this.typeCache = {};\n    // check css transition type\n    this.type = hooks && hooks.type;\n    /* istanbul ignore if */\n    if ('development' !== 'production') {\n      if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n        warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n      }\n    }\n    // bind\n    var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n      self[m] = bind(self[m], self);\n    });\n  }\n\n  var p$1 = Transition.prototype;\n\n  /**\n   * Start an entering transition.\n   *\n   * 1. enter transition triggered\n   * 2. call beforeEnter hook\n   * 3. add enter class\n   * 4. insert/show element\n   * 5. call enter hook (with possible explicit js callback)\n   * 6. reflow\n   * 7. based on transition type:\n   *    - transition:\n   *        remove class now, wait for transitionend,\n   *        then done if there's no explicit js callback.\n   *    - animation:\n   *        wait for animationend, remove class,\n   *        then done if there's no explicit js callback.\n   *    - no css transition:\n   *        done now if there's no explicit js callback.\n   * 8. wait for either done or js callback, then call\n   *    afterEnter hook.\n   *\n   * @param {Function} op - insert/show the element\n   * @param {Function} [cb]\n   */\n\n  p$1.enter = function (op, cb) {\n    this.cancelPending();\n    this.callHook('beforeEnter');\n    this.cb = cb;\n    addClass(this.el, this.enterClass);\n    op();\n    this.entered = false;\n    this.callHookWithCb('enter');\n    if (this.entered) {\n      return; // user called done synchronously.\n    }\n    this.cancel = this.hooks && this.hooks.enterCancelled;\n    pushJob(this.enterNextTick);\n  };\n\n  /**\n   * The \"nextTick\" phase of an entering transition, which is\n   * to be pushed into a queue and executed after a reflow so\n   * that removing the class can trigger a CSS transition.\n   */\n\n  p$1.enterNextTick = function () {\n    var _this = this;\n\n    // prevent transition skipping\n    this.justEntered = true;\n    waitForTransitionStart(function () {\n      _this.justEntered = false;\n    });\n    var enterDone = this.enterDone;\n    var type = this.getCssTransitionType(this.enterClass);\n    if (!this.pendingJsCb) {\n      if (type === TYPE_TRANSITION) {\n        // trigger transition by removing enter class now\n        removeClass(this.el, this.enterClass);\n        this.setupCssCb(transitionEndEvent, enterDone);\n      } else if (type === TYPE_ANIMATION) {\n        this.setupCssCb(animationEndEvent, enterDone);\n      } else {\n        enterDone();\n      }\n    } else if (type === TYPE_TRANSITION) {\n      removeClass(this.el, this.enterClass);\n    }\n  };\n\n  /**\n   * The \"cleanup\" phase of an entering transition.\n   */\n\n  p$1.enterDone = function () {\n    this.entered = true;\n    this.cancel = this.pendingJsCb = null;\n    removeClass(this.el, this.enterClass);\n    this.callHook('afterEnter');\n    if (this.cb) this.cb();\n  };\n\n  /**\n   * Start a leaving transition.\n   *\n   * 1. leave transition triggered.\n   * 2. call beforeLeave hook\n   * 3. add leave class (trigger css transition)\n   * 4. call leave hook (with possible explicit js callback)\n   * 5. reflow if no explicit js callback is provided\n   * 6. based on transition type:\n   *    - transition or animation:\n   *        wait for end event, remove class, then done if\n   *        there's no explicit js callback.\n   *    - no css transition:\n   *        done if there's no explicit js callback.\n   * 7. wait for either done or js callback, then call\n   *    afterLeave hook.\n   *\n   * @param {Function} op - remove/hide the element\n   * @param {Function} [cb]\n   */\n\n  p$1.leave = function (op, cb) {\n    this.cancelPending();\n    this.callHook('beforeLeave');\n    this.op = op;\n    this.cb = cb;\n    addClass(this.el, this.leaveClass);\n    this.left = false;\n    this.callHookWithCb('leave');\n    if (this.left) {\n      return; // user called done synchronously.\n    }\n    this.cancel = this.hooks && this.hooks.leaveCancelled;\n    // only need to handle leaveDone if\n    // 1. the transition is already done (synchronously called\n    //    by the user, which causes this.op set to null)\n    // 2. there's no explicit js callback\n    if (this.op && !this.pendingJsCb) {\n      // if a CSS transition leaves immediately after enter,\n      // the transitionend event never fires. therefore we\n      // detect such cases and end the leave immediately.\n      if (this.justEntered) {\n        this.leaveDone();\n      } else {\n        pushJob(this.leaveNextTick);\n      }\n    }\n  };\n\n  /**\n   * The \"nextTick\" phase of a leaving transition.\n   */\n\n  p$1.leaveNextTick = function () {\n    var type = this.getCssTransitionType(this.leaveClass);\n    if (type) {\n      var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n      this.setupCssCb(event, this.leaveDone);\n    } else {\n      this.leaveDone();\n    }\n  };\n\n  /**\n   * The \"cleanup\" phase of a leaving transition.\n   */\n\n  p$1.leaveDone = function () {\n    this.left = true;\n    this.cancel = this.pendingJsCb = null;\n    this.op();\n    removeClass(this.el, this.leaveClass);\n    this.callHook('afterLeave');\n    if (this.cb) this.cb();\n    this.op = null;\n  };\n\n  /**\n   * Cancel any pending callbacks from a previously running\n   * but not finished transition.\n   */\n\n  p$1.cancelPending = function () {\n    this.op = this.cb = null;\n    var hasPending = false;\n    if (this.pendingCssCb) {\n      hasPending = true;\n      off(this.el, this.pendingCssEvent, this.pendingCssCb);\n      this.pendingCssEvent = this.pendingCssCb = null;\n    }\n    if (this.pendingJsCb) {\n      hasPending = true;\n      this.pendingJsCb.cancel();\n      this.pendingJsCb = null;\n    }\n    if (hasPending) {\n      removeClass(this.el, this.enterClass);\n      removeClass(this.el, this.leaveClass);\n    }\n    if (this.cancel) {\n      this.cancel.call(this.vm, this.el);\n      this.cancel = null;\n    }\n  };\n\n  /**\n   * Call a user-provided synchronous hook function.\n   *\n   * @param {String} type\n   */\n\n  p$1.callHook = function (type) {\n    if (this.hooks && this.hooks[type]) {\n      this.hooks[type].call(this.vm, this.el);\n    }\n  };\n\n  /**\n   * Call a user-provided, potentially-async hook function.\n   * We check for the length of arguments to see if the hook\n   * expects a `done` callback. If true, the transition's end\n   * will be determined by when the user calls that callback;\n   * otherwise, the end is determined by the CSS transition or\n   * animation.\n   *\n   * @param {String} type\n   */\n\n  p$1.callHookWithCb = function (type) {\n    var hook = this.hooks && this.hooks[type];\n    if (hook) {\n      if (hook.length > 1) {\n        this.pendingJsCb = cancellable(this[type + 'Done']);\n      }\n      hook.call(this.vm, this.el, this.pendingJsCb);\n    }\n  };\n\n  /**\n   * Get an element's transition type based on the\n   * calculated styles.\n   *\n   * @param {String} className\n   * @return {Number}\n   */\n\n  p$1.getCssTransitionType = function (className) {\n    /* istanbul ignore if */\n    if (!transitionEndEvent ||\n    // skip CSS transitions if page is not visible -\n    // this solves the issue of transitionend events not\n    // firing until the page is visible again.\n    // pageVisibility API is supported in IE10+, same as\n    // CSS transitions.\n    document.hidden ||\n    // explicit js-only transition\n    this.hooks && this.hooks.css === false ||\n    // element is hidden\n    isHidden(this.el)) {\n      return;\n    }\n    var type = this.type || this.typeCache[className];\n    if (type) return type;\n    var inlineStyles = this.el.style;\n    var computedStyles = window.getComputedStyle(this.el);\n    var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n    if (transDuration && transDuration !== '0s') {\n      type = TYPE_TRANSITION;\n    } else {\n      var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n      if (animDuration && animDuration !== '0s') {\n        type = TYPE_ANIMATION;\n      }\n    }\n    if (type) {\n      this.typeCache[className] = type;\n    }\n    return type;\n  };\n\n  /**\n   * Setup a CSS transitionend/animationend callback.\n   *\n   * @param {String} event\n   * @param {Function} cb\n   */\n\n  p$1.setupCssCb = function (event, cb) {\n    this.pendingCssEvent = event;\n    var self = this;\n    var el = this.el;\n    var onEnd = this.pendingCssCb = function (e) {\n      if (e.target === el) {\n        off(el, event, onEnd);\n        self.pendingCssEvent = self.pendingCssCb = null;\n        if (!self.pendingJsCb && cb) {\n          cb();\n        }\n      }\n    };\n    on(el, event, onEnd);\n  };\n\n  /**\n   * Check if an element is hidden - in that case we can just\n   * skip the transition alltogether.\n   *\n   * @param {Element} el\n   * @return {Boolean}\n   */\n\n  function isHidden(el) {\n    if (/svg$/.test(el.namespaceURI)) {\n      // SVG elements do not have offset(Width|Height)\n      // so we need to check the client rect\n      var rect = el.getBoundingClientRect();\n      return !(rect.width || rect.height);\n    } else {\n      return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n    }\n  }\n\n  var transition$1 = {\n\n    priority: TRANSITION,\n\n    update: function update(id, oldId) {\n      var el = this.el;\n      // resolve on owner vm\n      var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n      id = id || 'v';\n      oldId = oldId || 'v';\n      el.__v_trans = new Transition(el, id, hooks, this.vm);\n      removeClass(el, oldId + '-transition');\n      addClass(el, id + '-transition');\n    }\n  };\n\n  var internalDirectives = {\n    style: style,\n    'class': vClass,\n    component: component,\n    prop: propDef,\n    transition: transition$1\n  };\n\n  // special binding prefixes\n  var bindRE = /^v-bind:|^:/;\n  var onRE = /^v-on:|^@/;\n  var dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n  var modifierRE = /\\.[^\\.]+/g;\n  var transitionRE = /^(v-bind:|:)?transition$/;\n\n  // default directive priority\n  var DEFAULT_PRIORITY = 1000;\n  var DEFAULT_TERMINAL_PRIORITY = 2000;\n\n  /**\n   * Compile a template and return a reusable composite link\n   * function, which recursively contains more link functions\n   * inside. This top level compile function would normally\n   * be called on instance root nodes, but can also be used\n   * for partial compilation if the partial argument is true.\n   *\n   * The returned composite link function, when called, will\n   * return an unlink function that tearsdown all directives\n   * created during the linking phase.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Object} options\n   * @param {Boolean} partial\n   * @return {Function}\n   */\n\n  function compile(el, options, partial) {\n    // link function for the node itself.\n    var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n    // link function for the childNodes\n    var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n    /**\n     * A composite linker function to be called on a already\n     * compiled piece of DOM, which instantiates all directive\n     * instances.\n     *\n     * @param {Vue} vm\n     * @param {Element|DocumentFragment} el\n     * @param {Vue} [host] - host vm of transcluded content\n     * @param {Object} [scope] - v-for scope\n     * @param {Fragment} [frag] - link context fragment\n     * @return {Function|undefined}\n     */\n\n    return function compositeLinkFn(vm, el, host, scope, frag) {\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(el.childNodes);\n      // link\n      var dirs = linkAndCapture(function compositeLinkCapturer() {\n        if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n        if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n      }, vm);\n      return makeUnlinkFn(vm, dirs);\n    };\n  }\n\n  /**\n   * Apply a linker to a vm/element pair and capture the\n   * directives created during the process.\n   *\n   * @param {Function} linker\n   * @param {Vue} vm\n   */\n\n  function linkAndCapture(linker, vm) {\n    /* istanbul ignore if */\n    if ('development' === 'production') {}\n    var originalDirCount = vm._directives.length;\n    linker();\n    var dirs = vm._directives.slice(originalDirCount);\n    dirs.sort(directiveComparator);\n    for (var i = 0, l = dirs.length; i < l; i++) {\n      dirs[i]._bind();\n    }\n    return dirs;\n  }\n\n  /**\n   * Directive priority sort comparator\n   *\n   * @param {Object} a\n   * @param {Object} b\n   */\n\n  function directiveComparator(a, b) {\n    a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n    b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n    return a > b ? -1 : a === b ? 0 : 1;\n  }\n\n  /**\n   * Linker functions return an unlink function that\n   * tearsdown all directives instances generated during\n   * the process.\n   *\n   * We create unlink functions with only the necessary\n   * information to avoid retaining additional closures.\n   *\n   * @param {Vue} vm\n   * @param {Array} dirs\n   * @param {Vue} [context]\n   * @param {Array} [contextDirs]\n   * @return {Function}\n   */\n\n  function makeUnlinkFn(vm, dirs, context, contextDirs) {\n    function unlink(destroying) {\n      teardownDirs(vm, dirs, destroying);\n      if (context && contextDirs) {\n        teardownDirs(context, contextDirs);\n      }\n    }\n    // expose linked directives\n    unlink.dirs = dirs;\n    return unlink;\n  }\n\n  /**\n   * Teardown partial linked directives.\n   *\n   * @param {Vue} vm\n   * @param {Array} dirs\n   * @param {Boolean} destroying\n   */\n\n  function teardownDirs(vm, dirs, destroying) {\n    var i = dirs.length;\n    while (i--) {\n      dirs[i]._teardown();\n      if ('development' !== 'production' && !destroying) {\n        vm._directives.$remove(dirs[i]);\n      }\n    }\n  }\n\n  /**\n   * Compile link props on an instance.\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   * @param {Object} props\n   * @param {Object} [scope]\n   * @return {Function}\n   */\n\n  function compileAndLinkProps(vm, el, props, scope) {\n    var propsLinkFn = compileProps(el, props, vm);\n    var propDirs = linkAndCapture(function () {\n      propsLinkFn(vm, scope);\n    }, vm);\n    return makeUnlinkFn(vm, propDirs);\n  }\n\n  /**\n   * Compile the root element of an instance.\n   *\n   * 1. attrs on context container (context scope)\n   * 2. attrs on the component template root node, if\n   *    replace:true (child scope)\n   *\n   * If this is a fragment instance, we only need to compile 1.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @param {Object} contextOptions\n   * @return {Function}\n   */\n\n  function compileRoot(el, options, contextOptions) {\n    var containerAttrs = options._containerAttrs;\n    var replacerAttrs = options._replacerAttrs;\n    var contextLinkFn, replacerLinkFn;\n\n    // only need to compile other attributes for\n    // non-fragment instances\n    if (el.nodeType !== 11) {\n      // for components, container and replacer need to be\n      // compiled separately and linked in different scopes.\n      if (options._asComponent) {\n        // 2. container attributes\n        if (containerAttrs && contextOptions) {\n          contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n        }\n        if (replacerAttrs) {\n          // 3. replacer attributes\n          replacerLinkFn = compileDirectives(replacerAttrs, options);\n        }\n      } else {\n        // non-component, just compile as a normal element.\n        replacerLinkFn = compileDirectives(el.attributes, options);\n      }\n    } else if ('development' !== 'production' && containerAttrs) {\n      // warn container directives for fragment instances\n      var names = containerAttrs.filter(function (attr) {\n        // allow vue-loader/vueify scoped css attributes\n        return attr.name.indexOf('_v-') < 0 &&\n        // allow event listeners\n        !onRE.test(attr.name) &&\n        // allow slots\n        attr.name !== 'slot';\n      }).map(function (attr) {\n        return '\"' + attr.name + '\"';\n      });\n      if (names.length) {\n        var plural = names.length > 1;\n        warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n      }\n    }\n\n    options._containerAttrs = options._replacerAttrs = null;\n    return function rootLinkFn(vm, el, scope) {\n      // link context scope dirs\n      var context = vm._context;\n      var contextDirs;\n      if (context && contextLinkFn) {\n        contextDirs = linkAndCapture(function () {\n          contextLinkFn(context, el, null, scope);\n        }, context);\n      }\n\n      // link self\n      var selfDirs = linkAndCapture(function () {\n        if (replacerLinkFn) replacerLinkFn(vm, el);\n      }, vm);\n\n      // return the unlink function that tearsdown context\n      // container directives.\n      return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n    };\n  }\n\n  /**\n   * Compile a node and return a nodeLinkFn based on the\n   * node type.\n   *\n   * @param {Node} node\n   * @param {Object} options\n   * @return {Function|null}\n   */\n\n  function compileNode(node, options) {\n    var type = node.nodeType;\n    if (type === 1 && !isScript(node)) {\n      return compileElement(node, options);\n    } else if (type === 3 && node.data.trim()) {\n      return compileTextNode(node, options);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Compile an element and return a nodeLinkFn.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function|null}\n   */\n\n  function compileElement(el, options) {\n    // preprocess textareas.\n    // textarea treats its text content as the initial value.\n    // just bind it as an attr directive for value.\n    if (el.tagName === 'TEXTAREA') {\n      var tokens = parseText(el.value);\n      if (tokens) {\n        el.setAttribute(':value', tokensToExp(tokens));\n        el.value = '';\n      }\n    }\n    var linkFn;\n    var hasAttrs = el.hasAttributes();\n    var attrs = hasAttrs && toArray(el.attributes);\n    // check terminal directives (for & if)\n    if (hasAttrs) {\n      linkFn = checkTerminalDirectives(el, attrs, options);\n    }\n    // check element directives\n    if (!linkFn) {\n      linkFn = checkElementDirectives(el, options);\n    }\n    // check component\n    if (!linkFn) {\n      linkFn = checkComponent(el, options);\n    }\n    // normal directives\n    if (!linkFn && hasAttrs) {\n      linkFn = compileDirectives(attrs, options);\n    }\n    return linkFn;\n  }\n\n  /**\n   * Compile a textNode and return a nodeLinkFn.\n   *\n   * @param {TextNode} node\n   * @param {Object} options\n   * @return {Function|null} textNodeLinkFn\n   */\n\n  function compileTextNode(node, options) {\n    // skip marked text nodes\n    if (node._skip) {\n      return removeText;\n    }\n\n    var tokens = parseText(node.wholeText);\n    if (!tokens) {\n      return null;\n    }\n\n    // mark adjacent text nodes as skipped,\n    // because we are using node.wholeText to compile\n    // all adjacent text nodes together. This fixes\n    // issues in IE where sometimes it splits up a single\n    // text node into multiple ones.\n    var next = node.nextSibling;\n    while (next && next.nodeType === 3) {\n      next._skip = true;\n      next = next.nextSibling;\n    }\n\n    var frag = document.createDocumentFragment();\n    var el, token;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n      frag.appendChild(el);\n    }\n    return makeTextNodeLinkFn(tokens, frag, options);\n  }\n\n  /**\n   * Linker for an skipped text node.\n   *\n   * @param {Vue} vm\n   * @param {Text} node\n   */\n\n  function removeText(vm, node) {\n    remove(node);\n  }\n\n  /**\n   * Process a single text token.\n   *\n   * @param {Object} token\n   * @param {Object} options\n   * @return {Node}\n   */\n\n  function processTextToken(token, options) {\n    var el;\n    if (token.oneTime) {\n      el = document.createTextNode(token.value);\n    } else {\n      if (token.html) {\n        el = document.createComment('v-html');\n        setTokenType('html');\n      } else {\n        // IE will clean up empty textNodes during\n        // frag.cloneNode(true), so we have to give it\n        // something here...\n        el = document.createTextNode(' ');\n        setTokenType('text');\n      }\n    }\n    function setTokenType(type) {\n      if (token.descriptor) return;\n      var parsed = parseDirective(token.value);\n      token.descriptor = {\n        name: type,\n        def: directives[type],\n        expression: parsed.expression,\n        filters: parsed.filters\n      };\n    }\n    return el;\n  }\n\n  /**\n   * Build a function that processes a textNode.\n   *\n   * @param {Array<Object>} tokens\n   * @param {DocumentFragment} frag\n   */\n\n  function makeTextNodeLinkFn(tokens, frag) {\n    return function textNodeLinkFn(vm, el, host, scope) {\n      var fragClone = frag.cloneNode(true);\n      var childNodes = toArray(fragClone.childNodes);\n      var token, value, node;\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        token = tokens[i];\n        value = token.value;\n        if (token.tag) {\n          node = childNodes[i];\n          if (token.oneTime) {\n            value = (scope || vm).$eval(value);\n            if (token.html) {\n              replace(node, parseTemplate(value, true));\n            } else {\n              node.data = _toString(value);\n            }\n          } else {\n            vm._bindDir(token.descriptor, node, host, scope);\n          }\n        }\n      }\n      replace(el, fragClone);\n    };\n  }\n\n  /**\n   * Compile a node list and return a childLinkFn.\n   *\n   * @param {NodeList} nodeList\n   * @param {Object} options\n   * @return {Function|undefined}\n   */\n\n  function compileNodeList(nodeList, options) {\n    var linkFns = [];\n    var nodeLinkFn, childLinkFn, node;\n    for (var i = 0, l = nodeList.length; i < l; i++) {\n      node = nodeList[i];\n      nodeLinkFn = compileNode(node, options);\n      childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n      linkFns.push(nodeLinkFn, childLinkFn);\n    }\n    return linkFns.length ? makeChildLinkFn(linkFns) : null;\n  }\n\n  /**\n   * Make a child link function for a node's childNodes.\n   *\n   * @param {Array<Function>} linkFns\n   * @return {Function} childLinkFn\n   */\n\n  function makeChildLinkFn(linkFns) {\n    return function childLinkFn(vm, nodes, host, scope, frag) {\n      var node, nodeLinkFn, childrenLinkFn;\n      for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n        node = nodes[n];\n        nodeLinkFn = linkFns[i++];\n        childrenLinkFn = linkFns[i++];\n        // cache childNodes before linking parent, fix #657\n        var childNodes = toArray(node.childNodes);\n        if (nodeLinkFn) {\n          nodeLinkFn(vm, node, host, scope, frag);\n        }\n        if (childrenLinkFn) {\n          childrenLinkFn(vm, childNodes, host, scope, frag);\n        }\n      }\n    };\n  }\n\n  /**\n   * Check for element directives (custom elements that should\n   * be resovled as terminal directives).\n   *\n   * @param {Element} el\n   * @param {Object} options\n   */\n\n  function checkElementDirectives(el, options) {\n    var tag = el.tagName.toLowerCase();\n    if (commonTagRE.test(tag)) {\n      return;\n    }\n    var def = resolveAsset(options, 'elementDirectives', tag);\n    if (def) {\n      return makeTerminalNodeLinkFn(el, tag, '', options, def);\n    }\n  }\n\n  /**\n   * Check if an element is a component. If yes, return\n   * a component link function.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function|undefined}\n   */\n\n  function checkComponent(el, options) {\n    var component = checkComponentAttr(el, options);\n    if (component) {\n      var ref = findRef(el);\n      var descriptor = {\n        name: 'component',\n        ref: ref,\n        expression: component.id,\n        def: internalDirectives.component,\n        modifiers: {\n          literal: !component.dynamic\n        }\n      };\n      var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n        if (ref) {\n          defineReactive((scope || vm).$refs, ref, null);\n        }\n        vm._bindDir(descriptor, el, host, scope, frag);\n      };\n      componentLinkFn.terminal = true;\n      return componentLinkFn;\n    }\n  }\n\n  /**\n   * Check an element for terminal directives in fixed order.\n   * If it finds one, return a terminal link function.\n   *\n   * @param {Element} el\n   * @param {Array} attrs\n   * @param {Object} options\n   * @return {Function} terminalLinkFn\n   */\n\n  function checkTerminalDirectives(el, attrs, options) {\n    // skip v-pre\n    if (getAttr(el, 'v-pre') !== null) {\n      return skip;\n    }\n    // skip v-else block, but only if following v-if\n    if (el.hasAttribute('v-else')) {\n      var prev = el.previousElementSibling;\n      if (prev && prev.hasAttribute('v-if')) {\n        return skip;\n      }\n    }\n\n    var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n    for (var i = 0, j = attrs.length; i < j; i++) {\n      attr = attrs[i];\n      name = attr.name.replace(modifierRE, '');\n      if (matched = name.match(dirAttrRE)) {\n        def = resolveAsset(options, 'directives', matched[1]);\n        if (def && def.terminal) {\n          if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n            termDef = def;\n            rawName = attr.name;\n            modifiers = parseModifiers(attr.name);\n            value = attr.value;\n            dirName = matched[1];\n            arg = matched[2];\n          }\n        }\n      }\n    }\n\n    if (termDef) {\n      return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n    }\n  }\n\n  function skip() {}\n  skip.terminal = true;\n\n  /**\n   * Build a node link function for a terminal directive.\n   * A terminal link function terminates the current\n   * compilation recursion and handles compilation of the\n   * subtree in the directive.\n   *\n   * @param {Element} el\n   * @param {String} dirName\n   * @param {String} value\n   * @param {Object} options\n   * @param {Object} def\n   * @param {String} [rawName]\n   * @param {String} [arg]\n   * @param {Object} [modifiers]\n   * @return {Function} terminalLinkFn\n   */\n\n  function makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n    var parsed = parseDirective(value);\n    var descriptor = {\n      name: dirName,\n      arg: arg,\n      expression: parsed.expression,\n      filters: parsed.filters,\n      raw: value,\n      attr: rawName,\n      modifiers: modifiers,\n      def: def\n    };\n    // check ref for v-for and router-view\n    if (dirName === 'for' || dirName === 'router-view') {\n      descriptor.ref = findRef(el);\n    }\n    var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n      if (descriptor.ref) {\n        defineReactive((scope || vm).$refs, descriptor.ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    fn.terminal = true;\n    return fn;\n  }\n\n  /**\n   * Compile the directives on an element and return a linker.\n   *\n   * @param {Array|NamedNodeMap} attrs\n   * @param {Object} options\n   * @return {Function}\n   */\n\n  function compileDirectives(attrs, options) {\n    var i = attrs.length;\n    var dirs = [];\n    var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n    while (i--) {\n      attr = attrs[i];\n      name = rawName = attr.name;\n      value = rawValue = attr.value;\n      tokens = parseText(value);\n      // reset arg\n      arg = null;\n      // check modifiers\n      modifiers = parseModifiers(name);\n      name = name.replace(modifierRE, '');\n\n      // attribute interpolations\n      if (tokens) {\n        value = tokensToExp(tokens);\n        arg = name;\n        pushDir('bind', directives.bind, tokens);\n        // warn against mixing mustaches with v-bind\n        if ('development' !== 'production') {\n          if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n            return attr.name === ':class' || attr.name === 'v-bind:class';\n          })) {\n            warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n          }\n        }\n      } else\n\n        // special attribute: transition\n        if (transitionRE.test(name)) {\n          modifiers.literal = !bindRE.test(name);\n          pushDir('transition', internalDirectives.transition);\n        } else\n\n          // event handlers\n          if (onRE.test(name)) {\n            arg = name.replace(onRE, '');\n            pushDir('on', directives.on);\n          } else\n\n            // attribute bindings\n            if (bindRE.test(name)) {\n              dirName = name.replace(bindRE, '');\n              if (dirName === 'style' || dirName === 'class') {\n                pushDir(dirName, internalDirectives[dirName]);\n              } else {\n                arg = dirName;\n                pushDir('bind', directives.bind);\n              }\n            } else\n\n              // normal directives\n              if (matched = name.match(dirAttrRE)) {\n                dirName = matched[1];\n                arg = matched[2];\n\n                // skip v-else (when used with v-show)\n                if (dirName === 'else') {\n                  continue;\n                }\n\n                dirDef = resolveAsset(options, 'directives', dirName, true);\n                if (dirDef) {\n                  pushDir(dirName, dirDef);\n                }\n              }\n    }\n\n    /**\n     * Push a directive.\n     *\n     * @param {String} dirName\n     * @param {Object|Function} def\n     * @param {Array} [interpTokens]\n     */\n\n    function pushDir(dirName, def, interpTokens) {\n      var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n      var parsed = !hasOneTimeToken && parseDirective(value);\n      dirs.push({\n        name: dirName,\n        attr: rawName,\n        raw: rawValue,\n        def: def,\n        arg: arg,\n        modifiers: modifiers,\n        // conversion from interpolation strings with one-time token\n        // to expression is differed until directive bind time so that we\n        // have access to the actual vm context for one-time bindings.\n        expression: parsed && parsed.expression,\n        filters: parsed && parsed.filters,\n        interp: interpTokens,\n        hasOneTime: hasOneTimeToken\n      });\n    }\n\n    if (dirs.length) {\n      return makeNodeLinkFn(dirs);\n    }\n  }\n\n  /**\n   * Parse modifiers from directive attribute name.\n   *\n   * @param {String} name\n   * @return {Object}\n   */\n\n  function parseModifiers(name) {\n    var res = Object.create(null);\n    var match = name.match(modifierRE);\n    if (match) {\n      var i = match.length;\n      while (i--) {\n        res[match[i].slice(1)] = true;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Build a link function for all directives on a single node.\n   *\n   * @param {Array} directives\n   * @return {Function} directivesLinkFn\n   */\n\n  function makeNodeLinkFn(directives) {\n    return function nodeLinkFn(vm, el, host, scope, frag) {\n      // reverse apply because it's sorted low to high\n      var i = directives.length;\n      while (i--) {\n        vm._bindDir(directives[i], el, host, scope, frag);\n      }\n    };\n  }\n\n  /**\n   * Check if an interpolation string contains one-time tokens.\n   *\n   * @param {Array} tokens\n   * @return {Boolean}\n   */\n\n  function hasOneTime(tokens) {\n    var i = tokens.length;\n    while (i--) {\n      if (tokens[i].oneTime) return true;\n    }\n  }\n\n  function isScript(el) {\n    return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n  }\n\n  var specialCharRE = /[^\\w\\-:\\.]/;\n\n  /**\n   * Process an element or a DocumentFragment based on a\n   * instance option object. This allows us to transclude\n   * a template node/fragment before the instance is created,\n   * so the processed fragment can then be cloned and reused\n   * in v-for.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Element|DocumentFragment}\n   */\n\n  function transclude(el, options) {\n    // extract container attributes to pass them down\n    // to compiler, because they need to be compiled in\n    // parent scope. we are mutating the options object here\n    // assuming the same object will be used for compile\n    // right after this.\n    if (options) {\n      options._containerAttrs = extractAttrs(el);\n    }\n    // for template tags, what we want is its content as\n    // a documentFragment (for fragment instances)\n    if (isTemplate(el)) {\n      el = parseTemplate(el);\n    }\n    if (options) {\n      if (options._asComponent && !options.template) {\n        options.template = '<slot></slot>';\n      }\n      if (options.template) {\n        options._content = extractContent(el);\n        el = transcludeTemplate(el, options);\n      }\n    }\n    if (isFragment(el)) {\n      // anchors for fragment instance\n      // passing in `persist: true` to avoid them being\n      // discarded by IE during template cloning\n      prepend(createAnchor('v-start', true), el);\n      el.appendChild(createAnchor('v-end', true));\n    }\n    return el;\n  }\n\n  /**\n   * Process the template option.\n   * If the replace option is true this will swap the $el.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Element|DocumentFragment}\n   */\n\n  function transcludeTemplate(el, options) {\n    var template = options.template;\n    var frag = parseTemplate(template, true);\n    if (frag) {\n      var replacer = frag.firstChild;\n      var tag = replacer.tagName && replacer.tagName.toLowerCase();\n      if (options.replace) {\n        /* istanbul ignore if */\n        if (el === document.body) {\n          'development' !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n        }\n        // there are many cases where the instance must\n        // become a fragment instance: basically anything that\n        // can create more than 1 root nodes.\n        if (\n        // multi-children template\n        frag.childNodes.length > 1 ||\n        // non-element template\n        replacer.nodeType !== 1 ||\n        // single nested component\n        tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n        // element directive\n        resolveAsset(options, 'elementDirectives', tag) ||\n        // for block\n        replacer.hasAttribute('v-for') ||\n        // if block\n        replacer.hasAttribute('v-if')) {\n          return frag;\n        } else {\n          options._replacerAttrs = extractAttrs(replacer);\n          mergeAttrs(el, replacer);\n          return replacer;\n        }\n      } else {\n        el.appendChild(frag);\n        return el;\n      }\n    } else {\n      'development' !== 'production' && warn('Invalid template option: ' + template);\n    }\n  }\n\n  /**\n   * Helper to extract a component container's attributes\n   * into a plain object array.\n   *\n   * @param {Element} el\n   * @return {Array}\n   */\n\n  function extractAttrs(el) {\n    if (el.nodeType === 1 && el.hasAttributes()) {\n      return toArray(el.attributes);\n    }\n  }\n\n  /**\n   * Merge the attributes of two elements, and make sure\n   * the class names are merged properly.\n   *\n   * @param {Element} from\n   * @param {Element} to\n   */\n\n  function mergeAttrs(from, to) {\n    var attrs = from.attributes;\n    var i = attrs.length;\n    var name, value;\n    while (i--) {\n      name = attrs[i].name;\n      value = attrs[i].value;\n      if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n        to.setAttribute(name, value);\n      } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n        value.split(/\\s+/).forEach(function (cls) {\n          addClass(to, cls);\n        });\n      }\n    }\n  }\n\n  /**\n   * Scan and determine slot content distribution.\n   * We do this during transclusion instead at compile time so that\n   * the distribution is decoupled from the compilation order of\n   * the slots.\n   *\n   * @param {Element|DocumentFragment} template\n   * @param {Element} content\n   * @param {Vue} vm\n   */\n\n  function resolveSlots(vm, content) {\n    if (!content) {\n      return;\n    }\n    var contents = vm._slotContents = Object.create(null);\n    var el, name;\n    for (var i = 0, l = content.children.length; i < l; i++) {\n      el = content.children[i];\n      /* eslint-disable no-cond-assign */\n      if (name = el.getAttribute('slot')) {\n        (contents[name] || (contents[name] = [])).push(el);\n      }\n      /* eslint-enable no-cond-assign */\n      if ('development' !== 'production' && getBindAttr(el, 'slot')) {\n        warn('The \"slot\" attribute must be static.', vm.$parent);\n      }\n    }\n    for (name in contents) {\n      contents[name] = extractFragment(contents[name], content);\n    }\n    if (content.hasChildNodes()) {\n      var nodes = content.childNodes;\n      if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n        return;\n      }\n      contents['default'] = extractFragment(content.childNodes, content);\n    }\n  }\n\n  /**\n   * Extract qualified content nodes from a node list.\n   *\n   * @param {NodeList} nodes\n   * @return {DocumentFragment}\n   */\n\n  function extractFragment(nodes, parent) {\n    var frag = document.createDocumentFragment();\n    nodes = toArray(nodes);\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      var node = nodes[i];\n      if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n        parent.removeChild(node);\n        node = parseTemplate(node, true);\n      }\n      frag.appendChild(node);\n    }\n    return frag;\n  }\n\n\n\n  var compiler = Object.freeze({\n  \tcompile: compile,\n  \tcompileAndLinkProps: compileAndLinkProps,\n  \tcompileRoot: compileRoot,\n  \ttransclude: transclude,\n  \tresolveSlots: resolveSlots\n  });\n\n  function stateMixin (Vue) {\n    /**\n     * Accessor for `$data` property, since setting $data\n     * requires observing the new object and updating\n     * proxied properties.\n     */\n\n    Object.defineProperty(Vue.prototype, '$data', {\n      get: function get() {\n        return this._data;\n      },\n      set: function set(newData) {\n        if (newData !== this._data) {\n          this._setData(newData);\n        }\n      }\n    });\n\n    /**\n     * Setup the scope of an instance, which contains:\n     * - observed data\n     * - computed properties\n     * - user methods\n     * - meta properties\n     */\n\n    Vue.prototype._initState = function () {\n      this._initProps();\n      this._initMeta();\n      this._initMethods();\n      this._initData();\n      this._initComputed();\n    };\n\n    /**\n     * Initialize props.\n     */\n\n    Vue.prototype._initProps = function () {\n      var options = this.$options;\n      var el = options.el;\n      var props = options.props;\n      if (props && !el) {\n        'development' !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n      }\n      // make sure to convert string selectors into element now\n      el = options.el = query(el);\n      this._propsUnlinkFn = el && el.nodeType === 1 && props\n      // props must be linked in proper scope if inside v-for\n      ? compileAndLinkProps(this, el, props, this._scope) : null;\n    };\n\n    /**\n     * Initialize the data.\n     */\n\n    Vue.prototype._initData = function () {\n      var dataFn = this.$options.data;\n      var data = this._data = dataFn ? dataFn() : {};\n      if (!isPlainObject(data)) {\n        data = {};\n        'development' !== 'production' && warn('data functions should return an object.', this);\n      }\n      var props = this._props;\n      // proxy data on instance\n      var keys = Object.keys(data);\n      var i, key;\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        // there are two scenarios where we can proxy a data key:\n        // 1. it's not already defined as a prop\n        // 2. it's provided via a instantiation option AND there are no\n        //    template prop present\n        if (!props || !hasOwn(props, key)) {\n          this._proxy(key);\n        } else if ('development' !== 'production') {\n          warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n        }\n      }\n      // observe data\n      observe(data, this);\n    };\n\n    /**\n     * Swap the instance's $data. Called in $data's setter.\n     *\n     * @param {Object} newData\n     */\n\n    Vue.prototype._setData = function (newData) {\n      newData = newData || {};\n      var oldData = this._data;\n      this._data = newData;\n      var keys, key, i;\n      // unproxy keys not present in new data\n      keys = Object.keys(oldData);\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        if (!(key in newData)) {\n          this._unproxy(key);\n        }\n      }\n      // proxy keys not already proxied,\n      // and trigger change for changed values\n      keys = Object.keys(newData);\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        if (!hasOwn(this, key)) {\n          // new property\n          this._proxy(key);\n        }\n      }\n      oldData.__ob__.removeVm(this);\n      observe(newData, this);\n      this._digest();\n    };\n\n    /**\n     * Proxy a property, so that\n     * vm.prop === vm._data.prop\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype._proxy = function (key) {\n      if (!isReserved(key)) {\n        // need to store ref to self here\n        // because these getter/setters might\n        // be called by child scopes via\n        // prototype inheritance.\n        var self = this;\n        Object.defineProperty(self, key, {\n          configurable: true,\n          enumerable: true,\n          get: function proxyGetter() {\n            return self._data[key];\n          },\n          set: function proxySetter(val) {\n            self._data[key] = val;\n          }\n        });\n      }\n    };\n\n    /**\n     * Unproxy a property.\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype._unproxy = function (key) {\n      if (!isReserved(key)) {\n        delete this[key];\n      }\n    };\n\n    /**\n     * Force update on every watcher in scope.\n     */\n\n    Vue.prototype._digest = function () {\n      for (var i = 0, l = this._watchers.length; i < l; i++) {\n        this._watchers[i].update(true); // shallow updates\n      }\n    };\n\n    /**\n     * Setup computed properties. They are essentially\n     * special getter/setters\n     */\n\n    function noop() {}\n    Vue.prototype._initComputed = function () {\n      var computed = this.$options.computed;\n      if (computed) {\n        for (var key in computed) {\n          var userDef = computed[key];\n          var def = {\n            enumerable: true,\n            configurable: true\n          };\n          if (typeof userDef === 'function') {\n            def.get = makeComputedGetter(userDef, this);\n            def.set = noop;\n          } else {\n            def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n            def.set = userDef.set ? bind(userDef.set, this) : noop;\n          }\n          Object.defineProperty(this, key, def);\n        }\n      }\n    };\n\n    function makeComputedGetter(getter, owner) {\n      var watcher = new Watcher(owner, getter, null, {\n        lazy: true\n      });\n      return function computedGetter() {\n        if (watcher.dirty) {\n          watcher.evaluate();\n        }\n        if (Dep.target) {\n          watcher.depend();\n        }\n        return watcher.value;\n      };\n    }\n\n    /**\n     * Setup instance methods. Methods must be bound to the\n     * instance since they might be passed down as a prop to\n     * child components.\n     */\n\n    Vue.prototype._initMethods = function () {\n      var methods = this.$options.methods;\n      if (methods) {\n        for (var key in methods) {\n          this[key] = bind(methods[key], this);\n        }\n      }\n    };\n\n    /**\n     * Initialize meta information like $index, $key & $value.\n     */\n\n    Vue.prototype._initMeta = function () {\n      var metas = this.$options._meta;\n      if (metas) {\n        for (var key in metas) {\n          defineReactive(this, key, metas[key]);\n        }\n      }\n    };\n  }\n\n  var eventRE = /^v-on:|^@/;\n\n  function eventsMixin (Vue) {\n    /**\n     * Setup the instance's option events & watchers.\n     * If the value is a string, we pull it from the\n     * instance's methods by name.\n     */\n\n    Vue.prototype._initEvents = function () {\n      var options = this.$options;\n      if (options._asComponent) {\n        registerComponentEvents(this, options.el);\n      }\n      registerCallbacks(this, '$on', options.events);\n      registerCallbacks(this, '$watch', options.watch);\n    };\n\n    /**\n     * Register v-on events on a child component\n     *\n     * @param {Vue} vm\n     * @param {Element} el\n     */\n\n    function registerComponentEvents(vm, el) {\n      var attrs = el.attributes;\n      var name, value, handler;\n      for (var i = 0, l = attrs.length; i < l; i++) {\n        name = attrs[i].name;\n        if (eventRE.test(name)) {\n          name = name.replace(eventRE, '');\n          // force the expression into a statement so that\n          // it always dynamically resolves the method to call (#2670)\n          // kinda ugly hack, but does the job.\n          value = attrs[i].value;\n          if (isSimplePath(value)) {\n            value += '.apply(this, $arguments)';\n          }\n          handler = (vm._scope || vm._context).$eval(value, true);\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        }\n      }\n    }\n\n    /**\n     * Register callbacks for option events and watchers.\n     *\n     * @param {Vue} vm\n     * @param {String} action\n     * @param {Object} hash\n     */\n\n    function registerCallbacks(vm, action, hash) {\n      if (!hash) return;\n      var handlers, key, i, j;\n      for (key in hash) {\n        handlers = hash[key];\n        if (isArray(handlers)) {\n          for (i = 0, j = handlers.length; i < j; i++) {\n            register(vm, action, key, handlers[i]);\n          }\n        } else {\n          register(vm, action, key, handlers);\n        }\n      }\n    }\n\n    /**\n     * Helper to register an event/watch callback.\n     *\n     * @param {Vue} vm\n     * @param {String} action\n     * @param {String} key\n     * @param {Function|String|Object} handler\n     * @param {Object} [options]\n     */\n\n    function register(vm, action, key, handler, options) {\n      var type = typeof handler;\n      if (type === 'function') {\n        vm[action](key, handler, options);\n      } else if (type === 'string') {\n        var methods = vm.$options.methods;\n        var method = methods && methods[handler];\n        if (method) {\n          vm[action](key, method, options);\n        } else {\n          'development' !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n        }\n      } else if (handler && type === 'object') {\n        register(vm, action, key, handler.handler, handler);\n      }\n    }\n\n    /**\n     * Setup recursive attached/detached calls\n     */\n\n    Vue.prototype._initDOMHooks = function () {\n      this.$on('hook:attached', onAttached);\n      this.$on('hook:detached', onDetached);\n    };\n\n    /**\n     * Callback to recursively call attached hook on children\n     */\n\n    function onAttached() {\n      if (!this._isAttached) {\n        this._isAttached = true;\n        this.$children.forEach(callAttach);\n      }\n    }\n\n    /**\n     * Iterator to call attached hook\n     *\n     * @param {Vue} child\n     */\n\n    function callAttach(child) {\n      if (!child._isAttached && inDoc(child.$el)) {\n        child._callHook('attached');\n      }\n    }\n\n    /**\n     * Callback to recursively call detached hook on children\n     */\n\n    function onDetached() {\n      if (this._isAttached) {\n        this._isAttached = false;\n        this.$children.forEach(callDetach);\n      }\n    }\n\n    /**\n     * Iterator to call detached hook\n     *\n     * @param {Vue} child\n     */\n\n    function callDetach(child) {\n      if (child._isAttached && !inDoc(child.$el)) {\n        child._callHook('detached');\n      }\n    }\n\n    /**\n     * Trigger all handlers for a hook\n     *\n     * @param {String} hook\n     */\n\n    Vue.prototype._callHook = function (hook) {\n      this.$emit('pre-hook:' + hook);\n      var handlers = this.$options[hook];\n      if (handlers) {\n        for (var i = 0, j = handlers.length; i < j; i++) {\n          handlers[i].call(this);\n        }\n      }\n      this.$emit('hook:' + hook);\n    };\n  }\n\n  function noop$1() {}\n\n  /**\n   * A directive links a DOM element with a piece of data,\n   * which is the result of evaluating an expression.\n   * It registers a watcher with the expression and calls\n   * the DOM update function when a change is triggered.\n   *\n   * @param {Object} descriptor\n   *                 - {String} name\n   *                 - {Object} def\n   *                 - {String} expression\n   *                 - {Array<Object>} [filters]\n   *                 - {Object} [modifiers]\n   *                 - {Boolean} literal\n   *                 - {String} attr\n   *                 - {String} arg\n   *                 - {String} raw\n   *                 - {String} [ref]\n   *                 - {Array<Object>} [interp]\n   *                 - {Boolean} [hasOneTime]\n   * @param {Vue} vm\n   * @param {Node} el\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   * @constructor\n   */\n  function Directive(descriptor, vm, el, host, scope, frag) {\n    this.vm = vm;\n    this.el = el;\n    // copy descriptor properties\n    this.descriptor = descriptor;\n    this.name = descriptor.name;\n    this.expression = descriptor.expression;\n    this.arg = descriptor.arg;\n    this.modifiers = descriptor.modifiers;\n    this.filters = descriptor.filters;\n    this.literal = this.modifiers && this.modifiers.literal;\n    // private\n    this._locked = false;\n    this._bound = false;\n    this._listeners = null;\n    // link context\n    this._host = host;\n    this._scope = scope;\n    this._frag = frag;\n    // store directives on node in dev mode\n    if ('development' !== 'production' && this.el) {\n      this.el._vue_directives = this.el._vue_directives || [];\n      this.el._vue_directives.push(this);\n    }\n  }\n\n  /**\n   * Initialize the directive, mixin definition properties,\n   * setup the watcher, call definition bind() and update()\n   * if present.\n   */\n\n  Directive.prototype._bind = function () {\n    var name = this.name;\n    var descriptor = this.descriptor;\n\n    // remove attribute\n    if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n      var attr = descriptor.attr || 'v-' + name;\n      this.el.removeAttribute(attr);\n    }\n\n    // copy def properties\n    var def = descriptor.def;\n    if (typeof def === 'function') {\n      this.update = def;\n    } else {\n      extend(this, def);\n    }\n\n    // setup directive params\n    this._setupParams();\n\n    // initial bind\n    if (this.bind) {\n      this.bind();\n    }\n    this._bound = true;\n\n    if (this.literal) {\n      this.update && this.update(descriptor.raw);\n    } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n      // wrapped updater for context\n      var dir = this;\n      if (this.update) {\n        this._update = function (val, oldVal) {\n          if (!dir._locked) {\n            dir.update(val, oldVal);\n          }\n        };\n      } else {\n        this._update = noop$1;\n      }\n      var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n      var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n      var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n      {\n        filters: this.filters,\n        twoWay: this.twoWay,\n        deep: this.deep,\n        preProcess: preProcess,\n        postProcess: postProcess,\n        scope: this._scope\n      });\n      // v-model with inital inline value need to sync back to\n      // model instead of update to DOM on init. They would\n      // set the afterBind hook to indicate that.\n      if (this.afterBind) {\n        this.afterBind();\n      } else if (this.update) {\n        this.update(watcher.value);\n      }\n    }\n  };\n\n  /**\n   * Setup all param attributes, e.g. track-by,\n   * transition-mode, etc...\n   */\n\n  Directive.prototype._setupParams = function () {\n    if (!this.params) {\n      return;\n    }\n    var params = this.params;\n    // swap the params array with a fresh object.\n    this.params = Object.create(null);\n    var i = params.length;\n    var key, val, mappedKey;\n    while (i--) {\n      key = hyphenate(params[i]);\n      mappedKey = camelize(key);\n      val = getBindAttr(this.el, key);\n      if (val != null) {\n        // dynamic\n        this._setupParamWatcher(mappedKey, val);\n      } else {\n        // static\n        val = getAttr(this.el, key);\n        if (val != null) {\n          this.params[mappedKey] = val === '' ? true : val;\n        }\n      }\n    }\n  };\n\n  /**\n   * Setup a watcher for a dynamic param.\n   *\n   * @param {String} key\n   * @param {String} expression\n   */\n\n  Directive.prototype._setupParamWatcher = function (key, expression) {\n    var self = this;\n    var called = false;\n    var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n      self.params[key] = val;\n      // since we are in immediate mode,\n      // only call the param change callbacks if this is not the first update.\n      if (called) {\n        var cb = self.paramWatchers && self.paramWatchers[key];\n        if (cb) {\n          cb.call(self, val, oldVal);\n        }\n      } else {\n        called = true;\n      }\n    }, {\n      immediate: true,\n      user: false\n    });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n  };\n\n  /**\n   * Check if the directive is a function caller\n   * and if the expression is a callable one. If both true,\n   * we wrap up the expression and use it as the event\n   * handler.\n   *\n   * e.g. on-click=\"a++\"\n   *\n   * @return {Boolean}\n   */\n\n  Directive.prototype._checkStatement = function () {\n    var expression = this.expression;\n    if (expression && this.acceptStatement && !isSimplePath(expression)) {\n      var fn = parseExpression(expression).get;\n      var scope = this._scope || this.vm;\n      var handler = function handler(e) {\n        scope.$event = e;\n        fn.call(scope, scope);\n        scope.$event = null;\n      };\n      if (this.filters) {\n        handler = scope._applyFilters(handler, null, this.filters);\n      }\n      this.update(handler);\n      return true;\n    }\n  };\n\n  /**\n   * Set the corresponding value with the setter.\n   * This should only be used in two-way directives\n   * e.g. v-model.\n   *\n   * @param {*} value\n   * @public\n   */\n\n  Directive.prototype.set = function (value) {\n    /* istanbul ignore else */\n    if (this.twoWay) {\n      this._withLock(function () {\n        this._watcher.set(value);\n      });\n    } else if ('development' !== 'production') {\n      warn('Directive.set() can only be used inside twoWay' + 'directives.');\n    }\n  };\n\n  /**\n   * Execute a function while preventing that function from\n   * triggering updates on this directive instance.\n   *\n   * @param {Function} fn\n   */\n\n  Directive.prototype._withLock = function (fn) {\n    var self = this;\n    self._locked = true;\n    fn.call(self);\n    nextTick(function () {\n      self._locked = false;\n    });\n  };\n\n  /**\n   * Convenience method that attaches a DOM event listener\n   * to the directive element and autometically tears it down\n   * during unbind.\n   *\n   * @param {String} event\n   * @param {Function} handler\n   * @param {Boolean} [useCapture]\n   */\n\n  Directive.prototype.on = function (event, handler, useCapture) {\n    on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n  };\n\n  /**\n   * Teardown the watcher and call unbind.\n   */\n\n  Directive.prototype._teardown = function () {\n    if (this._bound) {\n      this._bound = false;\n      if (this.unbind) {\n        this.unbind();\n      }\n      if (this._watcher) {\n        this._watcher.teardown();\n      }\n      var listeners = this._listeners;\n      var i;\n      if (listeners) {\n        i = listeners.length;\n        while (i--) {\n          off(this.el, listeners[i][0], listeners[i][1]);\n        }\n      }\n      var unwatchFns = this._paramUnwatchFns;\n      if (unwatchFns) {\n        i = unwatchFns.length;\n        while (i--) {\n          unwatchFns[i]();\n        }\n      }\n      if ('development' !== 'production' && this.el) {\n        this.el._vue_directives.$remove(this);\n      }\n      this.vm = this.el = this._watcher = this._listeners = null;\n    }\n  };\n\n  function lifecycleMixin (Vue) {\n    /**\n     * Update v-ref for component.\n     *\n     * @param {Boolean} remove\n     */\n\n    Vue.prototype._updateRef = function (remove) {\n      var ref = this.$options._ref;\n      if (ref) {\n        var refs = (this._scope || this._context).$refs;\n        if (remove) {\n          if (refs[ref] === this) {\n            refs[ref] = null;\n          }\n        } else {\n          refs[ref] = this;\n        }\n      }\n    };\n\n    /**\n     * Transclude, compile and link element.\n     *\n     * If a pre-compiled linker is available, that means the\n     * passed in element will be pre-transcluded and compiled\n     * as well - all we need to do is to call the linker.\n     *\n     * Otherwise we need to call transclude/compile/link here.\n     *\n     * @param {Element} el\n     */\n\n    Vue.prototype._compile = function (el) {\n      var options = this.$options;\n\n      // transclude and init element\n      // transclude can potentially replace original\n      // so we need to keep reference; this step also injects\n      // the template and caches the original attributes\n      // on the container node and replacer node.\n      var original = el;\n      el = transclude(el, options);\n      this._initElement(el);\n\n      // handle v-pre on root node (#2026)\n      if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n        return;\n      }\n\n      // root is always compiled per-instance, because\n      // container attrs and props can be different every time.\n      var contextOptions = this._context && this._context.$options;\n      var rootLinker = compileRoot(el, options, contextOptions);\n\n      // resolve slot distribution\n      resolveSlots(this, options._content);\n\n      // compile and link the rest\n      var contentLinkFn;\n      var ctor = this.constructor;\n      // component compilation can be cached\n      // as long as it's not using inline-template\n      if (options._linkerCachable) {\n        contentLinkFn = ctor.linker;\n        if (!contentLinkFn) {\n          contentLinkFn = ctor.linker = compile(el, options);\n        }\n      }\n\n      // link phase\n      // make sure to link root with prop scope!\n      var rootUnlinkFn = rootLinker(this, el, this._scope);\n      var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n      // register composite unlink function\n      // to be called during instance destruction\n      this._unlinkFn = function () {\n        rootUnlinkFn();\n        // passing destroying: true to avoid searching and\n        // splicing the directives\n        contentUnlinkFn(true);\n      };\n\n      // finally replace original\n      if (options.replace) {\n        replace(original, el);\n      }\n\n      this._isCompiled = true;\n      this._callHook('compiled');\n    };\n\n    /**\n     * Initialize instance element. Called in the public\n     * $mount() method.\n     *\n     * @param {Element} el\n     */\n\n    Vue.prototype._initElement = function (el) {\n      if (isFragment(el)) {\n        this._isFragment = true;\n        this.$el = this._fragmentStart = el.firstChild;\n        this._fragmentEnd = el.lastChild;\n        // set persisted text anchors to empty\n        if (this._fragmentStart.nodeType === 3) {\n          this._fragmentStart.data = this._fragmentEnd.data = '';\n        }\n        this._fragment = el;\n      } else {\n        this.$el = el;\n      }\n      this.$el.__vue__ = this;\n      this._callHook('beforeCompile');\n    };\n\n    /**\n     * Create and bind a directive to an element.\n     *\n     * @param {Object} descriptor - parsed directive descriptor\n     * @param {Node} node   - target node\n     * @param {Vue} [host] - transclusion host component\n     * @param {Object} [scope] - v-for scope\n     * @param {Fragment} [frag] - owner fragment\n     */\n\n    Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n      this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n    };\n\n    /**\n     * Teardown an instance, unobserves the data, unbind all the\n     * directives, turn off all the event listeners, etc.\n     *\n     * @param {Boolean} remove - whether to remove the DOM node.\n     * @param {Boolean} deferCleanup - if true, defer cleanup to\n     *                                 be called later\n     */\n\n    Vue.prototype._destroy = function (remove, deferCleanup) {\n      if (this._isBeingDestroyed) {\n        if (!deferCleanup) {\n          this._cleanup();\n        }\n        return;\n      }\n\n      var destroyReady;\n      var pendingRemoval;\n\n      var self = this;\n      // Cleanup should be called either synchronously or asynchronoysly as\n      // callback of this.$remove(), or if remove and deferCleanup are false.\n      // In any case it should be called after all other removing, unbinding and\n      // turning of is done\n      var cleanupIfPossible = function cleanupIfPossible() {\n        if (destroyReady && !pendingRemoval && !deferCleanup) {\n          self._cleanup();\n        }\n      };\n\n      // remove DOM element\n      if (remove && this.$el) {\n        pendingRemoval = true;\n        this.$remove(function () {\n          pendingRemoval = false;\n          cleanupIfPossible();\n        });\n      }\n\n      this._callHook('beforeDestroy');\n      this._isBeingDestroyed = true;\n      var i;\n      // remove self from parent. only necessary\n      // if parent is not being destroyed as well.\n      var parent = this.$parent;\n      if (parent && !parent._isBeingDestroyed) {\n        parent.$children.$remove(this);\n        // unregister ref (remove: true)\n        this._updateRef(true);\n      }\n      // destroy all children.\n      i = this.$children.length;\n      while (i--) {\n        this.$children[i].$destroy();\n      }\n      // teardown props\n      if (this._propsUnlinkFn) {\n        this._propsUnlinkFn();\n      }\n      // teardown all directives. this also tearsdown all\n      // directive-owned watchers.\n      if (this._unlinkFn) {\n        this._unlinkFn();\n      }\n      i = this._watchers.length;\n      while (i--) {\n        this._watchers[i].teardown();\n      }\n      // remove reference to self on $el\n      if (this.$el) {\n        this.$el.__vue__ = null;\n      }\n\n      destroyReady = true;\n      cleanupIfPossible();\n    };\n\n    /**\n     * Clean up to ensure garbage collection.\n     * This is called after the leave transition if there\n     * is any.\n     */\n\n    Vue.prototype._cleanup = function () {\n      if (this._isDestroyed) {\n        return;\n      }\n      // remove self from owner fragment\n      // do it in cleanup so that we can call $destroy with\n      // defer right when a fragment is about to be removed.\n      if (this._frag) {\n        this._frag.children.$remove(this);\n      }\n      // remove reference from data ob\n      // frozen object may not have observer.\n      if (this._data && this._data.__ob__) {\n        this._data.__ob__.removeVm(this);\n      }\n      // Clean up references to private properties and other\n      // instances. preserve reference to _data so that proxy\n      // accessors still work. The only potential side effect\n      // here is that mutating the instance after it's destroyed\n      // may affect the state of other components that are still\n      // observing the same object, but that seems to be a\n      // reasonable responsibility for the user rather than\n      // always throwing an error on them.\n      this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n      // call the last hook...\n      this._isDestroyed = true;\n      this._callHook('destroyed');\n      // turn off all instance listeners.\n      this.$off();\n    };\n  }\n\n  function miscMixin (Vue) {\n    /**\n     * Apply a list of filter (descriptors) to a value.\n     * Using plain for loops here because this will be called in\n     * the getter of any watcher with filters so it is very\n     * performance sensitive.\n     *\n     * @param {*} value\n     * @param {*} [oldValue]\n     * @param {Array} filters\n     * @param {Boolean} write\n     * @return {*}\n     */\n\n    Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n      var filter, fn, args, arg, offset, i, l, j, k;\n      for (i = 0, l = filters.length; i < l; i++) {\n        filter = filters[write ? l - i - 1 : i];\n        fn = resolveAsset(this.$options, 'filters', filter.name, true);\n        if (!fn) continue;\n        fn = write ? fn.write : fn.read || fn;\n        if (typeof fn !== 'function') continue;\n        args = write ? [value, oldValue] : [value];\n        offset = write ? 2 : 1;\n        if (filter.args) {\n          for (j = 0, k = filter.args.length; j < k; j++) {\n            arg = filter.args[j];\n            args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n          }\n        }\n        value = fn.apply(this, args);\n      }\n      return value;\n    };\n\n    /**\n     * Resolve a component, depending on whether the component\n     * is defined normally or using an async factory function.\n     * Resolves synchronously if already resolved, otherwise\n     * resolves asynchronously and caches the resolved\n     * constructor on the factory.\n     *\n     * @param {String|Function} value\n     * @param {Function} cb\n     */\n\n    Vue.prototype._resolveComponent = function (value, cb) {\n      var factory;\n      if (typeof value === 'function') {\n        factory = value;\n      } else {\n        factory = resolveAsset(this.$options, 'components', value, true);\n      }\n      /* istanbul ignore if */\n      if (!factory) {\n        return;\n      }\n      // async component factory\n      if (!factory.options) {\n        if (factory.resolved) {\n          // cached\n          cb(factory.resolved);\n        } else if (factory.requested) {\n          // pool callbacks\n          factory.pendingCallbacks.push(cb);\n        } else {\n          factory.requested = true;\n          var cbs = factory.pendingCallbacks = [cb];\n          factory.call(this, function resolve(res) {\n            if (isPlainObject(res)) {\n              res = Vue.extend(res);\n            }\n            // cache resolved\n            factory.resolved = res;\n            // invoke callbacks\n            for (var i = 0, l = cbs.length; i < l; i++) {\n              cbs[i](res);\n            }\n          }, function reject(reason) {\n            'development' !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n          });\n        }\n      } else {\n        // normal component\n        cb(factory);\n      }\n    };\n  }\n\n  var filterRE$1 = /[^|]\\|[^|]/;\n\n  function dataAPI (Vue) {\n    /**\n     * Get the value from an expression on this vm.\n     *\n     * @param {String} exp\n     * @param {Boolean} [asStatement]\n     * @return {*}\n     */\n\n    Vue.prototype.$get = function (exp, asStatement) {\n      var res = parseExpression(exp);\n      if (res) {\n        if (asStatement) {\n          var self = this;\n          return function statementHandler() {\n            self.$arguments = toArray(arguments);\n            var result = res.get.call(self, self);\n            self.$arguments = null;\n            return result;\n          };\n        } else {\n          try {\n            return res.get.call(this, this);\n          } catch (e) {}\n        }\n      }\n    };\n\n    /**\n     * Set the value from an expression on this vm.\n     * The expression must be a valid left-hand\n     * expression in an assignment.\n     *\n     * @param {String} exp\n     * @param {*} val\n     */\n\n    Vue.prototype.$set = function (exp, val) {\n      var res = parseExpression(exp, true);\n      if (res && res.set) {\n        res.set.call(this, this, val);\n      }\n    };\n\n    /**\n     * Delete a property on the VM\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype.$delete = function (key) {\n      del(this._data, key);\n    };\n\n    /**\n     * Watch an expression, trigger callback when its\n     * value changes.\n     *\n     * @param {String|Function} expOrFn\n     * @param {Function} cb\n     * @param {Object} [options]\n     *                 - {Boolean} deep\n     *                 - {Boolean} immediate\n     * @return {Function} - unwatchFn\n     */\n\n    Vue.prototype.$watch = function (expOrFn, cb, options) {\n      var vm = this;\n      var parsed;\n      if (typeof expOrFn === 'string') {\n        parsed = parseDirective(expOrFn);\n        expOrFn = parsed.expression;\n      }\n      var watcher = new Watcher(vm, expOrFn, cb, {\n        deep: options && options.deep,\n        sync: options && options.sync,\n        filters: parsed && parsed.filters,\n        user: !options || options.user !== false\n      });\n      if (options && options.immediate) {\n        cb.call(vm, watcher.value);\n      }\n      return function unwatchFn() {\n        watcher.teardown();\n      };\n    };\n\n    /**\n     * Evaluate a text directive, including filters.\n     *\n     * @param {String} text\n     * @param {Boolean} [asStatement]\n     * @return {String}\n     */\n\n    Vue.prototype.$eval = function (text, asStatement) {\n      // check for filters.\n      if (filterRE$1.test(text)) {\n        var dir = parseDirective(text);\n        // the filter regex check might give false positive\n        // for pipes inside strings, so it's possible that\n        // we don't get any filters here\n        var val = this.$get(dir.expression, asStatement);\n        return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n      } else {\n        // no filter\n        return this.$get(text, asStatement);\n      }\n    };\n\n    /**\n     * Interpolate a piece of template text.\n     *\n     * @param {String} text\n     * @return {String}\n     */\n\n    Vue.prototype.$interpolate = function (text) {\n      var tokens = parseText(text);\n      var vm = this;\n      if (tokens) {\n        if (tokens.length === 1) {\n          return vm.$eval(tokens[0].value) + '';\n        } else {\n          return tokens.map(function (token) {\n            return token.tag ? vm.$eval(token.value) : token.value;\n          }).join('');\n        }\n      } else {\n        return text;\n      }\n    };\n\n    /**\n     * Log instance data as a plain JS object\n     * so that it is easier to inspect in console.\n     * This method assumes console is available.\n     *\n     * @param {String} [path]\n     */\n\n    Vue.prototype.$log = function (path) {\n      var data = path ? getPath(this._data, path) : this._data;\n      if (data) {\n        data = clean(data);\n      }\n      // include computed fields\n      if (!path) {\n        var key;\n        for (key in this.$options.computed) {\n          data[key] = clean(this[key]);\n        }\n        if (this._props) {\n          for (key in this._props) {\n            data[key] = clean(this[key]);\n          }\n        }\n      }\n      console.log(data);\n    };\n\n    /**\n     * \"clean\" a getter/setter converted object into a plain\n     * object copy.\n     *\n     * @param {Object} - obj\n     * @return {Object}\n     */\n\n    function clean(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n  }\n\n  function domAPI (Vue) {\n    /**\n     * Convenience on-instance nextTick. The callback is\n     * auto-bound to the instance, and this avoids component\n     * modules having to rely on the global Vue.\n     *\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$nextTick = function (fn) {\n      nextTick(fn, this);\n    };\n\n    /**\n     * Append instance to target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$appendTo = function (target, cb, withTransition) {\n      return insert(this, target, cb, withTransition, append, appendWithTransition);\n    };\n\n    /**\n     * Prepend instance to target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$prependTo = function (target, cb, withTransition) {\n      target = query(target);\n      if (target.hasChildNodes()) {\n        this.$before(target.firstChild, cb, withTransition);\n      } else {\n        this.$appendTo(target, cb, withTransition);\n      }\n      return this;\n    };\n\n    /**\n     * Insert instance before target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$before = function (target, cb, withTransition) {\n      return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n    };\n\n    /**\n     * Insert instance after target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$after = function (target, cb, withTransition) {\n      target = query(target);\n      if (target.nextSibling) {\n        this.$before(target.nextSibling, cb, withTransition);\n      } else {\n        this.$appendTo(target.parentNode, cb, withTransition);\n      }\n      return this;\n    };\n\n    /**\n     * Remove instance from DOM\n     *\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$remove = function (cb, withTransition) {\n      if (!this.$el.parentNode) {\n        return cb && cb();\n      }\n      var inDocument = this._isAttached && inDoc(this.$el);\n      // if we are not in document, no need to check\n      // for transitions\n      if (!inDocument) withTransition = false;\n      var self = this;\n      var realCb = function realCb() {\n        if (inDocument) self._callHook('detached');\n        if (cb) cb();\n      };\n      if (this._isFragment) {\n        removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n      } else {\n        var op = withTransition === false ? removeWithCb : removeWithTransition;\n        op(this.$el, this, realCb);\n      }\n      return this;\n    };\n\n    /**\n     * Shared DOM insertion function.\n     *\n     * @param {Vue} vm\n     * @param {Element} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition]\n     * @param {Function} op1 - op for non-transition insert\n     * @param {Function} op2 - op for transition insert\n     * @return vm\n     */\n\n    function insert(vm, target, cb, withTransition, op1, op2) {\n      target = query(target);\n      var targetIsDetached = !inDoc(target);\n      var op = withTransition === false || targetIsDetached ? op1 : op2;\n      var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n      if (vm._isFragment) {\n        mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n          op(node, target, vm);\n        });\n        cb && cb();\n      } else {\n        op(vm.$el, target, vm, cb);\n      }\n      if (shouldCallHook) {\n        vm._callHook('attached');\n      }\n      return vm;\n    }\n\n    /**\n     * Check for selectors\n     *\n     * @param {String|Element} el\n     */\n\n    function query(el) {\n      return typeof el === 'string' ? document.querySelector(el) : el;\n    }\n\n    /**\n     * Append operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Node} target\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function append(el, target, vm, cb) {\n      target.appendChild(el);\n      if (cb) cb();\n    }\n\n    /**\n     * InsertBefore operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Node} target\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function beforeWithCb(el, target, vm, cb) {\n      before(el, target);\n      if (cb) cb();\n    }\n\n    /**\n     * Remove operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function removeWithCb(el, vm, cb) {\n      remove(el);\n      if (cb) cb();\n    }\n  }\n\n  function eventsAPI (Vue) {\n    /**\n     * Listen on the given `event` with `fn`.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$on = function (event, fn) {\n      (this._events[event] || (this._events[event] = [])).push(fn);\n      modifyListenerCount(this, event, 1);\n      return this;\n    };\n\n    /**\n     * Adds an `event` listener that will be invoked a single\n     * time then automatically removed.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$once = function (event, fn) {\n      var self = this;\n      function on() {\n        self.$off(event, on);\n        fn.apply(this, arguments);\n      }\n      on.fn = fn;\n      this.$on(event, on);\n      return this;\n    };\n\n    /**\n     * Remove the given callback for `event` or all\n     * registered callbacks.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$off = function (event, fn) {\n      var cbs;\n      // all\n      if (!arguments.length) {\n        if (this.$parent) {\n          for (event in this._events) {\n            cbs = this._events[event];\n            if (cbs) {\n              modifyListenerCount(this, event, -cbs.length);\n            }\n          }\n        }\n        this._events = {};\n        return this;\n      }\n      // specific event\n      cbs = this._events[event];\n      if (!cbs) {\n        return this;\n      }\n      if (arguments.length === 1) {\n        modifyListenerCount(this, event, -cbs.length);\n        this._events[event] = null;\n        return this;\n      }\n      // specific handler\n      var cb;\n      var i = cbs.length;\n      while (i--) {\n        cb = cbs[i];\n        if (cb === fn || cb.fn === fn) {\n          modifyListenerCount(this, event, -1);\n          cbs.splice(i, 1);\n          break;\n        }\n      }\n      return this;\n    };\n\n    /**\n     * Trigger an event on self.\n     *\n     * @param {String|Object} event\n     * @return {Boolean} shouldPropagate\n     */\n\n    Vue.prototype.$emit = function (event) {\n      var isSource = typeof event === 'string';\n      event = isSource ? event : event.name;\n      var cbs = this._events[event];\n      var shouldPropagate = isSource || !cbs;\n      if (cbs) {\n        cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n        // this is a somewhat hacky solution to the question raised\n        // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n        // the propagation handling is somewhat broken. Therefore we\n        // need to treat these inline callbacks differently.\n        var hasParentCbs = isSource && cbs.some(function (cb) {\n          return cb._fromParent;\n        });\n        if (hasParentCbs) {\n          shouldPropagate = false;\n        }\n        var args = toArray(arguments, 1);\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          var cb = cbs[i];\n          var res = cb.apply(this, args);\n          if (res === true && (!hasParentCbs || cb._fromParent)) {\n            shouldPropagate = true;\n          }\n        }\n      }\n      return shouldPropagate;\n    };\n\n    /**\n     * Recursively broadcast an event to all children instances.\n     *\n     * @param {String|Object} event\n     * @param {...*} additional arguments\n     */\n\n    Vue.prototype.$broadcast = function (event) {\n      var isSource = typeof event === 'string';\n      event = isSource ? event : event.name;\n      // if no child has registered for this event,\n      // then there's no need to broadcast.\n      if (!this._eventsCount[event]) return;\n      var children = this.$children;\n      var args = toArray(arguments);\n      if (isSource) {\n        // use object event to indicate non-source emit\n        // on children\n        args[0] = { name: event, source: this };\n      }\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n        var shouldPropagate = child.$emit.apply(child, args);\n        if (shouldPropagate) {\n          child.$broadcast.apply(child, args);\n        }\n      }\n      return this;\n    };\n\n    /**\n     * Recursively propagate an event up the parent chain.\n     *\n     * @param {String} event\n     * @param {...*} additional arguments\n     */\n\n    Vue.prototype.$dispatch = function (event) {\n      var shouldPropagate = this.$emit.apply(this, arguments);\n      if (!shouldPropagate) return;\n      var parent = this.$parent;\n      var args = toArray(arguments);\n      // use object event to indicate non-source emit\n      // on parents\n      args[0] = { name: event, source: this };\n      while (parent) {\n        shouldPropagate = parent.$emit.apply(parent, args);\n        parent = shouldPropagate ? parent.$parent : null;\n      }\n      return this;\n    };\n\n    /**\n     * Modify the listener counts on all parents.\n     * This bookkeeping allows $broadcast to return early when\n     * no child has listened to a certain event.\n     *\n     * @param {Vue} vm\n     * @param {String} event\n     * @param {Number} count\n     */\n\n    var hookRE = /^hook:/;\n    function modifyListenerCount(vm, event, count) {\n      var parent = vm.$parent;\n      // hooks do not get broadcasted so no need\n      // to do bookkeeping for them\n      if (!parent || !count || hookRE.test(event)) return;\n      while (parent) {\n        parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n        parent = parent.$parent;\n      }\n    }\n  }\n\n  function lifecycleAPI (Vue) {\n    /**\n     * Set instance target element and kick off the compilation\n     * process. The passed in `el` can be a selector string, an\n     * existing Element, or a DocumentFragment (for block\n     * instances).\n     *\n     * @param {Element|DocumentFragment|string} el\n     * @public\n     */\n\n    Vue.prototype.$mount = function (el) {\n      if (this._isCompiled) {\n        'development' !== 'production' && warn('$mount() should be called only once.', this);\n        return;\n      }\n      el = query(el);\n      if (!el) {\n        el = document.createElement('div');\n      }\n      this._compile(el);\n      this._initDOMHooks();\n      if (inDoc(this.$el)) {\n        this._callHook('attached');\n        ready.call(this);\n      } else {\n        this.$once('hook:attached', ready);\n      }\n      return this;\n    };\n\n    /**\n     * Mark an instance as ready.\n     */\n\n    function ready() {\n      this._isAttached = true;\n      this._isReady = true;\n      this._callHook('ready');\n    }\n\n    /**\n     * Teardown the instance, simply delegate to the internal\n     * _destroy.\n     *\n     * @param {Boolean} remove\n     * @param {Boolean} deferCleanup\n     */\n\n    Vue.prototype.$destroy = function (remove, deferCleanup) {\n      this._destroy(remove, deferCleanup);\n    };\n\n    /**\n     * Partially compile a piece of DOM and return a\n     * decompile function.\n     *\n     * @param {Element|DocumentFragment} el\n     * @param {Vue} [host]\n     * @param {Object} [scope]\n     * @param {Fragment} [frag]\n     * @return {Function}\n     */\n\n    Vue.prototype.$compile = function (el, host, scope, frag) {\n      return compile(el, this.$options, true)(this, el, host, scope, frag);\n    };\n  }\n\n  /**\n   * The exposed Vue constructor.\n   *\n   * API conventions:\n   * - public API methods/properties are prefixed with `$`\n   * - internal methods/properties are prefixed with `_`\n   * - non-prefixed properties are assumed to be proxied user\n   *   data.\n   *\n   * @constructor\n   * @param {Object} [options]\n   * @public\n   */\n\n  function Vue(options) {\n    this._init(options);\n  }\n\n  // install internals\n  initMixin(Vue);\n  stateMixin(Vue);\n  eventsMixin(Vue);\n  lifecycleMixin(Vue);\n  miscMixin(Vue);\n\n  // install instance APIs\n  dataAPI(Vue);\n  domAPI(Vue);\n  eventsAPI(Vue);\n  lifecycleAPI(Vue);\n\n  var slot = {\n\n    priority: SLOT,\n    params: ['name'],\n\n    bind: function bind() {\n      // this was resolved during component transclusion\n      var name = this.params.name || 'default';\n      var content = this.vm._slotContents && this.vm._slotContents[name];\n      if (!content || !content.hasChildNodes()) {\n        this.fallback();\n      } else {\n        this.compile(content.cloneNode(true), this.vm._context, this.vm);\n      }\n    },\n\n    compile: function compile(content, context, host) {\n      if (content && context) {\n        if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n          // if the inserted slot has v-if\n          // inject fallback content as the v-else\n          var elseBlock = document.createElement('template');\n          elseBlock.setAttribute('v-else', '');\n          elseBlock.innerHTML = this.el.innerHTML;\n          // the else block should be compiled in child scope\n          elseBlock._context = this.vm;\n          content.appendChild(elseBlock);\n        }\n        var scope = host ? host._scope : this._scope;\n        this.unlink = context.$compile(content, host, scope, this._frag);\n      }\n      if (content) {\n        replace(this.el, content);\n      } else {\n        remove(this.el);\n      }\n    },\n\n    fallback: function fallback() {\n      this.compile(extractContent(this.el, true), this.vm);\n    },\n\n    unbind: function unbind() {\n      if (this.unlink) {\n        this.unlink();\n      }\n    }\n  };\n\n  var partial = {\n\n    priority: PARTIAL,\n\n    params: ['name'],\n\n    // watch changes to name for dynamic partials\n    paramWatchers: {\n      name: function name(value) {\n        vIf.remove.call(this);\n        if (value) {\n          this.insert(value);\n        }\n      }\n    },\n\n    bind: function bind() {\n      this.anchor = createAnchor('v-partial');\n      replace(this.el, this.anchor);\n      this.insert(this.params.name);\n    },\n\n    insert: function insert(id) {\n      var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n      if (partial) {\n        this.factory = new FragmentFactory(this.vm, partial);\n        vIf.insert.call(this);\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.frag) {\n        this.frag.destroy();\n      }\n    }\n  };\n\n  var elementDirectives = {\n    slot: slot,\n    partial: partial\n  };\n\n  var convertArray = vFor._postProcess;\n\n  /**\n   * Limit filter for arrays\n   *\n   * @param {Number} n\n   * @param {Number} offset (Decimal expected)\n   */\n\n  function limitBy(arr, n, offset) {\n    offset = offset ? parseInt(offset, 10) : 0;\n    n = toNumber(n);\n    return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n  }\n\n  /**\n   * Filter filter for arrays\n   *\n   * @param {String} search\n   * @param {String} [delimiter]\n   * @param {String} ...dataKeys\n   */\n\n  function filterBy(arr, search, delimiter) {\n    arr = convertArray(arr);\n    if (search == null) {\n      return arr;\n    }\n    if (typeof search === 'function') {\n      return arr.filter(search);\n    }\n    // cast to lowercase string\n    search = ('' + search).toLowerCase();\n    // allow optional `in` delimiter\n    // because why not\n    var n = delimiter === 'in' ? 3 : 2;\n    // extract and flatten keys\n    var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n    var res = [];\n    var item, key, val, j;\n    for (var i = 0, l = arr.length; i < l; i++) {\n      item = arr[i];\n      val = item && item.$value || item;\n      j = keys.length;\n      if (j) {\n        while (j--) {\n          key = keys[j];\n          if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n            res.push(item);\n            break;\n          }\n        }\n      } else if (contains(item, search)) {\n        res.push(item);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Filter filter for arrays\n   *\n   * @param {String|Array<String>|Function} ...sortKeys\n   * @param {Number} [order]\n   */\n\n  function orderBy(arr) {\n    var comparator = null;\n    var sortKeys = undefined;\n    arr = convertArray(arr);\n\n    // determine order (last argument)\n    var args = toArray(arguments, 1);\n    var order = args[args.length - 1];\n    if (typeof order === 'number') {\n      order = order < 0 ? -1 : 1;\n      args = args.length > 1 ? args.slice(0, -1) : args;\n    } else {\n      order = 1;\n    }\n\n    // determine sortKeys & comparator\n    var firstArg = args[0];\n    if (!firstArg) {\n      return arr;\n    } else if (typeof firstArg === 'function') {\n      // custom comparator\n      comparator = function (a, b) {\n        return firstArg(a, b) * order;\n      };\n    } else {\n      // string keys. flatten first\n      sortKeys = Array.prototype.concat.apply([], args);\n      comparator = function (a, b, i) {\n        i = i || 0;\n        return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n      };\n    }\n\n    function baseCompare(a, b, sortKeyIndex) {\n      var sortKey = sortKeys[sortKeyIndex];\n      if (sortKey) {\n        if (sortKey !== '$key') {\n          if (isObject(a) && '$value' in a) a = a.$value;\n          if (isObject(b) && '$value' in b) b = b.$value;\n        }\n        a = isObject(a) ? getPath(a, sortKey) : a;\n        b = isObject(b) ? getPath(b, sortKey) : b;\n      }\n      return a === b ? 0 : a > b ? order : -order;\n    }\n\n    // sort on a copy to avoid mutating original array\n    return arr.slice().sort(comparator);\n  }\n\n  /**\n   * String contain helper\n   *\n   * @param {*} val\n   * @param {String} search\n   */\n\n  function contains(val, search) {\n    var i;\n    if (isPlainObject(val)) {\n      var keys = Object.keys(val);\n      i = keys.length;\n      while (i--) {\n        if (contains(val[keys[i]], search)) {\n          return true;\n        }\n      }\n    } else if (isArray(val)) {\n      i = val.length;\n      while (i--) {\n        if (contains(val[i], search)) {\n          return true;\n        }\n      }\n    } else if (val != null) {\n      return val.toString().toLowerCase().indexOf(search) > -1;\n    }\n  }\n\n  var digitsRE = /(\\d{3})(?=\\d)/g;\n\n  // asset collections must be a plain object.\n  var filters = {\n\n    orderBy: orderBy,\n    filterBy: filterBy,\n    limitBy: limitBy,\n\n    /**\n     * Stringify value.\n     *\n     * @param {Number} indent\n     */\n\n    json: {\n      read: function read(value, indent) {\n        return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n      },\n      write: function write(value) {\n        try {\n          return JSON.parse(value);\n        } catch (e) {\n          return value;\n        }\n      }\n    },\n\n    /**\n     * 'abc' => 'Abc'\n     */\n\n    capitalize: function capitalize(value) {\n      if (!value && value !== 0) return '';\n      value = value.toString();\n      return value.charAt(0).toUpperCase() + value.slice(1);\n    },\n\n    /**\n     * 'abc' => 'ABC'\n     */\n\n    uppercase: function uppercase(value) {\n      return value || value === 0 ? value.toString().toUpperCase() : '';\n    },\n\n    /**\n     * 'AbC' => 'abc'\n     */\n\n    lowercase: function lowercase(value) {\n      return value || value === 0 ? value.toString().toLowerCase() : '';\n    },\n\n    /**\n     * 12345 => $12,345.00\n     *\n     * @param {String} sign\n     * @param {Number} decimals Decimal places\n     */\n\n    currency: function currency(value, _currency, decimals) {\n      value = parseFloat(value);\n      if (!isFinite(value) || !value && value !== 0) return '';\n      _currency = _currency != null ? _currency : '$';\n      decimals = decimals != null ? decimals : 2;\n      var stringified = Math.abs(value).toFixed(decimals);\n      var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n      var i = _int.length % 3;\n      var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n      var _float = decimals ? stringified.slice(-1 - decimals) : '';\n      var sign = value < 0 ? '-' : '';\n      return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n    },\n\n    /**\n     * 'item' => 'items'\n     *\n     * @params\n     *  an array of strings corresponding to\n     *  the single, double, triple ... forms of the word to\n     *  be pluralized. When the number to be pluralized\n     *  exceeds the length of the args, it will use the last\n     *  entry in the array.\n     *\n     *  e.g. ['single', 'double', 'triple', 'multiple']\n     */\n\n    pluralize: function pluralize(value) {\n      var args = toArray(arguments, 1);\n      return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n    },\n\n    /**\n     * Debounce a handler function.\n     *\n     * @param {Function} handler\n     * @param {Number} delay = 300\n     * @return {Function}\n     */\n\n    debounce: function debounce(handler, delay) {\n      if (!handler) return;\n      if (!delay) {\n        delay = 300;\n      }\n      return _debounce(handler, delay);\n    }\n  };\n\n  function installGlobalAPI (Vue) {\n    /**\n     * Vue and every constructor that extends Vue has an\n     * associated options object, which can be accessed during\n     * compilation steps as `this.constructor.options`.\n     *\n     * These can be seen as the default options of every\n     * Vue instance.\n     */\n\n    Vue.options = {\n      directives: directives,\n      elementDirectives: elementDirectives,\n      filters: filters,\n      transitions: {},\n      components: {},\n      partials: {},\n      replace: true\n    };\n\n    /**\n     * Expose useful internals\n     */\n\n    Vue.util = util;\n    Vue.config = config;\n    Vue.set = set;\n    Vue['delete'] = del;\n    Vue.nextTick = nextTick;\n\n    /**\n     * The following are exposed for advanced usage / plugins\n     */\n\n    Vue.compiler = compiler;\n    Vue.FragmentFactory = FragmentFactory;\n    Vue.internalDirectives = internalDirectives;\n    Vue.parsers = {\n      path: path,\n      text: text,\n      template: template,\n      directive: directive,\n      expression: expression\n    };\n\n    /**\n     * Each instance constructor, including Vue, has a unique\n     * cid. This enables us to create wrapped \"child\n     * constructors\" for prototypal inheritance and cache them.\n     */\n\n    Vue.cid = 0;\n    var cid = 1;\n\n    /**\n     * Class inheritance\n     *\n     * @param {Object} extendOptions\n     */\n\n    Vue.extend = function (extendOptions) {\n      extendOptions = extendOptions || {};\n      var Super = this;\n      var isFirstExtend = Super.cid === 0;\n      if (isFirstExtend && extendOptions._Ctor) {\n        return extendOptions._Ctor;\n      }\n      var name = extendOptions.name || Super.options.name;\n      if ('development' !== 'production') {\n        if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n          warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n          name = null;\n        }\n      }\n      var Sub = createClass(name || 'VueComponent');\n      Sub.prototype = Object.create(Super.prototype);\n      Sub.prototype.constructor = Sub;\n      Sub.cid = cid++;\n      Sub.options = mergeOptions(Super.options, extendOptions);\n      Sub['super'] = Super;\n      // allow further extension\n      Sub.extend = Super.extend;\n      // create asset registers, so extended classes\n      // can have their private assets too.\n      config._assetTypes.forEach(function (type) {\n        Sub[type] = Super[type];\n      });\n      // enable recursive self-lookup\n      if (name) {\n        Sub.options.components[name] = Sub;\n      }\n      // cache constructor\n      if (isFirstExtend) {\n        extendOptions._Ctor = Sub;\n      }\n      return Sub;\n    };\n\n    /**\n     * A function that returns a sub-class constructor with the\n     * given name. This gives us much nicer output when\n     * logging instances in the console.\n     *\n     * @param {String} name\n     * @return {Function}\n     */\n\n    function createClass(name) {\n      /* eslint-disable no-new-func */\n      return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n      /* eslint-enable no-new-func */\n    }\n\n    /**\n     * Plugin system\n     *\n     * @param {Object} plugin\n     */\n\n    Vue.use = function (plugin) {\n      /* istanbul ignore if */\n      if (plugin.installed) {\n        return;\n      }\n      // additional parameters\n      var args = toArray(arguments, 1);\n      args.unshift(this);\n      if (typeof plugin.install === 'function') {\n        plugin.install.apply(plugin, args);\n      } else {\n        plugin.apply(null, args);\n      }\n      plugin.installed = true;\n      return this;\n    };\n\n    /**\n     * Apply a global mixin by merging it into the default\n     * options.\n     */\n\n    Vue.mixin = function (mixin) {\n      Vue.options = mergeOptions(Vue.options, mixin);\n    };\n\n    /**\n     * Create asset registration methods with the following\n     * signature:\n     *\n     * @param {String} id\n     * @param {*} definition\n     */\n\n    config._assetTypes.forEach(function (type) {\n      Vue[type] = function (id, definition) {\n        if (!definition) {\n          return this.options[type + 's'][id];\n        } else {\n          /* istanbul ignore if */\n          if ('development' !== 'production') {\n            if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n              warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n            }\n          }\n          if (type === 'component' && isPlainObject(definition)) {\n            if (!definition.name) {\n              definition.name = id;\n            }\n            definition = Vue.extend(definition);\n          }\n          this.options[type + 's'][id] = definition;\n          return definition;\n        }\n      };\n    });\n\n    // expose internal transition API\n    extend(Vue.transition, transition);\n  }\n\n  installGlobalAPI(Vue);\n\n  Vue.version = '1.0.25';\n\n  // devtools global hook\n  /* istanbul ignore next */\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if ('development' !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n        console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n      }\n    }\n  }, 0);\n\n  return Vue;\n\n}));"]}